{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://rainbow-csv/./node_modules/call-bind/callBound.js","webpack://rainbow-csv/./node_modules/call-bind/index.js","webpack://rainbow-csv/./node_modules/for-each/index.js","webpack://rainbow-csv/./node_modules/function-bind/implementation.js","webpack://rainbow-csv/./node_modules/function-bind/index.js","webpack://rainbow-csv/./node_modules/get-intrinsic/index.js","webpack://rainbow-csv/./node_modules/has-symbols/index.js","webpack://rainbow-csv/./node_modules/has-symbols/shams.js","webpack://rainbow-csv/./node_modules/has-tostringtag/shams.js","webpack://rainbow-csv/./node_modules/has/src/index.js","webpack://rainbow-csv/./node_modules/inherits/inherits_browser.js","webpack://rainbow-csv/./node_modules/is-arguments/index.js","webpack://rainbow-csv/./node_modules/is-callable/index.js","webpack://rainbow-csv/./node_modules/is-generator-function/index.js","webpack://rainbow-csv/./node_modules/is-typed-array/index.js","webpack://rainbow-csv/./node_modules/process/browser.js","webpack://rainbow-csv/./node_modules/util/support/isBufferBrowser.js","webpack://rainbow-csv/./node_modules/util/support/types.js","webpack://rainbow-csv/./node_modules/util/util.js","webpack://rainbow-csv/./node_modules/which-typed-array/index.js","webpack://rainbow-csv/./rainbow_utils.js","webpack://rainbow-csv/./rbql_core/rbql-js/csv_utils.js","webpack://rainbow-csv/./rbql_core/rbql-js/rbql.js","webpack://rainbow-csv/./rbql_core/rbql-js/rbql_csv.js","webpack://rainbow-csv/external commonjs \"vscode\"","webpack://rainbow-csv/./node_modules/available-typed-arrays/index.js","webpack://rainbow-csv/./node_modules/es-abstract/helpers/getOwnPropertyDescriptor.js","webpack://rainbow-csv/webpack/bootstrap","webpack://rainbow-csv/webpack/runtime/global","webpack://rainbow-csv/./extension.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n","'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = $reflectApply(bind, $call, arguments);\n\tif ($gOPD && $defineProperty) {\n\t\tvar desc = $gOPD(func, 'length');\n\t\tif (desc.configurable) {\n\t\t\t// original length, plus the receiver, minus any additional arguments (after the receiver)\n\t\t\t$defineProperty(\n\t\t\t\tfunc,\n\t\t\t\t'length',\n\t\t\t\t{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }\n\t\t\t);\n\t\t}\n\t}\n\treturn func;\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('has');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n","'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nvar hasSymbols = require('has-symbols/shams');\n\nmodule.exports = function hasToStringTagShams() {\n\treturn hasSymbols() && !!Symbol.toStringTag;\n};\n","'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn $toString(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\t$toString(value) !== '[object Array]' &&\n\t\t$toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n","'use strict';\n\nvar fnToStr = Function.prototype.toString;\nvar reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;\nvar badArrayLike;\nvar isCallableMarker;\nif (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {\n\ttry {\n\t\tbadArrayLike = Object.defineProperty({}, 'length', {\n\t\t\tget: function () {\n\t\t\t\tthrow isCallableMarker;\n\t\t\t}\n\t\t});\n\t\tisCallableMarker = {};\n\t\t// eslint-disable-next-line no-throw-literal\n\t\treflectApply(function () { throw 42; }, null, badArrayLike);\n\t} catch (_) {\n\t\tif (_ !== isCallableMarker) {\n\t\t\treflectApply = null;\n\t\t}\n\t}\n} else {\n\treflectApply = null;\n}\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`\n/* globals document: false */\nvar documentDotAll = typeof document === 'object' && typeof document.all === 'undefined' && document.all !== undefined ? document.all : {};\n\nmodule.exports = reflectApply\n\t? function isCallable(value) {\n\t\tif (value === documentDotAll) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\tif (typeof value === 'function' && !value.prototype) { return true; }\n\t\ttry {\n\t\t\treflectApply(value, null, badArrayLike);\n\t\t} catch (e) {\n\t\t\tif (e !== isCallableMarker) { return false; }\n\t\t}\n\t\treturn !isES6ClassFn(value);\n\t}\n\t: function isCallable(value) {\n\t\tif (value === documentDotAll) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\tif (typeof value === 'function' && !value.prototype) { return true; }\n\t\tif (hasToStringTag) { return tryFunctionObject(value); }\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tvar strClass = toStr.call(value);\n\t\treturn strClass === fnClass || strClass === genClass;\n\t};\n","'use strict';\n\nvar toStr = Object.prototype.toString;\nvar fnToStr = Function.prototype.toString;\nvar isFnRegex = /^\\s*(?:function)?\\*/;\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar getProto = Object.getPrototypeOf;\nvar getGeneratorFunc = function () { // eslint-disable-line consistent-return\n\tif (!hasToStringTag) {\n\t\treturn false;\n\t}\n\ttry {\n\t\treturn Function('return function*() {}')();\n\t} catch (e) {\n\t}\n};\nvar GeneratorFunction;\n\nmodule.exports = function isGeneratorFunction(fn) {\n\tif (typeof fn !== 'function') {\n\t\treturn false;\n\t}\n\tif (isFnRegex.test(fnToStr.call(fn))) {\n\t\treturn true;\n\t}\n\tif (!hasToStringTag) {\n\t\tvar str = toStr.call(fn);\n\t\treturn str === '[object GeneratorFunction]';\n\t}\n\tif (!getProto) {\n\t\treturn false;\n\t}\n\tif (typeof GeneratorFunction === 'undefined') {\n\t\tvar generatorFunc = getGeneratorFunc();\n\t\tGeneratorFunction = generatorFunc ? getProto(generatorFunc) : false;\n\t}\n\treturn getProto(fn) === GeneratorFunction;\n};\n","'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar gOPD = require('es-abstract/helpers/getOwnPropertyDescriptor');\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tif (Symbol.toStringTag in arr) {\n\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor) {\n\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar anyTrue = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!anyTrue) {\n\t\t\ttry {\n\t\t\t\tanyTrue = getter.call(value) === typedArray;\n\t\t\t} catch (e) { /**/ }\n\t\t}\n\t});\n\treturn anyTrue;\n};\n\nmodule.exports = function isTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) {\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\treturn $indexOf(typedArrays, tag) > -1;\n\t}\n\tif (!gOPD) { return false; }\n\treturn tryTypedArrays(value);\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Currently in sync with Node.js lib/internal/util/types.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nvar isArgumentsObject = require('is-arguments');\nvar isGeneratorFunction = require('is-generator-function');\nvar whichTypedArray = require('which-typed-array');\nvar isTypedArray = require('is-typed-array');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar BigIntSupported = typeof BigInt !== 'undefined';\nvar SymbolSupported = typeof Symbol !== 'undefined';\n\nvar ObjectToString = uncurryThis(Object.prototype.toString);\n\nvar numberValue = uncurryThis(Number.prototype.valueOf);\nvar stringValue = uncurryThis(String.prototype.valueOf);\nvar booleanValue = uncurryThis(Boolean.prototype.valueOf);\n\nif (BigIntSupported) {\n  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n}\n\nif (SymbolSupported) {\n  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n}\n\nfunction checkBoxedPrimitive(value, prototypeValueOf) {\n  if (typeof value !== 'object') {\n    return false;\n  }\n  try {\n    prototypeValueOf(value);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n\nexports.isArgumentsObject = isArgumentsObject;\nexports.isGeneratorFunction = isGeneratorFunction;\nexports.isTypedArray = isTypedArray;\n\n// Taken from here and modified for better browser support\n// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\nfunction isPromise(input) {\n\treturn (\n\t\t(\n\t\t\ttypeof Promise !== 'undefined' &&\n\t\t\tinput instanceof Promise\n\t\t) ||\n\t\t(\n\t\t\tinput !== null &&\n\t\t\ttypeof input === 'object' &&\n\t\t\ttypeof input.then === 'function' &&\n\t\t\ttypeof input.catch === 'function'\n\t\t)\n\t);\n}\nexports.isPromise = isPromise;\n\nfunction isArrayBufferView(value) {\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    return ArrayBuffer.isView(value);\n  }\n\n  return (\n    isTypedArray(value) ||\n    isDataView(value)\n  );\n}\nexports.isArrayBufferView = isArrayBufferView;\n\n\nfunction isUint8Array(value) {\n  return whichTypedArray(value) === 'Uint8Array';\n}\nexports.isUint8Array = isUint8Array;\n\nfunction isUint8ClampedArray(value) {\n  return whichTypedArray(value) === 'Uint8ClampedArray';\n}\nexports.isUint8ClampedArray = isUint8ClampedArray;\n\nfunction isUint16Array(value) {\n  return whichTypedArray(value) === 'Uint16Array';\n}\nexports.isUint16Array = isUint16Array;\n\nfunction isUint32Array(value) {\n  return whichTypedArray(value) === 'Uint32Array';\n}\nexports.isUint32Array = isUint32Array;\n\nfunction isInt8Array(value) {\n  return whichTypedArray(value) === 'Int8Array';\n}\nexports.isInt8Array = isInt8Array;\n\nfunction isInt16Array(value) {\n  return whichTypedArray(value) === 'Int16Array';\n}\nexports.isInt16Array = isInt16Array;\n\nfunction isInt32Array(value) {\n  return whichTypedArray(value) === 'Int32Array';\n}\nexports.isInt32Array = isInt32Array;\n\nfunction isFloat32Array(value) {\n  return whichTypedArray(value) === 'Float32Array';\n}\nexports.isFloat32Array = isFloat32Array;\n\nfunction isFloat64Array(value) {\n  return whichTypedArray(value) === 'Float64Array';\n}\nexports.isFloat64Array = isFloat64Array;\n\nfunction isBigInt64Array(value) {\n  return whichTypedArray(value) === 'BigInt64Array';\n}\nexports.isBigInt64Array = isBigInt64Array;\n\nfunction isBigUint64Array(value) {\n  return whichTypedArray(value) === 'BigUint64Array';\n}\nexports.isBigUint64Array = isBigUint64Array;\n\nfunction isMapToString(value) {\n  return ObjectToString(value) === '[object Map]';\n}\nisMapToString.working = (\n  typeof Map !== 'undefined' &&\n  isMapToString(new Map())\n);\n\nfunction isMap(value) {\n  if (typeof Map === 'undefined') {\n    return false;\n  }\n\n  return isMapToString.working\n    ? isMapToString(value)\n    : value instanceof Map;\n}\nexports.isMap = isMap;\n\nfunction isSetToString(value) {\n  return ObjectToString(value) === '[object Set]';\n}\nisSetToString.working = (\n  typeof Set !== 'undefined' &&\n  isSetToString(new Set())\n);\nfunction isSet(value) {\n  if (typeof Set === 'undefined') {\n    return false;\n  }\n\n  return isSetToString.working\n    ? isSetToString(value)\n    : value instanceof Set;\n}\nexports.isSet = isSet;\n\nfunction isWeakMapToString(value) {\n  return ObjectToString(value) === '[object WeakMap]';\n}\nisWeakMapToString.working = (\n  typeof WeakMap !== 'undefined' &&\n  isWeakMapToString(new WeakMap())\n);\nfunction isWeakMap(value) {\n  if (typeof WeakMap === 'undefined') {\n    return false;\n  }\n\n  return isWeakMapToString.working\n    ? isWeakMapToString(value)\n    : value instanceof WeakMap;\n}\nexports.isWeakMap = isWeakMap;\n\nfunction isWeakSetToString(value) {\n  return ObjectToString(value) === '[object WeakSet]';\n}\nisWeakSetToString.working = (\n  typeof WeakSet !== 'undefined' &&\n  isWeakSetToString(new WeakSet())\n);\nfunction isWeakSet(value) {\n  return isWeakSetToString(value);\n}\nexports.isWeakSet = isWeakSet;\n\nfunction isArrayBufferToString(value) {\n  return ObjectToString(value) === '[object ArrayBuffer]';\n}\nisArrayBufferToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  isArrayBufferToString(new ArrayBuffer())\n);\nfunction isArrayBuffer(value) {\n  if (typeof ArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  return isArrayBufferToString.working\n    ? isArrayBufferToString(value)\n    : value instanceof ArrayBuffer;\n}\nexports.isArrayBuffer = isArrayBuffer;\n\nfunction isDataViewToString(value) {\n  return ObjectToString(value) === '[object DataView]';\n}\nisDataViewToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  typeof DataView !== 'undefined' &&\n  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))\n);\nfunction isDataView(value) {\n  if (typeof DataView === 'undefined') {\n    return false;\n  }\n\n  return isDataViewToString.working\n    ? isDataViewToString(value)\n    : value instanceof DataView;\n}\nexports.isDataView = isDataView;\n\n// Store a copy of SharedArrayBuffer in case it's deleted elsewhere\nvar SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;\nfunction isSharedArrayBufferToString(value) {\n  return ObjectToString(value) === '[object SharedArrayBuffer]';\n}\nfunction isSharedArrayBuffer(value) {\n  if (typeof SharedArrayBufferCopy === 'undefined') {\n    return false;\n  }\n\n  if (typeof isSharedArrayBufferToString.working === 'undefined') {\n    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());\n  }\n\n  return isSharedArrayBufferToString.working\n    ? isSharedArrayBufferToString(value)\n    : value instanceof SharedArrayBufferCopy;\n}\nexports.isSharedArrayBuffer = isSharedArrayBuffer;\n\nfunction isAsyncFunction(value) {\n  return ObjectToString(value) === '[object AsyncFunction]';\n}\nexports.isAsyncFunction = isAsyncFunction;\n\nfunction isMapIterator(value) {\n  return ObjectToString(value) === '[object Map Iterator]';\n}\nexports.isMapIterator = isMapIterator;\n\nfunction isSetIterator(value) {\n  return ObjectToString(value) === '[object Set Iterator]';\n}\nexports.isSetIterator = isSetIterator;\n\nfunction isGeneratorObject(value) {\n  return ObjectToString(value) === '[object Generator]';\n}\nexports.isGeneratorObject = isGeneratorObject;\n\nfunction isWebAssemblyCompiledModule(value) {\n  return ObjectToString(value) === '[object WebAssembly.Module]';\n}\nexports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n\nfunction isNumberObject(value) {\n  return checkBoxedPrimitive(value, numberValue);\n}\nexports.isNumberObject = isNumberObject;\n\nfunction isStringObject(value) {\n  return checkBoxedPrimitive(value, stringValue);\n}\nexports.isStringObject = isStringObject;\n\nfunction isBooleanObject(value) {\n  return checkBoxedPrimitive(value, booleanValue);\n}\nexports.isBooleanObject = isBooleanObject;\n\nfunction isBigIntObject(value) {\n  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n}\nexports.isBigIntObject = isBigIntObject;\n\nfunction isSymbolObject(value) {\n  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n}\nexports.isSymbolObject = isSymbolObject;\n\nfunction isBoxedPrimitive(value) {\n  return (\n    isNumberObject(value) ||\n    isStringObject(value) ||\n    isBooleanObject(value) ||\n    isBigIntObject(value) ||\n    isSymbolObject(value)\n  );\n}\nexports.isBoxedPrimitive = isBoxedPrimitive;\n\nfunction isAnyArrayBuffer(value) {\n  return typeof Uint8Array !== 'undefined' && (\n    isArrayBuffer(value) ||\n    isSharedArrayBuffer(value)\n  );\n}\nexports.isAnyArrayBuffer = isAnyArrayBuffer;\n\n['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {\n  Object.defineProperty(exports, method, {\n    enumerable: false,\n    value: function() {\n      throw new Error(method + ' is not supported in userland');\n    }\n  });\n});\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnvRegex = /^$/;\n\nif (process.env.NODE_DEBUG) {\n  var debugEnv = process.env.NODE_DEBUG;\n  debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&')\n    .replace(/\\*/g, '.*')\n    .replace(/,/g, '$|^')\n    .toUpperCase();\n  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');\n}\nexports.debuglog = function(set) {\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (debugEnvRegex.test(set)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexports.types = require('./support/types');\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\nexports.types.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\nexports.types.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\nexports.types.isNativeError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },\n            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar gOPD = require('es-abstract/helpers/getOwnPropertyDescriptor');\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tif (typeof g[typedArray] === 'function') {\n\t\t\tvar arr = new g[typedArray]();\n\t\t\tif (Symbol.toStringTag in arr) {\n\t\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\t\tif (!descriptor) {\n\t\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t\t}\n\t\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t\t}\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar foundName = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!foundName) {\n\t\t\ttry {\n\t\t\t\tvar name = getter.call(value);\n\t\t\t\tif (name === typedArray) {\n\t\t\t\t\tfoundName = name;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t}\n\t});\n\treturn foundName;\n};\n\nvar isTypedArray = require('is-typed-array');\n\nmodule.exports = function whichTypedArray(value) {\n\tif (!isTypedArray(value)) { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) { return $slice($toString(value), 8, -1); }\n\treturn tryTypedArrays(value);\n};\n","const os = require('os');\nconst fs = require('fs');\nconst path = require('path');\n\nconst rbql = require('./rbql_core/rbql-js/rbql.js');\nconst rbql_csv = require('./rbql_core/rbql-js/rbql_csv.js');\nconst csv_utils = require('./rbql_core/rbql-js/csv_utils.js');\n\nconst non_numeric_sentinel = -1;\nconst number_regex = /^([0-9]+)(\\.[0-9]+)?$/;\n\nclass AssertionError extends Error {}\n\nfunction assert(condition, message=null) {\n    if (!condition) {\n        if (!message) {\n            message = 'Assertion error';\n        }\n        throw new AssertionError(message);\n    }\n}\n\n\nfunction get_default_js_udf_content() {\n    let default_content = `// This file can be used to store RBQL UDFs. Example:\n    //\n    // function foo(value) {\n    //     return 'foo ' + String(value.length);\n    // }\n    // \n    // Functions defined in this file can be used in RBQL queries e.g. \n    // SELECT foo(a1), a2 WHERE foo(a3) != 'foo 5' LIMIT 10\n    //\n    // Don't forget to save this file after editing!\n    //\n    // Write your own functions bellow this line:\n    `.replace(new RegExp(/^  */, 'mg'), '');\n    return default_content;\n}\n\n\nfunction get_default_python_udf_content() {\n    let default_content = `# This file can be used to store RBQL UDFs. Example:\n    #\n    # def foo(value):\n    #     return 'foo ' + str(len(value))\n    # \n    # \n    # Functions defined in this file can be used in RBQL queries e.g. \n    # SELECT foo(a1), a2 WHERE foo(a3) != 'foo 5' LIMIT 10\n    #\n    # Don't forget to save this file after editing!\n    #\n    # Write your own functions bellow this line:\n    `.replace(new RegExp(/^  */, 'mg'), '');\n    return default_content;\n}\n\n\nfunction update_subcomponent_stats(field, is_first_line, max_field_components_lens) {\n    // Extract overall field length and length of integer and fractional parts of the field if it represents a number.\n    // Here `max_field_components_lens` is a tuple: (max_field_length, max_integer_part_length, max_fractional_part_length)\n    if (field.length > max_field_components_lens[0]) {\n        max_field_components_lens[0] = field.length;\n    }\n    if (max_field_components_lens[1] == non_numeric_sentinel) {\n        // Column is not a number, early return.\n        return;\n    }\n    let match_result = number_regex.exec(field);\n    if (match_result === null) {\n        if (!is_first_line && field.length) { // Checking field_length here allows numeric columns to have some of the fields empty.\n            // We only mark the column as non-header if we know that this is not a header line.\n            max_field_components_lens[1] = non_numeric_sentinel;\n            max_field_components_lens[2] = non_numeric_sentinel;\n        }\n        return;\n    }\n    let cur_integer_part_length = match_result[1].length;\n    max_field_components_lens[1] = Math.max(max_field_components_lens[1], cur_integer_part_length);\n    let cur_fractional_part_length = match_result[2] === undefined ? 0 : match_result[2].length;\n    max_field_components_lens[2] = Math.max(max_field_components_lens[2], cur_fractional_part_length);\n}\n\n\nfunction calc_column_stats(active_doc, delim, policy, comment_prefix) {\n    let column_stats = [];\n    let num_lines = active_doc.lineCount;\n    let is_first_line = true;\n    for (let lnum = 0; lnum < num_lines; lnum++) {\n        let line_text = active_doc.lineAt(lnum).text;\n        if (comment_prefix && line_text.startsWith(comment_prefix))\n            continue;\n        let [fields, warning] = csv_utils.smart_split(line_text, delim, policy, true);\n        if (warning) {\n            return [null, lnum + 1];\n        }\n        for (let fnum = 0; fnum < fields.length; fnum++) {\n            let field = fields[fnum].trim();\n            if (column_stats.length <= fnum) {\n                column_stats.push([0, 0, 0]);\n            }\n            update_subcomponent_stats(field, is_first_line, column_stats[fnum]);\n        }\n        is_first_line = false;\n    }\n    return [column_stats, null];\n}\n\n\nfunction adjust_column_stats(column_stats) {\n    // Ensure that numeric components max widths are consistent with non-numeric (header) width.\n    let adjusted_stats = [];\n    for (let column_stat of column_stats) {\n        if (column_stat[1] <= 0) {\n            column_stat[1] = -1;\n            column_stat[2] = -1;\n        }\n        if (column_stat[1] > 0) {\n            // The sum of integer and float parts can be bigger than the max width, e.g. here:\n            // value\n            // 0.12\n            // 1234\n            if (column_stat[1] + column_stat[2] > column_stat[0]) {\n                column_stat[0] = column_stat[1] + column_stat[2];\n            }\n            // This is needed when the header is wider than numeric components and/or their sum.\n            if (column_stat[0] - column_stat[2] > column_stat[1]) {\n                column_stat[1] = column_stat[0] - column_stat[2];\n            }\n            // Sanity check.\n            if (column_stat[0] != column_stat[1] + column_stat[2]) {\n                // Assertion Error, this can never happen.\n                return null;\n            }\n        }\n        adjusted_stats.push(column_stat);\n    }\n    return adjusted_stats;\n}\n\n\nfunction align_field(field, is_first_line, max_field_components_lens, is_last_column) {\n    // Align field, use Math.max() to avoid negative delta_length which can happen theorethically due to async doc edit.\n    const extra_readability_whitespace_length = 1;\n    field = field.trim();\n    if (max_field_components_lens[1] == non_numeric_sentinel) {\n        let delta_length = Math.max(max_field_components_lens[0] - field.length, 0);\n        return is_last_column ? field : field + ' '.repeat(delta_length + extra_readability_whitespace_length);\n    }\n    if (is_first_line) {\n        if (number_regex.exec(field) === null) {\n            // The line must be a header - align it using max_width rule.\n            let delta_length = Math.max(max_field_components_lens[0] - field.length, 0);\n            return is_last_column ? field : field + ' '.repeat(delta_length + extra_readability_whitespace_length);\n        }\n    }\n    let dot_pos = field.indexOf('.');\n    let cur_integer_part_length = dot_pos == -1 ? field.length : dot_pos;\n    // Here cur_fractional_part_length includes the leading dot too.\n    let cur_fractional_part_length = dot_pos == -1 ? 0 : field.length - dot_pos;\n    let integer_delta_length = Math.max(max_field_components_lens[1] - cur_integer_part_length, 0);\n    let fractional_delta_length = Math.max(max_field_components_lens[2] - cur_fractional_part_length);\n    let trailing_spaces = is_last_column ? '' : ' '.repeat(fractional_delta_length + extra_readability_whitespace_length);\n    return ' '.repeat(integer_delta_length) + field + trailing_spaces;\n}\n\n\nfunction align_columns(active_doc, delim, policy, comment_prefix, column_stats) {\n    let result_lines = [];\n    let num_lines = active_doc.lineCount;\n    let has_edit = false;\n    let is_first_line = true;\n    for (let lnum = 0; lnum < num_lines; lnum++) {\n        let line_text = active_doc.lineAt(lnum).text;\n        if (comment_prefix && line_text.startsWith(comment_prefix)) {\n            result_lines.push(line_text);\n            continue;\n        }\n        if (lnum + 1 == num_lines && line_text == '') {\n            // Skip the last empty line which corresponds to the trailing newline character.\n            result_lines.push(line_text);\n            continue;\n        }\n        let fields = csv_utils.smart_split(line_text, delim, policy, true)[0];\n        for (let fnum = 0; fnum < fields.length; fnum++) {\n            if (fnum >= column_stats.length) // Safeguard against async doc edit, should never happen.\n                break;\n            let is_last_column = fnum + 1 == column_stats.length;\n            let adjusted = align_field(fields[fnum], is_first_line, column_stats[fnum], is_last_column);\n            if (fields[fnum] != adjusted) {\n                fields[fnum] = adjusted;\n                has_edit = true;\n            }\n        }\n        is_first_line = false;\n        result_lines.push(fields.join(delim));\n    }\n    if (!has_edit)\n        return null;\n    return result_lines.join('\\n');\n}\n\n\nfunction shrink_columns(active_doc, delim, policy, comment_prefix) {\n    let result_lines = [];\n    let num_lines = active_doc.lineCount;\n    let has_edit = false;\n    for (let lnum = 0; lnum < num_lines; lnum++) {\n        let line_text = active_doc.lineAt(lnum).text;\n        if (comment_prefix && line_text.startsWith(comment_prefix)) {\n            result_lines.push(line_text);\n            continue;\n        }\n        let [fields, warning] = csv_utils.smart_split(line_text, delim, policy, true);\n        if (warning) {\n            return [null, lnum + 1];\n        }\n        for (let i = 0; i < fields.length; i++) {\n            let adjusted = fields[i].trim();\n            if (fields[i].length != adjusted.length) {\n                fields[i] = adjusted;\n                has_edit = true;\n            }\n        }\n        result_lines.push(fields.join(delim));\n    }\n    if (!has_edit)\n        return [null, null];\n    return [result_lines.join('\\n'), null];\n}\n\n\nfunction get_last(arr) {\n    return arr[arr.length - 1];\n}\n\n\nfunction populate_optimistic_rfc_csv_record_map(document, requested_end_record, dst_record_map, comment_prefix=null) {\n    let num_lines = document.lineCount;\n    let record_begin = null;\n    let start_line_idx = dst_record_map.length ? get_last(dst_record_map)[1] : 0;\n    for (let lnum = start_line_idx; lnum < num_lines && dst_record_map.length < requested_end_record; ++lnum) {\n        let line_text = document.lineAt(lnum).text;\n        if (lnum + 1 >= num_lines && line_text == \"\")\n            break; // Skip the last empty line.\n        if (comment_prefix && line_text.startsWith(comment_prefix))\n            continue;\n        let match_list = line_text.match(/\"/g);\n        let has_unbalanced_double_quote = match_list && match_list.length % 2 == 1;\n        if (record_begin === null && !has_unbalanced_double_quote) {\n            dst_record_map.push([lnum, lnum + 1]);\n        } else if (record_begin === null && has_unbalanced_double_quote) {\n            record_begin = lnum;\n        } else if (!has_unbalanced_double_quote) {\n            continue;\n        } else {\n            dst_record_map.push([record_begin, lnum + 1]);\n            record_begin = null;\n        }\n    }\n    if (record_begin !== null) {\n        dst_record_map.push([record_begin, num_lines]);\n    }\n}\n\n\nfunction make_table_name_key(file_path) {\n    return 'rbql_table_name:' + file_path;\n}\n\n\nfunction expanduser(filepath) {\n    if (filepath.charAt(0) === '~') {\n        return path.join(os.homedir(), filepath.slice(1));\n    }\n    return filepath;\n}\n\n\nfunction find_table_path(vscode_global_state, main_table_dir, table_id) {\n    // If table_id is a relative path it could be relative either to the current directory or to the main table dir.\n    var candidate_path = expanduser(table_id);\n    if (fs.existsSync(candidate_path)) {\n        return candidate_path;\n    }\n    if (main_table_dir && !path.isAbsolute(candidate_path)) {\n        candidate_path = path.join(main_table_dir, candidate_path);\n        if (fs.existsSync(candidate_path)) {\n            return candidate_path;\n        }\n    }\n    let table_path = vscode_global_state ? vscode_global_state.get(make_table_name_key(table_id)) : null;\n    if (table_path && fs.existsSync(table_path)) {\n        return table_path;\n    }\n    return null;\n}\n\n\nasync function read_header(table_path, encoding) {\n    if (encoding == 'latin-1')\n        encoding = 'binary';\n    let readline = require('readline');\n    let input_reader = readline.createInterface({ input: fs.createReadStream(table_path, {encoding: encoding}) });\n    let closed = false;\n    let promise_resolve = null;\n    let promise_reject = null;\n    let output_promise = new Promise(function(resolve, reject) {\n        promise_resolve = resolve;\n        promise_reject = reject;\n    });\n    input_reader.on('line', line => {\n        if (!closed) {\n            closed = true;\n            input_reader.close();\n            promise_resolve(line);\n        }\n    });\n    input_reader.on('error', error => {\n        promise_reject(error);\n    });\n    return output_promise;\n}\n\n\nfunction get_header_line(document, comment_prefix) {\n    const num_lines = document.lineCount;\n    for (let lnum = 0; lnum < num_lines; ++lnum) {\n        const line_text = document.lineAt(lnum).text;\n        if (!comment_prefix || !line_text.startsWith(comment_prefix)) {\n            return line_text;\n        }\n    }\n    return null;\n}\n\n\nfunction make_inconsistent_num_fields_warning(table_name, inconsistent_records_info) {\n    let keys = Object.keys(inconsistent_records_info);\n    let entries = [];\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let record_id = inconsistent_records_info[key];\n        entries.push([record_id, key]);\n    }\n    entries.sort(function(a, b) { return a[0] - b[0]; });\n    assert(entries.length > 1);\n    let [record_1, num_fields_1] = entries[0];\n    let [record_2, num_fields_2] = entries[1];\n    let warn_msg = `Number of fields in \"${table_name}\" table is not consistent: `;\n    warn_msg += `e.g. record ${record_1} -> ${num_fields_1} fields, record ${record_2} -> ${num_fields_2} fields`;\n    return warn_msg;\n}\n\n\n\nclass RbqlIOHandlingError extends Error {}\n\nclass VSCodeRecordIterator extends rbql.RBQLInputIterator {\n    constructor(document, delim, policy, has_header=false, comment_prefix=null, table_name='input', variable_prefix='a') {\n        // We could have done a hack here actually: convert the document to stream/buffer and then use the standard reader.\n        super();\n        this.document = document;\n        this.delim = delim;\n        this.policy = policy;\n        this.has_header = has_header;\n        this.comment_prefix = comment_prefix;\n        this.table_name = table_name;\n        this.variable_prefix = variable_prefix;\n        this.NR = 0; // Record number.\n        this.NL = 0; // Line number (NL != NR when the CSV file has comments or multiline fields).\n        this.fields_info = new Object();\n        this.first_defective_line = null;\n        this.first_record = this.get_first_record();\n    }\n\n    stop() {\n    }\n\n    get_first_record() {\n        let header_line = get_header_line(this.document, this.comment_prefix);\n        let first_record = csv_utils.smart_split(header_line, this.delim, this.policy, /*preserve_quotes_and_whitespaces=*/false)[0];\n        return first_record;\n    }\n\n    async get_variables_map(query_text) {\n        let variable_map = new Object();\n        rbql.parse_basic_variables(query_text, this.variable_prefix, variable_map);\n        rbql.parse_array_variables(query_text, this.variable_prefix, variable_map);\n        let header_line = get_header_line(this.document, this.comment_prefix);\n        let first_record = csv_utils.smart_split(header_line, this.delim, this.policy, /*preserve_quotes_and_whitespaces=*/false)[0];\n        if (this.has_header) {\n            rbql.parse_attribute_variables(query_text, this.variable_prefix, first_record, 'CSV header line', variable_map);\n            rbql.parse_dictionary_variables(query_text, this.variable_prefix, first_record, variable_map);\n        }\n        return variable_map;\n    }\n\n    async get_header() {\n        return this.has_header ? this.first_record : null;\n    }\n\n    get_line_rfc() {\n        let rfc_line_buffer = [];\n        const num_lines = this.document.lineCount;\n        while (this.NL < num_lines) {\n            let line = this.document.lineAt(this.NL).text;\n            this.NL += 1;\n            if (this.NL == num_lines && line.length == 0)\n                return null; // Skip the last line if it is empty - this can happen due to trailing newline.\n            let record_line = csv_utils.accumulate_rfc_line_into_record(rfc_line_buffer, line, this.comment_prefix);\n            if (record_line !== null)\n                return record_line;\n        }\n        return null;\n    }\n\n    get_line_simple() {\n        const num_lines = this.document.lineCount;\n        while (this.NL < num_lines) {\n            let line = this.document.lineAt(this.NL).text;\n            this.NL += 1;\n            if (this.NL == num_lines && line.length == 0)\n                return null; // Skip the last line if it is empty - this can happen due to trailing newline.\n            if (this.comment_prefix === null || !line.startsWith(this.comment_prefix))\n                return line;\n        }\n        return null;\n    }\n\n    do_get_record() {\n        let line = (this.policy == 'quoted_rfc') ? this.get_line_rfc() : this.get_line_simple();\n        if (line === null)\n            return null;\n        let [record, warning] = csv_utils.smart_split(line, this.delim, this.policy, /*preserve_quotes_and_whitespaces=*/false);\n        if (warning) {\n            if (this.first_defective_line === null) {\n                this.first_defective_line = this.NL;\n                if (this.policy == 'quoted_rfc')\n                    throw new RbqlIOHandlingError(`Inconsistent double quote escaping in ${this.table_name} table at record ${this.NR}, line ${this.NL}`);\n            }\n        }\n        let num_fields = record.length;\n        if (!this.fields_info.hasOwnProperty(num_fields))\n            this.fields_info[num_fields] = this.NR;\n        return record;\n    }\n\n    async get_record() {\n        if (this.NR == 0 && this.has_header) {\n            this.do_get_record(); // Skip the header record.\n        }\n        this.NR += 1;\n        let record = this.do_get_record();\n        return record;\n    }\n\n    get_warnings() {\n        let result = [];\n        if (this.first_defective_line !== null)\n            result.push(`Inconsistent double quote escaping in ${this.table_name} table. E.g. at line ${this.first_defective_line}`);\n        if (Object.keys(this.fields_info).length > 1)\n            result.push(make_inconsistent_num_fields_warning(this.table_name, this.fields_info));\n        return result;\n    }\n}\n\n\nclass VSCodeWriter extends rbql.RBQLOutputWriter {\n    constructor(delim, policy) {\n        super();\n        this.delim = delim;\n        this.policy = policy;\n        this.header_len = null;\n        this.null_in_output = false;\n        this.delim_in_simple_output = false;\n        this.output_lines = [];\n\n        if (policy == 'simple') {\n            this.polymorphic_join = this.simple_join;\n        } else if (policy == 'quoted') {\n            this.polymorphic_join = this.quoted_join;\n        } else if (policy == 'quoted_rfc') {\n            this.polymorphic_join = this.quoted_join_rfc;\n        } else if (policy == 'monocolumn') {\n            this.polymorphic_join = this.mono_join;\n        } else if (policy == 'whitespace') {\n            this.polymorphic_join = this.simple_join;\n        } else {\n            throw new RbqlIOHandlingError('Unknown output csv policy');\n        }\n    }\n\n    set_header(header) {\n        if (header !== null) {\n            this.header_len = header.length;\n            this.write(header);\n        }\n    }\n\n    quoted_join(fields) {\n        let delim = this.delim;\n        var quoted_fields = fields.map(function(v) { return csv_utils.quote_field(String(v), delim); });\n        return quoted_fields.join(this.delim);\n    };\n\n\n    quoted_join_rfc(fields) {\n        let delim = this.delim;\n        var quoted_fields = fields.map(function(v) { return csv_utils.rfc_quote_field(String(v), delim); });\n        return quoted_fields.join(this.delim);\n    };\n\n\n    mono_join(fields) {\n        if (fields.length > 1) {\n            throw new RbqlIOHandlingError('Unable to use \"Monocolumn\" output format: some records have more than one field');\n        }\n        return fields[0];\n    };\n\n\n    simple_join(fields) {\n        var res = fields.join(this.delim);\n        if (fields.join('').indexOf(this.delim) != -1) {\n            this.delim_in_simple_output = true;\n        }\n        return res;\n    };\n\n\n    normalize_fields(out_fields) {\n        for (var i = 0; i < out_fields.length; i++) {\n            if (out_fields[i] == null) {\n                this.null_in_output = true;\n                out_fields[i] = '';\n            } else if (Array.isArray(out_fields[i])) {\n                this.normalize_fields(out_fields[i]);\n                out_fields[i] = out_fields[i].join(this.sub_array_delim);\n            }\n        }\n    };\n\n\n    write(fields) {\n        if (this.header_len !== null && fields.length != this.header_len)\n            throw new RbqlIOHandlingError(`Inconsistent number of columns in output header and the current record: ${this.header_len} != ${fields.length}`);\n        this.normalize_fields(fields);\n        this.output_lines.push(this.polymorphic_join(fields));\n        return true;\n    };\n\n    async finish() {\n    }\n\n    get_warnings() {\n        let result = [];\n        if (this.null_in_output)\n            result.push('null values in output were replaced by empty strings');\n        if (this.delim_in_simple_output)\n            result.push('Some output fields contain separator');\n        return result;\n    };\n}\n\nclass VSCodeTableRegistry {\n    constructor(){}\n\n    get_iterator_by_table_id(_table_id) {\n        throw new RbqlIOHandlingError(\"JOIN queries are currently not supported in vscode.dev web version.\");\n    }\n\n    get_warnings() {\n        return [];\n    };\n}\n\nasync function rbql_query_web(query_text, input_document, input_delim, input_policy, output_delim, output_policy, output_warnings, with_headers, comment_prefix=null) {\n    let user_init_code = ''; // TODO find a way to have init code.\n    let join_tables_registry = new VSCodeTableRegistry(); // TODO find a way to have join registry.\n    let input_iterator = new VSCodeRecordIterator(input_document, input_delim, input_policy, with_headers, comment_prefix);\n    let output_writer = new VSCodeWriter(output_delim, output_policy);\n    await rbql.query(query_text, input_iterator, output_writer, output_warnings, join_tables_registry, user_init_code);\n    return output_writer.output_lines;\n}\n\n\nclass VSCodeFileSystemCSVRegistry extends rbql.RBQLTableRegistry {\n    constructor(vscode_global_state, input_file_dir, delim, policy, encoding, has_header=false, comment_prefix=null, options=null) {\n        super();\n        this.vscode_global_state = vscode_global_state;\n        this.input_file_dir = input_file_dir;\n        this.delim = delim;\n        this.policy = policy;\n        this.encoding = encoding;\n        this.has_header = has_header;\n        this.comment_prefix = comment_prefix;\n        this.stream = null;\n        this.record_iterator = null;\n\n        this.options = options;\n        this.bulk_input_path = null;\n        this.table_path = null;\n    }\n\n    get_iterator_by_table_id(table_id) {\n        this.table_path = find_table_path(this.vscode_global_state, this.input_file_dir, table_id);\n        if (this.table_path === null) {\n            throw new RbqlIOHandlingError(`Unable to find join table \"${table_id}\"`);\n        }\n        if (this.options && this.options['bulk_read']) {\n            this.bulk_input_path = this.table_path;\n        } else {\n            this.stream = fs.createReadStream(this.table_path);\n        }\n        this.record_iterator = new rbql_csv.CSVRecordIterator(this.stream, this.bulk_input_path, this.encoding, this.delim, this.policy, this.has_header, this.comment_prefix, table_id, 'b');\n        return this.record_iterator;\n    };\n\n    get_warnings(output_warnings) {\n        if (this.record_iterator && this.has_header) {\n            output_warnings.push(`The first record in JOIN file ${path.basename(this.table_path)} was also treated as header (and skipped)`);\n        }\n    }\n}\n\n\nasync function rbql_query_node(vscode_global_state, query_text, input_path, input_delim, input_policy, output_path, output_delim, output_policy, csv_encoding, output_warnings, with_headers=false, comment_prefix=null, user_init_code='', options=null) {\n    let input_stream = null;\n    let bulk_input_path = null;\n    if (options && options['bulk_read'] && input_path) {\n        bulk_input_path = input_path;\n    } else {\n        input_stream = input_path === null ? process.stdin : fs.createReadStream(input_path);\n    }\n    let [output_stream, close_output_on_finish] = output_path === null ? [process.stdout, false] : [fs.createWriteStream(output_path), true];\n    if (input_delim == '\"' && input_policy == 'quoted')\n        throw new RbqlIOHandlingError('Double quote delimiter is incompatible with \"quoted\" policy');\n    if (csv_encoding == 'latin-1')\n        csv_encoding = 'binary';\n    if (!rbql_csv.is_ascii(query_text) && csv_encoding == 'binary')\n        throw new RbqlIOHandlingError('To use non-ascii characters in query enable UTF-8 encoding instead of latin-1/binary');\n    if ((!rbql_csv.is_ascii(input_delim) || !rbql_csv.is_ascii(output_delim)) && csv_encoding == 'binary')\n        throw new RbqlIOHandlingError('To use non-ascii characters in query enable UTF-8 encoding instead of latin-1/binary');\n\n    let default_init_source_path = path.join(os.homedir(), '.rbql_init_source.js');\n    if (user_init_code == '' && fs.existsSync(default_init_source_path)) {\n        user_init_code = rbql_csv.read_user_init_code(default_init_source_path);\n    }\n    let input_file_dir = input_path ? path.dirname(input_path) : null;\n    let join_tables_registry = new VSCodeFileSystemCSVRegistry(vscode_global_state, input_file_dir, input_delim, input_policy, csv_encoding, with_headers, comment_prefix, options);\n    let input_iterator = new rbql_csv.CSVRecordIterator(input_stream, bulk_input_path, csv_encoding, input_delim, input_policy, with_headers, comment_prefix);\n    let output_writer = new rbql_csv.CSVWriter(output_stream, close_output_on_finish, csv_encoding, output_delim, output_policy);\n\n    await rbql.query(query_text, input_iterator, output_writer, output_warnings, join_tables_registry, user_init_code);\n    join_tables_registry.get_warnings(output_warnings);\n}\n\n\nmodule.exports.make_table_name_key = make_table_name_key;\nmodule.exports.find_table_path = find_table_path;\nmodule.exports.read_header = read_header;\nmodule.exports.rbql_query_web = rbql_query_web;\nmodule.exports.rbql_query_node = rbql_query_node;\nmodule.exports.get_header_line = get_header_line;\nmodule.exports.populate_optimistic_rfc_csv_record_map = populate_optimistic_rfc_csv_record_map;\nmodule.exports.get_default_js_udf_content = get_default_js_udf_content;\nmodule.exports.get_default_python_udf_content = get_default_python_udf_content;\nmodule.exports.align_columns = align_columns;\nmodule.exports.shrink_columns = shrink_columns;\nmodule.exports.calc_column_stats = calc_column_stats;\nmodule.exports.adjust_column_stats = adjust_column_stats;\nmodule.exports.update_subcomponent_stats = update_subcomponent_stats;\nmodule.exports.align_field = align_field;\n","let field_regular_expression = '\"((?:[^\"]*\"\")*[^\"]*)\"';\nlet field_rgx = new RegExp('^' + field_regular_expression);\nlet field_rgx_external_whitespaces = new RegExp('^ *' + field_regular_expression + ' *');\n\n\n// TODO consider making this file (and rbql.js) both node and browser compatible: https://caolan.org/posts/writing_for_node_and_the_browser.html\n\n\nfunction split_lines(text) {\n    return text.split(/\\r\\n|\\r|\\n/);\n}\n\n\nfunction extract_next_field(src, dlm, preserve_quotes_and_whitespaces, allow_external_whitespaces, cidx, result) {\n    var warning = false;\n    let src_cur = src.substring(cidx);\n    let rgx = allow_external_whitespaces ? field_rgx_external_whitespaces : field_rgx;\n    let match_obj = rgx.exec(src_cur);\n    if (match_obj !== null) {\n        let match_end = match_obj[0].length;\n        if (cidx + match_end == src.length || src[cidx + match_end] == dlm) {\n            if (preserve_quotes_and_whitespaces) {\n                result.push(match_obj[0]);\n            } else {\n                result.push(match_obj[1].replace(/\"\"/g, '\"'));\n            }\n            return [cidx + match_end + 1, false];\n        }\n        warning = true;\n    }\n    var uidx = src.indexOf(dlm, cidx);\n    if (uidx == -1)\n        uidx = src.length;\n    var field = src.substring(cidx, uidx);\n    warning = warning || field.indexOf('\"') != -1;\n    result.push(field);\n    return [uidx + 1, warning];\n}\n\n\nfunction split_quoted_str(src, dlm, preserve_quotes_and_whitespaces=false) {\n    // This function is newline-agnostic i.e. it can also split records with multiline fields.\n    if (src.indexOf('\"') == -1) // Optimization for most common case\n        return [src.split(dlm), false];\n    var result = [];\n    var cidx = 0;\n    var warning = false;\n    let allow_external_whitespaces = dlm != ' ';\n    while (cidx < src.length) {\n        var extraction_report = extract_next_field(src, dlm, preserve_quotes_and_whitespaces, allow_external_whitespaces, cidx, result);\n        cidx = extraction_report[0];\n        warning = warning || extraction_report[1];\n    }\n    if (src.charAt(src.length - 1) == dlm)\n        result.push('');\n    return [result, warning];\n}\n\n\nfunction quote_field(src, delim) {\n    if (src.indexOf(delim) != -1 || src.indexOf('\"') != -1) {\n        var escaped = src.replace(/\"/g, '\"\"');\n        return `\"${escaped}\"`;\n    }\n    return src;\n}\n\n\nfunction rfc_quote_field(src, delim) {\n    if (src.indexOf(delim) != -1 || src.indexOf('\"') != -1 || src.indexOf('\\n') != -1 || src.indexOf('\\r') != -1) {\n        var escaped = src.replace(/\"/g, '\"\"');\n        return `\"${escaped}\"`;\n    }\n    return src;\n}\n\n\nfunction unquote_field(field) {\n    let rgx = new RegExp('^' + ' *' + field_regular_expression + ' *$');\n    let match_obj = rgx.exec(field);\n    if (match_obj !== null) {\n        return match_obj[1].replace(/\"\"/g, '\"');\n    }\n    return field;\n}\n\n\nfunction unquote_fields(fields) {\n    return fields.map(unquote_field);\n}\n\n\nfunction split_whitespace_separated_str(src, preserve_whitespaces=false) {\n    var rgxp = preserve_whitespaces ? new RegExp(' *[^ ]+ *', 'g') : new RegExp('[^ ]+', 'g');\n    let result = [];\n    let match_obj = null;\n    while((match_obj = rgxp.exec(src)) !== null) {\n        result.push(match_obj[0]);\n    }\n    if (preserve_whitespaces) {\n        for (let i = 0; i < result.length - 1; i++) {\n            result[i] = result[i].slice(0, -1);\n        }\n    }\n    return result;\n}\n\n\nfunction smart_split(src, dlm, policy, preserve_quotes_and_whitespaces) {\n    if (policy === 'simple')\n        return [src.split(dlm), false];\n    if (policy === 'whitespace')\n        return [split_whitespace_separated_str(src, preserve_quotes_and_whitespaces), false];\n    if (policy === 'monocolumn')\n        return [[src], false];\n    return split_quoted_str(src, dlm, preserve_quotes_and_whitespaces);\n}\n\n\nfunction accumulate_rfc_line_into_record(external_rfc_line_buffer, current_line, comment_prefix=null) {\n    // Return null if the current line yields no record.\n    // Return a record string if the current line yields the record and cleans the external line buffer.\n    if (comment_prefix !== null && external_rfc_line_buffer.length == 0 && current_line.startsWith(comment_prefix))\n        return null;\n    let match_list = current_line.match(/\"/g);\n    let has_unbalanced_double_quote = match_list && match_list.length % 2 == 1;\n    if (external_rfc_line_buffer.length == 0 && !has_unbalanced_double_quote) {\n        return current_line;\n    } else if (external_rfc_line_buffer.length == 0 && has_unbalanced_double_quote) {\n        external_rfc_line_buffer.push(current_line);\n    } else if (!has_unbalanced_double_quote) {\n        external_rfc_line_buffer.push(current_line);\n    } else {\n        external_rfc_line_buffer.push(current_line);\n        let multiline_row = external_rfc_line_buffer.join('\\n');\n        external_rfc_line_buffer.splice(0, external_rfc_line_buffer.length); // Cleanup the external buffer.\n        return multiline_row;\n    }\n    return null;\n}\n\n\nmodule.exports.split_quoted_str = split_quoted_str;\nmodule.exports.split_whitespace_separated_str = split_whitespace_separated_str;\nmodule.exports.smart_split = smart_split;\nmodule.exports.quote_field = quote_field;\nmodule.exports.rfc_quote_field = rfc_quote_field;\nmodule.exports.unquote_field = unquote_field;\nmodule.exports.unquote_fields = unquote_fields;\nmodule.exports.split_lines = split_lines;\nmodule.exports.accumulate_rfc_line_into_record = accumulate_rfc_line_into_record;\n","(function(exports){\n// The magic line above is to make the module both browser and Node compatible, see https://stackoverflow.com/questions/3225251/how-can-i-share-code-between-node-js-and-the-browser\n\n// This module works with records only. It is CSV-agnostic.\n// Do not add CSV-related logic or variables/functions/objects like \"delim\", \"separator\" etc\n\n\nclass RbqlParsingError extends Error {}\nclass RbqlRuntimeError extends Error {}\nclass AssertionError extends Error {}\nclass RbqlIOHandlingError extends Error {}\n\n\nclass InternalBadFieldError extends Error {\n    constructor(bad_idx, ...params) {\n        super(...params);\n        this.bad_idx = bad_idx;\n    }\n}\n\n\nfunction assert(condition, message=null) {\n    if (!condition) {\n        if (!message) {\n            message = 'Assertion error';\n        }\n        throw new AssertionError(message);\n    }\n}\n\n\nfunction replace_all(src, search, replacement) {\n    return src.split(search).join(replacement);\n}\n\n\nclass RBQLContext {\n    constructor(query_text, input_iterator, output_writer, user_init_code) {\n        this.query_text = query_text;\n        this.input_iterator = input_iterator;\n        this.writer = output_writer;\n        this.user_init_code = user_init_code;\n\n        this.unnest_list = null;\n        this.top_count = null;\n\n        this.like_regex_cache = new Map();\n\n        this.sort_key_expression = null;\n\n        this.aggregation_stage = 0;\n        this.aggregation_key_expression = null;\n        this.functional_aggregators = [];\n\n        this.join_map_impl = null;\n        this.join_map = null;\n        this.lhs_join_var_expression = null;\n\n        this.where_expression = null;\n\n        this.select_expression = null;\n\n        this.update_expressions = null;\n\n        this.variables_init_code = null;\n    }\n}\n\nvar query_context = null; // Needs to be global for MIN(), MAX(), etc functions. TODO find a way to make it local.\n\n\nconst wrong_aggregation_usage_error = 'Usage of RBQL aggregation functions inside JavaScript expressions is not allowed, see the docs';\nconst RBQL_VERSION = '0.25.0';\n\n\nfunction check_if_brackets_match(opening_bracket, closing_bracket) {\n    return (opening_bracket == '[' && closing_bracket == ']') || (opening_bracket == '(' && closing_bracket == ')') || (opening_bracket == '{' && closing_bracket == '}');\n}\n\n\nfunction parse_root_bracket_level_text_spans(select_expression) {\n    let text_spans = []; // parts of text separated by commas at the root parenthesis level\n    let last_pos = 0;\n    let bracket_stack = [];\n    for (let i = 0; i < select_expression.length; i++) {\n        let cur_char = select_expression[i];\n        if (cur_char == ',' && bracket_stack.length == 0) {\n            text_spans.push(select_expression.substring(last_pos, i));\n            last_pos = i + 1;\n        } else if (['[', '{', '('].indexOf(cur_char) != -1) {\n            bracket_stack.push(cur_char);\n        } else if ([']', '}', ')'].indexOf(cur_char) != -1) {\n            if (bracket_stack.length && check_if_brackets_match(bracket_stack[bracket_stack.length - 1], cur_char)) {\n                bracket_stack.pop();\n            } else {\n                throw new RbqlParsingError(`Unable to parse column headers in SELECT expression: No matching opening bracket for closing \"${cur_char}\"`);\n            }\n        }\n    }\n    if (bracket_stack.length) {\n        throw new RbqlParsingError(`Unable to parse column headers in SELECT expression: No matching closing bracket for opening \"${bracket_stack[0]}\"`);\n    }\n    text_spans.push(select_expression.substring(last_pos, select_expression.length));\n    text_spans = text_spans.map(span => span.trim());\n    return text_spans;\n}\n\n\nfunction unquote_string(quoted_str) {\n    // It's possible to use eval here to unqoute the quoted_column_name, but it would be a little barbaric, let's do it manually instead\n    if (!quoted_str || quoted_str.length < 2)\n        return null;\n    if (quoted_str[0] == \"'\" && quoted_str[quoted_str.length - 1] == \"'\") {\n        return quoted_str.substring(1, quoted_str.length - 1).replace(/\\\\'/g, \"'\").replace(/\\\\\\\\/g, \"\\\\\");\n    } else if (quoted_str[0] == '\"' && quoted_str[quoted_str.length - 1] == '\"') {\n        return quoted_str.substring(1, quoted_str.length - 1).replace(/\\\\\"/g, '\"').replace(/\\\\\\\\/g, \"\\\\\");\n    } else {\n        return null;\n    }\n}\n\n\nfunction column_info_from_text_span(text_span, string_literals) {\n    // This function is a rough equivalent of \"column_info_from_node()\" function in python version of RBQL\n    text_span = text_span.trim();\n    let rbql_star_marker = '__RBQL_INTERNAL_STAR';\n    let simple_var_match = /^[_a-zA-Z][_a-zA-Z0-9]*$/.exec(text_span);\n    let attribute_match = /^([ab])\\.([_a-zA-Z][_a-zA-Z0-9]*)$/.exec(text_span);\n    let subscript_int_match = /^([ab])\\[([0-9]+)\\]$/.exec(text_span);\n    let subscript_str_match = /^([ab])\\[___RBQL_STRING_LITERAL([0-9]+)___\\]$/.exec(text_span);\n    if (simple_var_match !== null) {\n        if (text_span == rbql_star_marker)\n            return {table_name: null, column_index: null, column_name: null, is_star: true};\n        if (text_span.startsWith('___RBQL_STRING_LITERAL'))\n            return null;\n        let match = /^([ab])([0-9]+)$/.exec(text_span);\n        if (match !== null) {\n            return {table_name: match[1], column_index: parseInt(match[2]) - 1, column_name: null, is_star: false};\n        }\n        // Some examples for this branch: NR, NF\n        return {table_name: null, column_index: null, column_name: text_span, is_star: false};\n    } else if (attribute_match !== null) {\n        let table_name = attribute_match[1];\n        let column_name = attribute_match[2];\n        if (column_name == rbql_star_marker) {\n            return {table_name: table_name, column_index: null, column_name: null, is_star: true};\n        }\n        return {table_name: null, column_index: null, column_name: column_name, is_star: false};\n    } else if (subscript_int_match != null) {\n        let table_name = subscript_int_match[1];\n        let column_index = parseInt(subscript_int_match[2]) - 1;\n        return {table_name: table_name, column_index: column_index, column_name: null, is_star: false};\n    } else if (subscript_str_match != null) {\n        let table_name = subscript_str_match[1];\n        let replaced_string_literal_id = subscript_str_match[2];\n        if (replaced_string_literal_id < string_literals.length) {\n            let quoted_column_name = string_literals[replaced_string_literal_id];\n            let unquoted_column_name = unquote_string(quoted_column_name);\n            if (unquoted_column_name !== null && unquoted_column_name !== undefined) {\n                return {table_name: null, column_index: null, column_name: unquoted_column_name, is_star: false};\n            }\n        }\n    }\n    return null;\n}\n\n\nfunction adhoc_parse_select_expression_to_column_infos(select_expression, string_literals) {\n    // It is acceptable for the algorithm to provide null column name when it could be theorethically possible to deduce the name.\n    // I.e. this algorithm guarantees precision but doesn't guarantee completeness in all theorethically possible queries.\n    // Although the algorithm should be complete in all practical scenarios, i.e. it should be hard to come up with the query that doesn't produce complete set of column names.\n    // The null column name just means that the output column will be named as col{i}, so the failure to detect the proper column name can be tolerated.\n    // Specifically this function guarantees the following:\n    // 1. The number of column_infos is correct and will match the number of fields in each record in the output - otherwise the exception should be thrown\n    // 2. If column_info at pos j is not null, it is guaranteed to correctly represent that column name in the output\n    let text_spans = parse_root_bracket_level_text_spans(select_expression);\n    let column_infos = text_spans.map(ts => column_info_from_text_span(ts, string_literals));\n    return column_infos;\n}\n\n\nfunction stable_compare(a, b) {\n    for (var i = 0; i < a.length; i++) {\n        if (a[i] !== b[i])\n            return a[i] < b[i] ? -1 : 1;\n    }\n}\n\n\nfunction safe_get(record, idx) {\n    return idx < record.length ? record[idx] : null;\n}\n\n\nfunction safe_join_get(record, idx) {\n    if (idx < record.length) {\n        return record[idx];\n    }\n    throw new InternalBadFieldError(idx);\n}\n\n\nfunction safe_set(record, idx, value) {\n    if (idx < record.length) {\n        record[idx] = value;\n    } else {\n        throw new InternalBadFieldError(idx);\n    }\n}\n\n\nfunction regexp_escape(text) {\n    // From here: https://stackoverflow.com/a/6969486/2898283\n    return text.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');  // $& means the whole matched text\n}\n\n\nfunction like_to_regex(pattern) {\n    let p = 0;\n    let i = 0;\n    let converted = '';\n    while (i < pattern.length) {\n        if (pattern.charAt(i) == '_' || pattern.charAt(i) == '%') {\n            converted += regexp_escape(pattern.substring(p, i));\n            p = i + 1;\n            if (pattern.charAt(i) == '_') {\n                converted += '.';\n            } else {\n                converted += '.*';\n            }\n        }\n        i += 1;\n    }\n    converted += regexp_escape(pattern.substring(p, i));\n    return '^' + converted + '$';\n}\n\n\nfunction like(text, pattern) {\n    let matcher = query_context.like_regex_cache.get(pattern);\n    if (matcher === undefined) {\n        matcher = new RegExp(like_to_regex(pattern));\n        query_context.like_regex_cache.set(pattern, matcher);\n    }\n    return matcher.test(text);\n}\nconst LIKE = like;\n\n\nclass RBQLAggregationToken {\n    constructor(marker_id, value) {\n        this.marker_id = marker_id;\n        this.value = value;\n    }\n\n    toString() {\n        throw new RbqlParsingError(wrong_aggregation_usage_error);\n    }\n}\n\n\nclass UnnestMarker {}\n\n\nfunction UNNEST(vals) {\n    if (query_context.unnest_list !== null) {\n        // Technically we can support multiple UNNEST's but the implementation/algorithm is more complex and just doesn't worth it\n        throw new RbqlParsingError('Only one UNNEST is allowed per query');\n    }\n    query_context.unnest_list = vals;\n    return new UnnestMarker();\n}\nconst unnest = UNNEST;\nconst Unnest = UNNEST;\nconst UNFOLD = UNNEST; // \"UNFOLD\" is deprecated, just for backward compatibility\n\n\nfunction parse_number(val) {\n    // We can do a more pedantic number test like `/^ *-{0,1}[0-9]+\\.{0,1}[0-9]* *$/.test(val)`, but  user will probably use just Number(val) or parseInt/parseFloat\n    let result = Number(val);\n    if (isNaN(result)) {\n        throw new RbqlRuntimeError(`Unable to convert value \"${val}\" to a number. MIN, MAX, SUM, AVG, MEDIAN and VARIANCE aggregate functions convert their string arguments to numeric values`);\n    }\n    return result;\n}\n\n\nclass MinAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        val = parse_number(val);\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, val);\n        } else {\n            this.stats.set(key, Math.min(cur_aggr, val));\n        }\n    }\n\n    get_final(key) {\n        return this.stats.get(key);\n    }\n}\n\n\n\nclass MaxAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        val = parse_number(val);\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, val);\n        } else {\n            this.stats.set(key, Math.max(cur_aggr, val));\n        }\n    }\n\n    get_final(key) {\n        return this.stats.get(key);\n    }\n}\n\n\nclass SumAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        val = parse_number(val);\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, val);\n        } else {\n            this.stats.set(key, cur_aggr + val);\n        }\n    }\n\n    get_final(key) {\n        return this.stats.get(key);\n    }\n}\n\n\nclass AvgAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        val = parse_number(val);\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, [val, 1]);\n        } else {\n            var cur_sum = cur_aggr[0];\n            var cur_cnt = cur_aggr[1];\n            this.stats.set(key, [cur_sum + val, cur_cnt + 1]);\n        }\n    }\n\n    get_final(key) {\n        var cur_aggr = this.stats.get(key);\n        var cur_sum = cur_aggr[0];\n        var cur_cnt = cur_aggr[1];\n        var avg = cur_sum / cur_cnt;\n        return avg;\n    }\n}\n\n\nclass VarianceAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        val = parse_number(val);\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, [val, val * val, 1]);\n        } else {\n            var cur_sum = cur_aggr[0];\n            var cur_sum_sq = cur_aggr[1];\n            var cur_cnt = cur_aggr[2];\n            this.stats.set(key, [cur_sum + val, cur_sum_sq + val * val, cur_cnt + 1]);\n        }\n    }\n\n    get_final(key) {\n        var cur_aggr = this.stats.get(key);\n        var cur_sum = cur_aggr[0];\n        var cur_sum_sq = cur_aggr[1];\n        var cur_cnt = cur_aggr[2];\n        var avg_val = cur_sum / cur_cnt;\n        var variance = cur_sum_sq / cur_cnt - avg_val * avg_val;\n        return variance;\n    }\n}\n\n\nclass MedianAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        val = parse_number(val);\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, [val]);\n        } else {\n            cur_aggr.push(val);\n        }\n    }\n\n    get_final(key) {\n        var cur_aggr = this.stats.get(key);\n        cur_aggr.sort(function(a, b) { return a - b; });\n        var m = Math.floor(cur_aggr.length / 2);\n        if (cur_aggr.length % 2) {\n            return cur_aggr[m];\n        } else {\n            return (cur_aggr[m - 1] + cur_aggr[m]) / 2.0;\n        }\n    }\n}\n\n\nclass CountAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, 1);\n        } else {\n            this.stats.set(key, cur_aggr + 1);\n        }\n    }\n\n    get_final(key) {\n        return this.stats.get(key);\n    }\n}\n\n\nclass ArrayAggAggregator {\n    constructor(post_proc=null) {\n        this.post_proc = post_proc;\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        let cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, [val]);\n        } else {\n            cur_aggr.push(val);\n        }\n    }\n\n    get_final(key) {\n        let cur_aggr = this.stats.get(key);\n        if (this.post_proc === null)\n            return cur_aggr;\n        return this.post_proc(cur_aggr);\n    }\n}\n\n\nclass ConstGroupVerifier {\n    constructor(output_index) {\n        this.output_index = output_index;\n        this.const_values = new Map();\n    }\n\n    increment(key, value) {\n        var old_value = this.const_values.get(key);\n        if (old_value === undefined) {\n            this.const_values.set(key, value);\n        } else if (old_value != value) {\n            throw new RbqlRuntimeError(`Invalid aggregate expression: non-constant values in output column ${this.output_index + 1}. E.g. \"${old_value}\" and \"${value}\"`);\n        }\n    }\n\n    get_final(key) {\n        return this.const_values.get(key);\n    }\n}\n\n\nfunction init_aggregator(generator_name, val, post_proc=null) {\n    query_context.aggregation_stage = 1;\n    var res = new RBQLAggregationToken(query_context.functional_aggregators.length, val);\n    if (post_proc === null) {\n        query_context.functional_aggregators.push(new generator_name());\n    } else {\n        query_context.functional_aggregators.push(new generator_name(post_proc));\n    }\n    return res;\n}\n\n\nfunction MIN(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(MinAggregator, val) : val;\n}\nconst min = MIN;\nconst Min = MIN;\n\n\nfunction MAX(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(MaxAggregator, val) : val;\n}\nconst max = MAX;\nconst Max = MAX;\n\nfunction COUNT(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(CountAggregator, 1) : 1;\n}\nconst count = COUNT;\nconst Count = COUNT;\n\nfunction SUM(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(SumAggregator, val) : val;\n}\nconst sum = SUM;\nconst Sum = SUM;\n\nfunction AVG(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(AvgAggregator, val) : val;\n}\nconst avg = AVG;\nconst Avg = AVG;\n\nfunction VARIANCE(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(VarianceAggregator, val) : val;\n}\nconst variance = VARIANCE;\nconst Variance = VARIANCE;\n\nfunction MEDIAN(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(MedianAggregator, val) : val;\n}\nconst median = MEDIAN;\nconst Median = MEDIAN;\n\nfunction ARRAY_AGG(val, post_proc=null) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(ArrayAggAggregator, val, post_proc) : val;\n}\nconst array_agg = ARRAY_AGG;\nconst FOLD = ARRAY_AGG; // \"FOLD\" is deprecated, just for backward compatibility\n\n\nfunction add_to_set(dst_set, value) {\n    var len_before = dst_set.size;\n    dst_set.add(value);\n    return len_before != dst_set.size;\n}\n\n\nclass TopWriter {\n    constructor(subwriter, top_count) {\n        this.subwriter = subwriter;\n        this.NW = 0;\n        this.top_count = top_count;\n    }\n\n    async write(record) {\n        if (this.top_count !== null && this.NW >= this.top_count)\n            return false;\n        await this.subwriter.write(record);\n        this.NW += 1;\n        return true;\n    }\n\n    async finish() {\n        await this.subwriter.finish();\n    }\n}\n\n\nclass UniqWriter {\n    constructor(subwriter) {\n        this.subwriter = subwriter;\n        this.seen = new Set();\n    }\n\n    async write(record) {\n        if (!add_to_set(this.seen, JSON.stringify(record)))\n            return true;\n        if (!await this.subwriter.write(record))\n            return false;\n        return true;\n    }\n\n    async finish() {\n        await this.subwriter.finish();\n    }\n}\n\n\nclass UniqCountWriter {\n    constructor(subwriter) {\n        this.subwriter = subwriter;\n        this.records = new Map();\n    }\n\n    async write(record) {\n        var key = JSON.stringify(record);\n        var old_val = this.records.get(key);\n        if (old_val) {\n            old_val[0] += 1;\n        } else {\n            this.records.set(key, [1, record]);\n        }\n        return true;\n    }\n\n    async finish() {\n        for (var [key, value] of this.records) {\n            let [count, record] = value;\n            record.unshift(count);\n            if (!await this.subwriter.write(record))\n                break;\n        }\n        await this.subwriter.finish();\n    }\n}\n\n\nclass SortedWriter {\n    constructor(subwriter, reverse_sort) {\n        this.subwriter = subwriter;\n        this.reverse_sort = reverse_sort;\n        this.unsorted_entries = [];\n    }\n\n    async write(stable_entry) {\n        this.unsorted_entries.push(stable_entry);\n        return true;\n    }\n\n    async finish() {\n        var unsorted_entries = this.unsorted_entries;\n        unsorted_entries.sort(stable_compare);\n        if (this.reverse_sort)\n            unsorted_entries.reverse();\n        for (var i = 0; i < unsorted_entries.length; i++) {\n            var entry = unsorted_entries[i];\n            if (!await this.subwriter.write(entry[entry.length - 1]))\n                break;\n        }\n        await this.subwriter.finish();\n    }\n}\n\n\nclass AggregateWriter {\n    constructor(subwriter) {\n        this.subwriter = subwriter;\n        this.aggregators = [];\n        this.aggregation_keys = new Set();\n    }\n\n    async finish() {\n        var all_keys = Array.from(this.aggregation_keys);\n        all_keys.sort();\n        for (var i = 0; i < all_keys.length; i++) {\n            var key = all_keys[i];\n            var out_fields = [];\n            for (var ag of this.aggregators) {\n                out_fields.push(ag.get_final(key));\n            }\n            if (!await this.subwriter.write(out_fields))\n                break;\n        }\n        await this.subwriter.finish();\n    }\n}\n\n\nclass InnerJoiner {\n    constructor(join_map) {\n        this.join_map = join_map;\n    }\n\n    get_rhs(lhs_key) {\n        return this.join_map.get_join_records(lhs_key);\n    }\n}\n\n\nclass LeftJoiner {\n    constructor(join_map) {\n        this.join_map = join_map;\n        this.null_record = [[null, join_map.max_record_len, Array(join_map.max_record_len).fill(null)]];\n    }\n\n    get_rhs(lhs_key) {\n        let result = this.join_map.get_join_records(lhs_key);\n        if (result.length == 0) {\n            return this.null_record;\n        }\n        return result;\n    }\n}\n\n\nclass StrictLeftJoiner {\n    constructor(join_map) {\n        this.join_map = join_map;\n    }\n\n    get_rhs(lhs_key) {\n        let result = this.join_map.get_join_records(lhs_key);\n        if (result.length != 1) {\n            throw new RbqlRuntimeError('In \"STRICT LEFT JOIN\" each key in A must have exactly one match in B. Bad A key: \"' + lhs_key + '\"');\n        }\n        return result;\n    }\n}\n\n\nfunction select_except(src, except_fields) {\n    let result = [];\n    for (let i = 0; i < src.length; i++) {\n        if (except_fields.indexOf(i) == -1)\n            result.push(src[i]);\n    }\n    return result;\n}\n\n\nasync function select_simple(sort_key, NR, out_fields) {\n    if (query_context.sort_key_expression !== null) {\n        var sort_entry = sort_key.concat([NR, out_fields]);\n        if (!await query_context.writer.write(sort_entry))\n            return false;\n    } else {\n        if (!await query_context.writer.write(out_fields))\n            return false;\n    }\n    return true;\n}\n\n\nfunction select_aggregated(key, transparent_values) {\n    if (key !== null) {\n        key = JSON.stringify(key);\n    }\n    if (query_context.aggregation_stage === 1) {\n        if (!(query_context.writer instanceof TopWriter)) {\n            throw new RbqlParsingError('\"ORDER BY\", \"UPDATE\" and \"DISTINCT\" keywords are not allowed in aggregate queries');\n        }\n        query_context.writer = new AggregateWriter(query_context.writer);\n        let num_aggregators_found = 0;\n        for (var i = 0; i < transparent_values.length; i++) {\n            var trans_value = transparent_values[i];\n            if (trans_value instanceof RBQLAggregationToken) {\n                query_context.writer.aggregators.push(query_context.functional_aggregators[trans_value.marker_id]);\n                query_context.writer.aggregators[query_context.writer.aggregators.length - 1].increment(key, trans_value.value);\n                num_aggregators_found += 1;\n            } else {\n                query_context.writer.aggregators.push(new ConstGroupVerifier(query_context.writer.aggregators.length));\n                query_context.writer.aggregators[query_context.writer.aggregators.length - 1].increment(key, trans_value);\n            }\n        }\n        if (num_aggregators_found != query_context.functional_aggregators.length) {\n            throw new RbqlParsingError(wrong_aggregation_usage_error);\n        }\n        query_context.aggregation_stage = 2;\n    } else {\n        for (var i = 0; i < transparent_values.length; i++) {\n            var trans_value = transparent_values[i];\n            query_context.writer.aggregators[i].increment(key, trans_value);\n        }\n    }\n    query_context.writer.aggregation_keys.add(key);\n}\n\n\nasync function select_unnested(sort_key, NR, folded_fields) {\n    let out_fields = folded_fields.slice();\n    let unnest_pos = folded_fields.findIndex(val => val instanceof UnnestMarker);\n    for (var i = 0; i < query_context.unnest_list.length; i++) {\n        out_fields[unnest_pos] = query_context.unnest_list[i];\n        if (!await select_simple(sort_key, NR, out_fields.slice()))\n            return false;\n    }\n    return true;\n}\n\n\nconst PROCESS_SELECT_COMMON = `\n__RBQLMP__variables_init_code\nif (__RBQLMP__where_expression) {\n    let out_fields = __RBQLMP__select_expression;\n    if (query_context.aggregation_stage > 0) {\n        let key = __RBQLMP__aggregation_key_expression;\n        select_aggregated(key, out_fields);\n    } else {\n        let sort_key = [__RBQLMP__sort_key_expression];\n        if (query_context.unnest_list !== null) {\n            if (!await select_unnested(sort_key, NR, out_fields))\n                stop_flag = true;\n        } else {\n            if (!await select_simple(sort_key, NR, out_fields))\n                stop_flag = true;\n        }\n    }\n}\n`;\n\n\nconst PROCESS_SELECT_SIMPLE = `\nlet star_fields = record_a;\n__CODE__\n`;\n\n\nconst PROCESS_SELECT_JOIN = `\nlet join_matches = query_context.join_map.get_rhs(__RBQLMP__lhs_join_var_expression);\nfor (let join_match of join_matches) {\n    let [bNR, bNF, record_b] = join_match;\n    let star_fields = record_a.concat(record_b);\n    __CODE__\n    if (stop_flag)\n        break;\n}\n`;\n\n\nconst PROCESS_UPDATE_JOIN = `\nlet join_matches = query_context.join_map.get_rhs(__RBQLMP__lhs_join_var_expression);\nif (join_matches.length > 1)\n    throw new RbqlRuntimeError('More than one record in UPDATE query matched a key from the input table in the join table');\nlet record_b = null;\nlet bNR = null;\nlet bNF = null;\nif (join_matches.length == 1)\n    [bNR, bNF, record_b] = join_matches[0];\nlet up_fields = record_a;\n__RBQLMP__variables_init_code\nif (join_matches.length == 1 && (__RBQLMP__where_expression)) {\n    NU += 1;\n    __RBQLMP__update_expressions\n}\nif (!await query_context.writer.write(up_fields))\n    stop_flag = true;\n`;\n\n\nconst PROCESS_UPDATE_SIMPLE = `\nlet up_fields = record_a;\n__RBQLMP__variables_init_code\nif (__RBQLMP__where_expression) {\n    NU += 1;\n    __RBQLMP__update_expressions\n}\nif (!await query_context.writer.write(up_fields))\n    stop_flag = true;\n`;\n\n\nconst MAIN_LOOP_BODY = `\n__USER_INIT_CODE__\n\nlet NU = 0;\nlet NR = 0;\n\nlet stop_flag = false;\nwhile (!stop_flag) {\n    let record_a = await query_context.input_iterator.get_record();\n    if (record_a === null)\n        break;\n    NR += 1;\n    let NF = record_a.length;\n    query_context.unnest_list = null; // TODO optimize, don't need to set this every iteration\n    try {\n        __CODE__\n    } catch (e) {\n        if (e.constructor.name === 'InternalBadFieldError') {\n            throw new RbqlRuntimeError(\\`No \"a\\${e.bad_idx + 1}\" field at record \\${NR}\\`);\n        } else if (e.constructor.name === 'RbqlParsingError') {\n            throw(e);\n        } else {\n            throw new RbqlRuntimeError(\\`At record \\${NR}, Details: \\${e.message}\\`);\n        }\n    }\n}\n`;\n\n\nfunction embed_expression(parent_code, child_placeholder, child_expression) {\n    return replace_all(parent_code, child_placeholder, child_expression);\n}\n\n\nfunction embed_code(parent_code, child_placeholder, child_code) {\n    let parent_lines = parent_code.split('\\n');\n    let child_lines = child_code.split('\\n');\n    for (let i = 0; i < parent_lines.length; i++) {\n        let pos = parent_lines[i].indexOf(child_placeholder);\n        if (pos == -1)\n            continue;\n        assert(pos % 4 == 0);\n        let placeholder_indentation = parent_lines[i].substring(0, pos);\n        child_lines = child_lines.map(l => placeholder_indentation + l);\n        let result_lines = parent_lines.slice(0, i).concat(child_lines).concat(parent_lines.slice(i + 1));\n        return result_lines.join('\\n') + '\\n';\n    }\n    assert(false);\n}\n\n\nfunction generate_main_loop_code(query_context) {\n    let is_select_query = query_context.select_expression !== null;\n    let is_join_query = query_context.join_map !== null;\n    let where_expression = query_context.where_expression === null ? 'true' : query_context.where_expression;\n    let aggregation_key_expression = query_context.aggregation_key_expression === null ? 'null' : query_context.aggregation_key_expression;\n    let sort_key_expression = query_context.sort_key_expression === null ? 'null' : query_context.sort_key_expression;\n    let js_code = embed_code(MAIN_LOOP_BODY, '__USER_INIT_CODE__', query_context.user_init_code);\n    if (is_select_query) {\n        if (is_join_query) {\n            js_code = embed_code(embed_code(js_code, '__CODE__', PROCESS_SELECT_JOIN), '__CODE__', PROCESS_SELECT_COMMON);\n            js_code = embed_expression(js_code, '__RBQLMP__lhs_join_var_expression', query_context.lhs_join_var_expression);\n        } else {\n            js_code = embed_code(embed_code(js_code, '__CODE__', PROCESS_SELECT_SIMPLE), '__CODE__', PROCESS_SELECT_COMMON);\n        }\n        js_code = embed_code(js_code, '__RBQLMP__variables_init_code', query_context.variables_init_code);\n        js_code = embed_expression(js_code, '__RBQLMP__select_expression', query_context.select_expression);\n        js_code = embed_expression(js_code, '__RBQLMP__where_expression', where_expression);\n        js_code = embed_expression(js_code, '__RBQLMP__aggregation_key_expression', aggregation_key_expression);\n        js_code = embed_expression(js_code, '__RBQLMP__sort_key_expression', sort_key_expression);\n    } else {\n        if (is_join_query) {\n            js_code = embed_code(js_code, '__CODE__', PROCESS_UPDATE_JOIN);\n            js_code = embed_expression(js_code, '__RBQLMP__lhs_join_var_expression', query_context.lhs_join_var_expression);\n        } else {\n            js_code = embed_code(js_code, '__CODE__', PROCESS_UPDATE_SIMPLE);\n        }\n        js_code = embed_code(js_code, '__RBQLMP__variables_init_code', query_context.variables_init_code);\n        js_code = embed_code(js_code, '__RBQLMP__update_expressions', query_context.update_expressions);\n        js_code = embed_expression(js_code, '__RBQLMP__where_expression', where_expression);\n    }\n    return \"(async () => {\" + js_code + \"})()\";\n}\n\n\nasync function compile_and_run(query_context) {\n    let main_loop_body = generate_main_loop_code(query_context);\n    try {\n        let main_loop_promise = eval(main_loop_body);\n        await main_loop_promise;\n    } catch (e) {\n        if (e instanceof SyntaxError) {\n            // SyntaxError's from eval() function do not contain detailed explanation of what has caused the syntax error, so to guess what was wrong we can only use the original query\n            // v8 issue to fix eval: https://bugs.chromium.org/p/v8/issues/detail?id=2589\n            let lower_case_query = query_context.query_text.toLowerCase();\n            if (lower_case_query.indexOf(' having ') != -1)\n                throw new SyntaxError(e.message + \"\\nRBQL doesn't support \\\"HAVING\\\" keyword\");\n            if (lower_case_query.indexOf(' like ') != -1)\n                throw new SyntaxError(e.message + \"\\nRBQL doesn't support \\\"LIKE\\\" operator, use like() function instead e.g. ... WHERE like(a1, 'foo%bar') ... \"); // UT JSON\n            if (lower_case_query.indexOf(' from ') != -1)\n                throw new SyntaxError(e.message + \"\\nTip: If input table is defined by the environment, RBQL query should not have \\\"FROM\\\" keyword\"); // UT JSON\n            if (e && e.message && String(e.message).toLowerCase().indexOf('unexpected identifier') != -1) {\n                if (lower_case_query.indexOf(' and ') != -1)\n                    throw new SyntaxError(e.message + \"\\nDid you use 'and' keyword in your query?\\nJavaScript backend doesn't support 'and' keyword, use '&&' operator instead!\");\n                if (lower_case_query.indexOf(' or ') != -1)\n                    throw new SyntaxError(e.message + \"\\nDid you use 'or' keyword in your query?\\nJavaScript backend doesn't support 'or' keyword, use '||' operator instead!\");\n            }\n        }\n        if (e && e.message && e.message.indexOf('Received an instance of RBQLAggregationToken') != -1)\n            throw new RbqlParsingError(wrong_aggregation_usage_error);\n        throw e;\n    }\n}\n\n\nconst GROUP_BY = 'GROUP BY';\nconst UPDATE = 'UPDATE';\nconst SELECT = 'SELECT';\nconst JOIN = 'JOIN';\nconst INNER_JOIN = 'INNER JOIN';\nconst LEFT_JOIN = 'LEFT JOIN';\nconst LEFT_OUTER_JOIN = 'LEFT OUTER JOIN';\nconst STRICT_LEFT_JOIN = 'STRICT LEFT JOIN';\nconst ORDER_BY = 'ORDER BY';\nconst WHERE = 'WHERE';\nconst LIMIT = 'LIMIT';\nconst EXCEPT = 'EXCEPT';\nconst WITH = 'WITH';\n\n\nfunction get_ambiguous_error_msg(variable_name) {\n    return `Ambiguous variable name: \"${variable_name}\" is present both in input and in join tables`;\n}\n\n\nfunction get_all_matches(regexp, text) {\n    var result = [];\n    let match_obj = null;\n    while((match_obj = regexp.exec(text)) !== null) {\n        result.push(match_obj);\n    }\n    return result;\n}\n\n\nfunction str_strip(src) {\n    return src.replace(/^ +| +$/g, '');\n}\n\n\nfunction strip_comments(cline) {\n    cline = cline.trim();\n    if (cline.startsWith('//'))\n        return '';\n    return cline;\n}\n\n\nfunction combine_string_literals(backend_expression, string_literals) {\n    for (var i = 0; i < string_literals.length; i++) {\n        backend_expression = replace_all(backend_expression, `___RBQL_STRING_LITERAL${i}___`, string_literals[i]);\n    }\n    return backend_expression;\n}\n\n\nfunction parse_basic_variables(query_text, prefix, dst_variables_map) {\n    assert(prefix == 'a' || prefix == 'b');\n    let rgx = new RegExp(`(?:^|[^_a-zA-Z0-9])${prefix}([1-9][0-9]*)(?:$|(?=[^_a-zA-Z0-9]))`, 'g');\n    let matches = get_all_matches(rgx, query_text);\n    for (let i = 0; i < matches.length; i++) {\n        let field_num = parseInt(matches[i][1]);\n        dst_variables_map[prefix + String(field_num)] = {initialize: true, index: field_num - 1};\n    }\n}\n\n\nfunction parse_array_variables(query_text, prefix, dst_variables_map) {\n    assert(prefix == 'a' || prefix == 'b');\n    let rgx = new RegExp(`(?:^|[^_a-zA-Z0-9])${prefix}\\\\[([1-9][0-9]*)\\\\]`, 'g');\n    let matches = get_all_matches(rgx, query_text);\n    for (let i = 0; i < matches.length; i++) {\n        let field_num = parseInt(matches[i][1]);\n        dst_variables_map[`${prefix}[${field_num}]`] = {initialize: true, index: field_num - 1};\n    }\n}\n\n\nfunction js_string_escape_column_name(column_name, quote_char) {\n    column_name = column_name.replace(/\\\\/g, '\\\\\\\\');\n    column_name = column_name.replace(/\\n/g, '\\\\n');\n    column_name = column_name.replace(/\\r/g, '\\\\r');\n    column_name = column_name.replace(/\\t/g, '\\\\t');\n    if (quote_char === \"'\")\n        return column_name.replace(/'/g, \"\\\\'\");\n    if (quote_char === '\"')\n        return column_name.replace(/\"/g, '\\\\\"');\n    assert(quote_char === \"`\");\n    return column_name.replace(/`/g, \"\\\\`\");\n}\n\n\nfunction query_probably_has_dictionary_variable(query_text, column_name) {\n    let rgx = new RegExp('[-a-zA-Z0-9_:;+=!.,()%^#@&* ]+', 'g');\n    let continuous_name_segments = get_all_matches(rgx, column_name);\n    for (let continuous_segment of continuous_name_segments) {\n        if (query_text.indexOf(continuous_segment) == -1)\n            return false;\n    }\n    return true;\n}\n\n\nfunction parse_dictionary_variables(query_text, prefix, column_names, dst_variables_map) {\n    // The purpose of this algorithm is to minimize number of variables in varibale_map to improve performance, ideally it should be only variables from the query\n\n    // FIXME to prevent typos in attribute names either use query-based variable parsing which can properly handle back-tick strings or wrap \"a\" and \"b\" variables with ES6 Proxies https://stackoverflow.com/a/25658975/2898283\n    assert(prefix === 'a' || prefix === 'b');\n    let dict_test_rgx = new RegExp(`(?:^|[^_a-zA-Z0-9])${prefix}\\\\[`);\n    if (query_text.search(dict_test_rgx) == -1)\n        return;\n    for (let i = 0; i < column_names.length; i++) {\n        let column_name = column_names[i];\n        if (query_probably_has_dictionary_variable(query_text, column_name)) {\n            let escaped_column_name = js_string_escape_column_name(column_name, '\"');\n            dst_variables_map[`${prefix}[\"${escaped_column_name}\"]`] = {initialize: true, index: i};\n            escaped_column_name = js_string_escape_column_name(column_name, \"'\");\n            dst_variables_map[`${prefix}['${escaped_column_name}']`] = {initialize: false, index: i};\n            escaped_column_name = js_string_escape_column_name(column_name, \"`\");\n            dst_variables_map[`${prefix}[\\`${escaped_column_name}\\`]`] = {initialize: false, index: i};\n        }\n    }\n}\n\n\nfunction parse_attribute_variables(query_text, prefix, column_names, column_names_source, dst_variables_map) {\n    // The purpose of this algorithm is to minimize number of variables in varibale_map to improve performance, ideally it should be only variables from the query\n\n    assert(prefix === 'a' || prefix === 'b');\n    let rgx = new RegExp(`(?:^|[^_a-zA-Z0-9])${prefix}\\\\.([_a-zA-Z][_a-zA-Z0-9]*)`, 'g');\n    let matches = get_all_matches(rgx, query_text);\n    let column_names_from_query = matches.map(v => v[1]);\n    for (let column_name of column_names_from_query) {\n        let zero_based_idx = column_names.indexOf(column_name);\n        if (zero_based_idx != -1) {\n            dst_variables_map[`${prefix}.${column_name}`] = {initialize: true, index: zero_based_idx};\n        } else {\n            throw new RbqlParsingError(`Unable to find column \"${column_name}\" in ${prefix == 'a' ? 'input' : 'join'} ${column_names_source}`);\n        }\n    }\n}\n\n\nfunction map_variables_directly(query_text, column_names, dst_variables_map) {\n    for (let i = 0; i < column_names.length; i++) {\n        let column_name = column_names[i];\n        if ( /^[_a-zA-Z][_a-zA-Z0-9]*$/.exec(column_name) === null)\n            throw new RbqlIOHandlingError(`Unable to use column name \"${column_name}\" as RBQL/JS variable`);\n        if (query_text.indexOf(column_name) != -1)\n            dst_variables_map[column_name] = {initialize: true, index: i};\n    }\n}\n\n\nfunction ensure_no_ambiguous_variables(query_text, input_column_names, join_column_names) {\n    let join_column_names_set = new Set(join_column_names);\n    for (let column_name of input_column_names) {\n        if (join_column_names_set.has(column_name) && query_text.indexOf(column_name) != -1) // False positive is tolerable here\n            throw new RbqlParsingError(get_ambiguous_error_msg(column_name));\n    }\n}\n\n\nfunction parse_join_expression(src) {\n    src = str_strip(src);\n    const invalid_join_syntax_error = 'Invalid join syntax. Valid syntax: <JOIN> /path/to/B/table on a... == b... [and a... == b... [and ... ]]';\n    let rgx = /^ *([^ ]+) +on +/i;\n    let match = rgx.exec(src);\n    if (match === null)\n        throw new RbqlParsingError(invalid_join_syntax_error);\n    let table_id = match[1];\n    src = src.substr(match[0].length);\n\n    let variable_pairs = [];\n    var pair_rgx = /^([^ =]+) *==? *([^ =]+)/;\n    var and_rgx = /^ +(and|&&) +/i;\n    while (true) {\n        match = pair_rgx.exec(src);\n        if (match === null)\n            throw new RbqlParsingError(invalid_join_syntax_error);\n        variable_pairs.push([match[1], match[2]]);\n        src = src.substr(match[0].length);\n        if (!src.length)\n            break;\n        match = and_rgx.exec(src);\n        if (match === null)\n            throw new RbqlParsingError(invalid_join_syntax_error);\n        src = src.substr(match[0].length);\n    }\n    return [table_id, variable_pairs];\n}\n\n\nfunction resolve_join_variables(input_variables_map, join_variables_map, variable_pairs, string_literals) {\n    let lhs_variables = [];\n    let rhs_indices = [];\n    const valid_join_syntax_msg = 'Valid JOIN syntax: <JOIN> /path/to/B/table on a... == b... [and a... == b... [and ... ]]';\n    for (let variable_pair of variable_pairs) {\n        let [join_var_1, join_var_2] = variable_pair;\n        join_var_1 = combine_string_literals(join_var_1, string_literals);\n        join_var_2 = combine_string_literals(join_var_2, string_literals);\n        if (input_variables_map.hasOwnProperty(join_var_1) && join_variables_map.hasOwnProperty(join_var_1))\n            throw new RbqlParsingError(get_ambiguous_error_msg(join_var_1));\n        if (input_variables_map.hasOwnProperty(join_var_2) && join_variables_map.hasOwnProperty(join_var_2))\n            throw new RbqlParsingError(get_ambiguous_error_msg(join_var_2));\n        if (input_variables_map.hasOwnProperty(join_var_2))\n            [join_var_1, join_var_2] = [join_var_2, join_var_1];\n\n        let [lhs_key_index, rhs_key_index] = [null, null];\n        if (['NR', 'a.NR', 'aNR'].indexOf(join_var_1) != -1) {\n            lhs_key_index = -1;\n        } else if (input_variables_map.hasOwnProperty(join_var_1)) {\n            lhs_key_index = input_variables_map[join_var_1].index;\n        } else {\n            throw new RbqlParsingError(`Unable to parse JOIN expression: Input table does not have field \"${join_var_1}\"\\n${valid_join_syntax_msg}`);\n        }\n\n        if (['b.NR', 'bNR'].indexOf(join_var_2) != -1) {\n            rhs_key_index = -1;\n        } else if (join_variables_map.hasOwnProperty(join_var_2)) {\n            rhs_key_index = join_variables_map[join_var_2].index;\n        } else {\n            throw new RbqlParsingError(`Unable to parse JOIN expression: Join table does not have field \"${join_var_2}\"\\n${valid_join_syntax_msg}`);\n        }\n\n        let lhs_join_var_expression = lhs_key_index == -1 ? 'NR' : `safe_join_get(record_a, ${lhs_key_index})`;\n        rhs_indices.push(rhs_key_index);\n        lhs_variables.push(lhs_join_var_expression);\n    }\n    return [lhs_variables, rhs_indices];\n}\n\n\nfunction generate_common_init_code(query_text, variable_prefix) {\n    assert(variable_prefix == 'a' || variable_prefix == 'b');\n    let result = [];\n    result.push(`${variable_prefix} = new Object();`);\n    let base_var = variable_prefix == 'a' ? 'NR' : 'bNR';\n    let attr_var = `${variable_prefix}.NR`;\n    if (query_text.indexOf(attr_var) != -1)\n        result.push(`${attr_var} = ${base_var};`);\n    if (variable_prefix == 'a' && query_text.indexOf('aNR') != -1)\n        result.push('aNR = NR;');\n    return result;\n}\n\n\nfunction generate_init_statements(query_text, variables_map, join_variables_map, indent) {\n    let code_lines = generate_common_init_code(query_text, 'a');\n    let simple_var_name_rgx = /^[_0-9a-zA-Z]+$/;\n    for (const [variable_name, var_info] of Object.entries(variables_map)) {\n        if (var_info.initialize) {\n            let variable_declaration_keyword = simple_var_name_rgx.exec(variable_name) ? 'var ' : '';\n            code_lines.push(`${variable_declaration_keyword}${variable_name} = safe_get(record_a, ${var_info.index});`);\n        }\n    }\n    if (join_variables_map) {\n        code_lines = code_lines.concat(generate_common_init_code(query_text, 'b'));\n        for (const [variable_name, var_info] of Object.entries(join_variables_map)) {\n            if (var_info.initialize) {\n                let variable_declaration_keyword = simple_var_name_rgx.exec(variable_name) ? 'var ' : '';\n                code_lines.push(`${variable_declaration_keyword}${variable_name} = record_b === null ? null : safe_get(record_b, ${var_info.index});`);\n            }\n        }\n    }\n    for (let i = 1; i < code_lines.length; i++) {\n        code_lines[i] = indent + code_lines[i];\n    }\n    return code_lines.join('\\n');\n}\n\n\nfunction replace_star_count(aggregate_expression) {\n    var rgx = /(^|,) *COUNT\\( *\\* *\\) *(?:$|(?=,))/ig;\n    var result = aggregate_expression.replace(rgx, '$1 COUNT(1)');\n    return str_strip(result);\n}\n\n\nfunction replace_star_vars(rbql_expression) {\n    let star_rgx = /(?:^|,) *(\\*|a\\.\\*|b\\.\\*) *(?=$|,)/g;\n    let matches = get_all_matches(star_rgx, rbql_expression);\n    let last_pos = 0;\n    let result = '';\n    for (let match of matches) {\n        let star_expression = match[1];\n        let replacement_expression = ']).concat(' + {'*': 'star_fields', 'a.*': 'record_a', 'b.*': 'record_b'}[star_expression] + ').concat([';\n        if (last_pos < match.index)\n            result += rbql_expression.substring(last_pos, match.index);\n        result += replacement_expression;\n        last_pos = match.index + match[0].length + 1; // Adding one to skip the lookahead comma\n    }\n    result += rbql_expression.substring(last_pos);\n    return result;\n}\n\n\nfunction replace_star_vars_for_header_parsing(rbql_expression) {\n    let star_rgx = /(?:(?<=^)|(?<=,)) *(\\*|a\\.\\*|b\\.\\*) *(?=$|,)/g;\n    let matches = get_all_matches(star_rgx, rbql_expression);\n    let last_pos = 0;\n    let result = '';\n    for (let match of matches) {\n        let star_expression = match[1];\n        let replacement_expression = {'*': '__RBQL_INTERNAL_STAR', 'a.*': 'a.__RBQL_INTERNAL_STAR', 'b.*': 'b.__RBQL_INTERNAL_STAR'}[star_expression];\n        if (last_pos < match.index)\n            result += rbql_expression.substring(last_pos, match.index);\n        result += replacement_expression;\n        last_pos = match.index + match[0].length;\n    }\n    result += rbql_expression.substring(last_pos);\n    return result;\n}\n\n\nfunction translate_update_expression(update_expression, input_variables_map, string_literals, indent) {\n    let first_assignment = str_strip(update_expression.split('=')[0]);\n    let first_assignment_error = `Unable to parse \"UPDATE\" expression: the expression must start with assignment, but \"${first_assignment}\" does not look like an assignable field name`;\n\n    let assignment_looking_rgx = /(?:^|,) *(a[.#a-zA-Z0-9\\[\\]_]*) *=(?=[^=])/g;\n    let update_expressions = [];\n    let pos = 0;\n    while (true) {\n        let match = assignment_looking_rgx.exec(update_expression);\n        if (update_expressions.length == 0 && (match === null || match.index != 0)) {\n            throw new RbqlParsingError(first_assignment_error);\n        }\n        if (match === null) {\n            update_expressions[update_expressions.length - 1] += str_strip(update_expression.substr(pos)) + ');';\n            break;\n        }\n        if (update_expressions.length)\n            update_expressions[update_expressions.length - 1] += str_strip(update_expression.substring(pos, match.index)) + ');';\n        let dst_var_name = combine_string_literals(str_strip(match[1]), string_literals);\n        if (!input_variables_map.hasOwnProperty(dst_var_name))\n            throw new RbqlParsingError(`Unable to parse \"UPDATE\" expression: Unknown field name: \"${dst_var_name}\"`);\n        let var_index = input_variables_map[dst_var_name].index;\n        let current_indent = update_expressions.length ? indent : '';\n        update_expressions.push(`${current_indent}safe_set(up_fields, ${var_index}, `);\n        pos = match.index + match[0].length;\n    }\n    return combine_string_literals(update_expressions.join('\\n'), string_literals);\n}\n\n\nfunction translate_select_expression(select_expression) {\n    let expression_without_stars = replace_star_count(select_expression);\n    let translated = str_strip(replace_star_vars(expression_without_stars));\n    let translated_for_header = str_strip(replace_star_vars_for_header_parsing(expression_without_stars));\n    if (!translated.length)\n        throw new RbqlParsingError('\"SELECT\" expression is empty');\n    return [`[].concat([${translated}])`, translated_for_header];\n}\n\n\nfunction separate_string_literals(rbql_expression) {\n    // The regex consists of 3 almost identicall parts, the only difference is quote type\n    var rgx = /('(\\\\(\\\\\\\\)*'|[^'])*')|(\"(\\\\(\\\\\\\\)*\"|[^\"])*\")|(`(\\\\(\\\\\\\\)*`|[^`])*`)/g;\n    var match_obj = null;\n    var format_parts = [];\n    var string_literals = [];\n    var idx_before = 0;\n    while((match_obj = rgx.exec(rbql_expression)) !== null) {\n        var literal_id = string_literals.length;\n        var string_literal = match_obj[0];\n        string_literals.push(string_literal);\n        var start_index = match_obj.index;\n        format_parts.push(rbql_expression.substring(idx_before, start_index));\n        format_parts.push(`___RBQL_STRING_LITERAL${literal_id}___`);\n        idx_before = rgx.lastIndex;\n    }\n    format_parts.push(rbql_expression.substring(idx_before));\n    var format_expression = format_parts.join('');\n    format_expression = format_expression.replace(/\\t/g, ' ');\n    return [format_expression, string_literals];\n}\n\n\nfunction locate_statements(rbql_expression) {\n    let statement_groups = [];\n    statement_groups.push([STRICT_LEFT_JOIN, LEFT_OUTER_JOIN, LEFT_JOIN, INNER_JOIN, JOIN]);\n    statement_groups.push([SELECT]);\n    statement_groups.push([ORDER_BY]);\n    statement_groups.push([WHERE]);\n    statement_groups.push([UPDATE]);\n    statement_groups.push([GROUP_BY]);\n    statement_groups.push([LIMIT]);\n    statement_groups.push([EXCEPT]);\n    var result = [];\n    for (var ig = 0; ig < statement_groups.length; ig++) {\n        for (var is = 0; is < statement_groups[ig].length; is++) {\n            var statement = statement_groups[ig][is];\n            var rgxp = new RegExp('(?:^| )' + replace_all(statement, ' ', ' *') + '(?= )', 'ig');\n            var matches = get_all_matches(rgxp, rbql_expression);\n            if (!matches.length)\n                continue;\n            if (matches.length > 1)\n                throw new RbqlParsingError(`More than one \"${statement}\" statements found`);\n            assert(matches.length == 1);\n            var match = matches[0];\n            var match_str = match[0];\n            result.push([match.index, match.index + match_str.length, statement]);\n            break; // Break to avoid matching a sub-statement from the same group e.g. \"INNER JOIN\" -> \"JOIN\"\n        }\n    }\n    result.sort(function(a, b) { return a[0] - b[0]; });\n    return result;\n}\n\n\nfunction separate_actions(rbql_expression) {\n    rbql_expression = str_strip(rbql_expression);\n    var result = {};\n    let with_match = /^(.*)  *[Ww][Ii][Tt][Hh] *\\(([a-z]{4,20})\\) *$/.exec(rbql_expression);\n    if (with_match !== null) {\n        rbql_expression = with_match[1];\n        result[WITH] = with_match[2];\n    }\n    var ordered_statements = locate_statements(rbql_expression);\n    for (var i = 0; i < ordered_statements.length; i++) {\n        var statement_start = ordered_statements[i][0];\n        var span_start = ordered_statements[i][1];\n        var statement = ordered_statements[i][2];\n        var span_end = i + 1 < ordered_statements.length ? ordered_statements[i + 1][0] : rbql_expression.length;\n        assert(statement_start < span_start);\n        assert(span_start <= span_end);\n        var span = rbql_expression.substring(span_start, span_end);\n        var statement_params = {};\n        if ([STRICT_LEFT_JOIN, LEFT_OUTER_JOIN, LEFT_JOIN, INNER_JOIN, JOIN].indexOf(statement) != -1) {\n            statement_params['join_subtype'] = statement;\n            statement = JOIN;\n        }\n\n        if (statement == UPDATE) {\n            if (statement_start != 0)\n                throw new RbqlParsingError('UPDATE keyword must be at the beginning of the query');\n            span = span.replace(/^ *SET/i, '');\n        }\n\n        if (statement == ORDER_BY) {\n            span = span.replace(/ ASC *$/i, '');\n            var new_span = span.replace(/ DESC *$/i, '');\n            if (new_span != span) {\n                span = new_span;\n                statement_params['reverse'] = true;\n            } else {\n                statement_params['reverse'] = false;\n            }\n        }\n\n        if (statement == SELECT) {\n            if (statement_start != 0)\n                throw new RbqlParsingError('SELECT keyword must be at the beginning of the query');\n            let match = /^ *TOP *([0-9]+) /i.exec(span);\n            if (match !== null) {\n                statement_params['top'] = parseInt(match[1]);\n                span = span.substr(match.index + match[0].length);\n            }\n            match = /^ *DISTINCT *(COUNT)? /i.exec(span);\n            if (match !== null) {\n                statement_params['distinct'] = true;\n                if (match[1]) {\n                    statement_params['distinct_count'] = true;\n                }\n                span = span.substr(match.index + match[0].length);\n            }\n        }\n        statement_params['text'] = str_strip(span);\n        result[statement] = statement_params;\n    }\n    if (!result.hasOwnProperty(SELECT) && !result.hasOwnProperty(UPDATE)) {\n        throw new RbqlParsingError('Query must contain either SELECT or UPDATE statement');\n    }\n    assert(result.hasOwnProperty(SELECT) != result.hasOwnProperty(UPDATE));\n    return result;\n}\n\n\nfunction find_top(rb_actions) {\n    if (rb_actions.hasOwnProperty(LIMIT)) {\n        var rgx = /^[0-9]+$/;\n        if (rgx.exec(rb_actions[LIMIT]['text']) === null) {\n            throw new RbqlParsingError('LIMIT keyword must be followed by an integer');\n        }\n        var result = parseInt(rb_actions[LIMIT]['text']);\n        return result;\n    }\n    var select_action = rb_actions[SELECT];\n    if (select_action && select_action.hasOwnProperty('top')) {\n        return select_action['top'];\n    }\n    return null;\n}\n\n\nfunction translate_except_expression(except_expression, input_variables_map, string_literals, input_header) {\n    let skip_vars = except_expression.split(',');\n    skip_vars = skip_vars.map(str_strip);\n    let skip_indices = [];\n    for (let var_name of skip_vars) {\n        var_name = combine_string_literals(var_name, string_literals);\n        if (!input_variables_map.hasOwnProperty(var_name))\n            throw new RbqlParsingError(`Unknown field in EXCEPT expression: \"${var_name}\"`);\n        skip_indices.push(input_variables_map[var_name].index);\n    }\n    skip_indices = skip_indices.sort((a, b) => a - b);\n    let output_header = input_header === null ? null : select_except(input_header, skip_indices);\n    let indices_str = skip_indices.join(',');\n    return [output_header, `select_except(record_a, [${indices_str}])`];\n}\n\n\nclass HashJoinMap {\n    constructor(record_iterator, key_indices) {\n        this.max_record_len = 0;\n        this.hash_map = new Map();\n        this.record_iterator = record_iterator;\n        this.nr = 0;\n        if (key_indices.length == 1) {\n            this.key_index = key_indices[0];\n            this.key_indices = null;\n            this.polymorphic_get_key = this.get_single_key;\n        } else {\n            this.key_index = null;\n            this.key_indices = key_indices;\n            this.polymorphic_get_key = this.get_multi_key;\n        }\n    }\n\n    get_single_key(nr, fields) {\n        if (this.key_index >= fields.length)\n            throw new RbqlRuntimeError(`No field with index ${this.key_index + 1} at record ${this.nr} in \"B\" table`);\n        return this.key_index === -1 ? this.nr : fields[this.key_index];\n    };\n\n    get_multi_key(nr, fields) {\n        let result = [];\n        for (let ki of this.key_indices) {\n            if (ki >= fields.length)\n                throw new RbqlRuntimeError(`No field with index ${ki + 1} at record ${this.nr} in \"B\" table`);\n            result.push(ki === -1 ? this.nr : fields[ki]);\n        }\n        return JSON.stringify(result);\n    };\n\n    async build() {\n        while (true) {\n            let fields = await this.record_iterator.get_record();\n            if (fields === null)\n                break;\n            this.nr += 1;\n            let nf = fields.length;\n            this.max_record_len = Math.max(this.max_record_len, nf);\n            let key = this.polymorphic_get_key(this.nr, fields);\n            let key_records = this.hash_map.get(key);\n            if (key_records === undefined) {\n                this.hash_map.set(key, [[this.nr, nf, fields]]);\n            } else {\n                key_records.push([this.nr, nf, fields]);\n            }\n        }\n    };\n\n    get_join_records(key) {\n        let result = this.hash_map.get(key);\n        if (result === undefined)\n            return [];\n        return result;\n    };\n\n    get_warnings() {\n        return this.record_iterator.get_warnings();\n    };\n}\n\n\nfunction cleanup_query(query_text) {\n    return query_text.split('\\n').map(strip_comments).filter(line => line.length).join(' ').replace(/;+$/g, '');\n}\n\n\nfunction remove_redundant_table_name(query_text) {\n    query_text = str_strip(query_text.replace(/ +from +a(?: +|$)/gi, ' '));\n    query_text = str_strip(query_text.replace(/^ *update +a +set /gi, 'update '));\n    return query_text;\n}\n\n\nfunction select_output_header(input_header, join_header, query_column_infos) {\n    if (input_header === null && join_header === null)\n        return null;\n    if (input_header === null)\n        input_header = [];\n    if (join_header === null)\n        join_header = [];\n    let output_header = [];\n    for (let qci of query_column_infos) {\n        // TODO refactor this and python version: extract this code into a function instead to always return something\n        if (qci === null) {\n            output_header.push('col' + (output_header.length + 1));\n        } else if (qci.is_star) {\n            if (qci.table_name === null) {\n                output_header = output_header.concat(input_header).concat(join_header);\n            } else if (qci.table_name === 'a') {\n                output_header = output_header.concat(input_header);\n            } else if (qci.table_name === 'b') {\n                output_header = output_header.concat(join_header);\n            }\n        } else if (qci.column_name !== null) {\n            output_header.push(qci.column_name);\n        } else if (qci.column_index !== null) {\n            if (qci.table_name == 'a' && qci.column_index < input_header.length) {\n                output_header.push(input_header[qci.column_index]);\n            } else if (qci.table_name == 'b' && qci.column_index < join_header.length) {\n                output_header.push(join_header[qci.column_index]);\n            } else {\n                output_header.push('col' + (output_header.length + 1));\n            }\n        } else { // Should never happen\n            output_header.push('col' + (output_header.length + 1));\n        }\n    }\n    return output_header;\n}\n\n\nfunction make_inconsistent_num_fields_warning(table_name, inconsistent_records_info) {\n    let keys = Object.keys(inconsistent_records_info);\n    let entries = [];\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let record_id = inconsistent_records_info[key];\n        entries.push([record_id, key]);\n    }\n    entries.sort(function(a, b) { return a[0] - b[0]; });\n    assert(entries.length > 1);\n    let [record_1, num_fields_1] = entries[0];\n    let [record_2, num_fields_2] = entries[1];\n    let warn_msg = `Number of fields in \"${table_name}\" table is not consistent: `;\n    warn_msg += `e.g. record ${record_1} -> ${num_fields_1} fields, record ${record_2} -> ${num_fields_2} fields`;\n    return warn_msg;\n}\n\n\nclass RBQLInputIterator {\n    constructor(){}\n    stop() {\n        throw new Error(\"Unable to call the interface method\");\n    }\n    async get_variables_map(query_text) {\n        throw new Error(\"Unable to call the interface method\");\n    }\n    async get_record() {\n        throw new Error(\"Unable to call the interface method\");\n    }\n    handle_query_modifier() {\n        return; // Reimplement if you need to handle a boolean query modifier that can be used like this: `SELECT * WITH (modifiername)`\n    }\n    get_warnings() {\n        return []; // Reimplement if your class can produce warnings\n    }\n    async get_header() {\n        return null; // Reimplement if your class can provide input header\n    }\n}\n\n\nclass RBQLOutputWriter {\n    constructor(){}\n\n    async write(fields) {\n        throw new Error(\"Unable to call the interface method\");\n    }\n\n    async finish() {\n        // Reimplement if your class needs to do something on finish e.g. cleanup\n    };\n\n    get_warnings() {\n        return []; // Reimplement if your class can produce warnings\n    };\n\n    set_header() {\n        return; // Reimplement if your class can handle output headers in a meaningful way\n    }\n}\n\n\nclass RBQLTableRegistry {\n    constructor(){}\n\n    get_iterator_by_table_id(table_id) {\n        throw new Error(\"Unable to call the interface method\");\n    }\n\n    get_warnings() {\n        return []; // Reimplement if your class can produce warnings\n    };\n}\n\n\nclass TableIterator extends RBQLInputIterator {\n    constructor(table, column_names=null, normalize_column_names=true, variable_prefix='a') {\n        super();\n        this.table = table;\n        this.column_names = column_names;\n        this.normalize_column_names = normalize_column_names;\n        this.variable_prefix = variable_prefix;\n        this.nr = 0;\n        this.fields_info = new Object();\n        this.stopped = false;\n    }\n\n\n    stop() {\n        this.stopped = true;\n    };\n\n\n    async get_variables_map(query_text) {\n        let variable_map = new Object();\n        parse_basic_variables(query_text, this.variable_prefix, variable_map);\n        parse_array_variables(query_text, this.variable_prefix, variable_map);\n        if (this.column_names !== null) {\n            if (this.table.length && this.column_names.length != this.table[0].length)\n                throw new RbqlIOHandlingError('List of column names and table records have different lengths');\n            if (this.normalize_column_names) {\n                parse_dictionary_variables(query_text, this.variable_prefix, this.column_names, variable_map);\n                parse_attribute_variables(query_text, this.variable_prefix, this.column_names, 'column names list', variable_map);\n            } else {\n                map_variables_directly(query_text, this.column_names, variable_map);\n            }\n        }\n        return variable_map;\n    };\n\n\n    async get_record() {\n        if (this.stopped)\n            return null;\n        if (this.nr >= this.table.length)\n            return null;\n        let record = this.table[this.nr];\n        this.nr += 1;\n        let num_fields = record.length;\n        if (!this.fields_info.hasOwnProperty(num_fields))\n            this.fields_info[num_fields] = this.nr;\n        return record;\n    };\n\n    get_warnings() {\n        if (Object.keys(this.fields_info).length > 1)\n            return [make_inconsistent_num_fields_warning('input', this.fields_info)];\n        return [];\n    };\n\n    async get_header() {\n        return this.column_names;\n    }\n}\n\n\nclass TableWriter extends RBQLOutputWriter {\n    constructor(external_table) {\n        super();\n        this.table = external_table;\n        this.header = null;\n    }\n\n    async write(fields) {\n        this.table.push(fields);\n        return true;\n    };\n\n    set_header(header) {\n        this.header = header;\n    }\n}\n\n\nclass SingleTableRegistry extends RBQLTableRegistry {\n    constructor(table, column_names=null, normalize_column_names=true, table_id='b') {\n        super();\n        this.table = table;\n        this.table_id = table_id;\n        this.column_names = column_names;\n        this.normalize_column_names = normalize_column_names;\n    }\n\n    get_iterator_by_table_id(table_id) {\n        if (table_id.toLowerCase() !== this.table_id)\n            throw new RbqlIOHandlingError(`Unable to find join table: \"${table_id}\"`);\n        return new TableIterator(this.table, this.column_names, this.normalize_column_names, 'b');\n    };\n}\n\n\nasync function shallow_parse_input_query(query_text, input_iterator, join_tables_registry, query_context) {\n    query_text = cleanup_query(query_text);\n    var [format_expression, string_literals] = separate_string_literals(query_text);\n    format_expression = remove_redundant_table_name(format_expression);\n\n    var rb_actions = separate_actions(format_expression);\n    if (rb_actions.hasOwnProperty(WITH)) {\n        input_iterator.handle_query_modifier(rb_actions[WITH]);\n    }\n    var input_variables_map = await input_iterator.get_variables_map(query_text);\n\n    if (rb_actions.hasOwnProperty(ORDER_BY) && rb_actions.hasOwnProperty(UPDATE))\n        throw new RbqlParsingError('\"ORDER BY\" is not allowed in \"UPDATE\" queries');\n\n    if (rb_actions.hasOwnProperty(GROUP_BY)) {\n        if (rb_actions.hasOwnProperty(ORDER_BY) || rb_actions.hasOwnProperty(UPDATE))\n            throw new RbqlParsingError('\"ORDER BY\", \"UPDATE\" and \"DISTINCT\" keywords are not allowed in aggregate queries');\n        query_context.aggregation_key_expression = '[' + combine_string_literals(rb_actions[GROUP_BY]['text'], string_literals) + ']';\n    }\n\n    let join_variables_map = null;\n    let join_header = null;\n    if (rb_actions.hasOwnProperty(JOIN)) {\n        var [rhs_table_id, variable_pairs] = parse_join_expression(rb_actions[JOIN]['text']);\n        if (join_tables_registry === null)\n            throw new RbqlParsingError('JOIN operations are not supported by the application');\n        let join_record_iterator = join_tables_registry.get_iterator_by_table_id(rhs_table_id);\n        if (!join_record_iterator)\n            throw new RbqlParsingError(`Unable to find join table: \"${rhs_table_id}\"`);\n        if (rb_actions.hasOwnProperty(WITH)) {\n            join_record_iterator.handle_query_modifier(rb_actions[WITH]);\n        }\n        join_variables_map = await join_record_iterator.get_variables_map(query_text);\n        join_header = await join_record_iterator.get_header();\n        let [lhs_variables, rhs_indices] = resolve_join_variables(input_variables_map, join_variables_map, variable_pairs, string_literals);\n        let sql_join_type = {'JOIN': InnerJoiner, 'INNER JOIN': InnerJoiner, 'LEFT JOIN': LeftJoiner, 'LEFT OUTER JOIN': LeftJoiner, 'STRICT LEFT JOIN': StrictLeftJoiner}[rb_actions[JOIN]['join_subtype']];\n        query_context.lhs_join_var_expression = lhs_variables.length == 1 ? lhs_variables[0] : 'JSON.stringify([' + lhs_variables.join(',') + '])';\n        query_context.join_map_impl = new HashJoinMap(join_record_iterator, rhs_indices);\n        await query_context.join_map_impl.build();\n        query_context.join_map = new sql_join_type(query_context.join_map_impl);\n    }\n\n    query_context.variables_init_code = combine_string_literals(generate_init_statements(format_expression, input_variables_map, join_variables_map, ' '.repeat(4)), string_literals);\n\n    if (rb_actions.hasOwnProperty(WHERE)) {\n        var where_expression = rb_actions[WHERE]['text'];\n        if (/[^><!=]=[^=]/.exec(where_expression))\n            throw new RbqlParsingError('Assignments \"=\" are not allowed in \"WHERE\" expressions. For equality test use \"==\" or \"===\"');\n        query_context.where_expression = combine_string_literals(where_expression, string_literals);\n    }\n\n    let input_header = await input_iterator.get_header();\n    if (rb_actions.hasOwnProperty(UPDATE)) {\n        var update_expression = translate_update_expression(rb_actions[UPDATE]['text'], input_variables_map, string_literals, ' '.repeat(8));\n        query_context.update_expressions = combine_string_literals(update_expression, string_literals);\n        query_context.writer.set_header(input_header);\n    }\n\n    if (rb_actions.hasOwnProperty(SELECT)) {\n        query_context.top_count = find_top(rb_actions);\n        if (rb_actions.hasOwnProperty(EXCEPT)) {\n            let [output_header, select_expression] = translate_except_expression(rb_actions[EXCEPT]['text'], input_variables_map, string_literals, input_header);\n            query_context.select_expression = select_expression;\n            query_context.writer.set_header(output_header);\n        } else {\n            let [select_expression, select_expression_for_ast] = translate_select_expression(rb_actions[SELECT]['text']);\n            query_context.select_expression = combine_string_literals(select_expression, string_literals);\n            let column_infos = adhoc_parse_select_expression_to_column_infos(select_expression_for_ast, string_literals);\n            let output_header = select_output_header(input_header, join_header, column_infos);\n            query_context.writer.set_header(output_header);\n        }\n\n        query_context.writer = new TopWriter(query_context.writer, query_context.top_count);\n        if (rb_actions[SELECT].hasOwnProperty('distinct_count')) {\n            query_context.writer = new UniqCountWriter(query_context.writer);\n        } else if (rb_actions[SELECT].hasOwnProperty('distinct')) {\n            query_context.writer = new UniqWriter(query_context.writer);\n        }\n    }\n\n    if (rb_actions.hasOwnProperty(ORDER_BY)) {\n        query_context.sort_key_expression = combine_string_literals(rb_actions[ORDER_BY]['text'], string_literals);\n        let reverse_sort = rb_actions[ORDER_BY]['reverse'];\n        query_context.writer = new SortedWriter(query_context.writer, reverse_sort);\n    }\n}\n\n\nasync function query(query_text, input_iterator, output_writer, output_warnings, join_tables_registry=null, user_init_code='') {\n    query_context = new RBQLContext(query_text, input_iterator, output_writer, user_init_code);\n    await shallow_parse_input_query(query_text, input_iterator, join_tables_registry, query_context);\n    await compile_and_run(query_context);\n    await query_context.writer.finish();\n    output_warnings.push(...input_iterator.get_warnings());\n    if (query_context.join_map_impl)\n        output_warnings.push(...query_context.join_map_impl.get_warnings());\n    output_warnings.push(...output_writer.get_warnings());\n}\n\n\nasync function query_table(query_text, input_table, output_table, output_warnings, join_table=null, input_column_names=null, join_column_names=null, output_column_names=null, normalize_column_names=true, user_init_code='') {\n    if (!normalize_column_names && input_column_names !== null && join_column_names !== null)\n        ensure_no_ambiguous_variables(query_text, input_column_names, join_column_names);\n    let input_iterator = new TableIterator(input_table, input_column_names, normalize_column_names);\n    let output_writer = new TableWriter(output_table);\n    let join_tables_registry = join_table === null ? null : new SingleTableRegistry(join_table, join_column_names, normalize_column_names);\n    await query(query_text, input_iterator, output_writer, output_warnings, join_tables_registry, user_init_code);\n    if (output_column_names !== null) {\n        assert(output_column_names.length == 0, '`output_column_names` param must be an empty list or null');\n        if (output_writer.header !== null) {\n            for (let column_name of output_writer.header) {\n                output_column_names.push(column_name);\n            }\n        }\n    }\n}\n\n\nfunction exception_to_error_info(e) {\n    let exceptions_type_map = {\n        'RbqlRuntimeError': 'query execution',\n        'RbqlParsingError': 'query parsing',\n        'SyntaxError': 'JS syntax error',\n        'RbqlIOHandlingError': 'IO handling'\n    };\n    let error_type = 'unexpected';\n    if (e.constructor && e.constructor.name && exceptions_type_map.hasOwnProperty(e.constructor.name)) {\n        error_type = exceptions_type_map[e.constructor.name];\n    }\n    let error_msg = e.hasOwnProperty('message') ? e.message : String(e);\n    return [error_type, error_msg];\n}\n\n\nexports.query = query;\nexports.query_table = query_table;\nexports.RBQLInputIterator = RBQLInputIterator;\nexports.RBQLOutputWriter = RBQLOutputWriter;\nexports.RBQLTableRegistry = RBQLTableRegistry;\n\nexports.version = RBQL_VERSION;\nexports.TableIterator = TableIterator;\nexports.TableWriter = TableWriter;\nexports.SingleTableRegistry = SingleTableRegistry;\nexports.exception_to_error_info = exception_to_error_info;\n\n\n// The functions below are exported just for unit tests, they are not part of the rbql API\n// TODO exports through the special unit_test proxy e.g. exports.unit_test.parse_basic_variables = parse_basic_variables;\nexports.parse_basic_variables = parse_basic_variables;\nexports.parse_array_variables = parse_array_variables;\nexports.parse_dictionary_variables = parse_dictionary_variables;\nexports.parse_attribute_variables = parse_attribute_variables;\nexports.get_all_matches = get_all_matches;\nexports.strip_comments = strip_comments;\nexports.separate_actions = separate_actions;\nexports.separate_string_literals = separate_string_literals;\nexports.combine_string_literals = combine_string_literals;\nexports.parse_join_expression = parse_join_expression;\nexports.resolve_join_variables = resolve_join_variables;\nexports.translate_update_expression = translate_update_expression;\nexports.translate_select_expression = translate_select_expression;\nexports.translate_except_expression = translate_except_expression;\nexports.like_to_regex = like_to_regex;\nexports.adhoc_parse_select_expression_to_column_infos = adhoc_parse_select_expression_to_column_infos;\nexports.replace_star_count = replace_star_count;\nexports.replace_star_vars_for_header_parsing = replace_star_vars_for_header_parsing;\nexports.select_output_header = select_output_header;\n\n}(typeof exports === 'undefined' ? this.rbql = {} : exports));\n","const fs = require('fs');\nconst os = require('os');\nconst path = require('path');\nconst util = require('util');\n\nconst rbql = require('./rbql.js');\nconst csv_utils = require('./csv_utils.js');\n\n\nconst utf_decoding_error = 'Unable to decode input table as UTF-8. Use binary (latin-1) encoding instead';\n\n\nclass RbqlIOHandlingError extends Error {}\nclass AssertionError extends Error {}\n\n\n// TODO performance improvement: replace smart_split() with polymorphic_split()\n\n\nfunction assert(condition, message=null) {\n    if (!condition) {\n        if (!message) {\n            message = 'Assertion error';\n        }\n        throw new AssertionError(message);\n    }\n}\n\n\nfunction interpret_named_csv_format(format_name) {\n    format_name = format_name.toLowerCase();\n    if (format_name == 'monocolumn')\n        return ['', 'monocolumn'];\n    if (format_name == 'csv')\n        return [',', 'quoted'];\n    if (format_name == 'tsv')\n        return ['\\t', 'simple'];\n    throw new RbqlIOHandlingError(`Unknown format name: \"${format_name}\"`);\n}\n\n\n\nfunction is_ascii(str) {\n    return /^[\\x00-\\x7F]*$/.test(str);\n}\n\n\nfunction read_user_init_code(rbql_init_source_path) {\n    return fs.readFileSync(rbql_init_source_path, 'utf-8');\n}\n\n\nfunction remove_utf8_bom(line, assumed_source_encoding) {\n    if (assumed_source_encoding == 'binary' && line.length >= 3 && line.charCodeAt(0) === 0xEF && line.charCodeAt(1) === 0xBB && line.charCodeAt(2) === 0xBF) {\n        return line.substring(3);\n    }\n    if (assumed_source_encoding == 'utf-8' && line.length >= 1 && line.charCodeAt(0) === 0xFEFF) {\n        return line.substring(1);\n    }\n    return line;\n}\n\n\nfunction make_inconsistent_num_fields_warning(table_name, inconsistent_records_info) {\n    let keys = Object.keys(inconsistent_records_info);\n    let entries = [];\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let record_id = inconsistent_records_info[key];\n        entries.push([record_id, key]);\n    }\n    entries.sort(function(a, b) { return a[0] - b[0]; });\n    assert(entries.length > 1);\n    let [record_1, num_fields_1] = entries[0];\n    let [record_2, num_fields_2] = entries[1];\n    let warn_msg = `Number of fields in \"${table_name}\" table is not consistent: `;\n    warn_msg += `e.g. record ${record_1} -> ${num_fields_1} fields, record ${record_2} -> ${num_fields_2} fields`;\n    return warn_msg;\n}\n\n\nfunction expanduser(filepath) {\n    if (filepath.charAt(0) === '~') {\n        return path.join(os.homedir(), filepath.slice(1));\n    }\n    return filepath;\n}\n\n\nfunction try_read_index(index_path) {\n    var content = null;\n    try {\n        content = fs.readFileSync(index_path, 'utf-8');\n    } catch (e) {\n        return [];\n    }\n    var lines = content.split('\\n');\n    var records = [];\n    for (var i = 0; i < lines.length; i++) {\n        if (!lines[i])\n            continue;\n        var record = lines[i].split('\\t');\n        records.push(record);\n    }\n    return records;\n}\n\n\nfunction get_index_record(index_path, key) {\n    var records = try_read_index(index_path);\n    for (var i = 0; i < records.length; i++) {\n        if (records[i].length && records[i][0] == key) {\n            return records[i];\n        }\n    }\n    return null;\n}\n\n\nfunction find_table_path(main_table_dir, table_id) {\n    // If table_id is a relative path it could be relative either to the current directory or to the main table dir.\n    var candidate_path = expanduser(table_id);\n    if (fs.existsSync(candidate_path)) {\n        return candidate_path;\n    }\n    if (main_table_dir && !path.isAbsolute(candidate_path)) {\n        candidate_path = path.join(main_table_dir, candidate_path);\n        if (fs.existsSync(candidate_path)) {\n            return candidate_path;\n        }\n    }\n    let table_names_settings_path = path.join(os.homedir(), '.rbql_table_names');\n    var name_record = get_index_record(table_names_settings_path, table_id);\n    if (name_record && name_record.length > 1 && fs.existsSync(name_record[1])) {\n        return name_record[1];\n    }\n    return null;\n}\n\n\nclass RecordQueue {\n    // TODO compare performance with a linked list\n    constructor() {\n        this.push_stack = [];\n        this.pull_stack = [];\n    }\n\n    enqueue(record) {\n        this.push_stack.push(record);\n    }\n\n    dequeue() {\n        if (!this.pull_stack.length) {\n            if (!this.push_stack.length)\n                return null;\n            this.pull_stack = this.push_stack;\n            this.pull_stack.reverse();\n            this.push_stack = [];\n        }\n        return this.pull_stack.pop();\n    }\n}\n\n\nclass CSVRecordIterator extends rbql.RBQLInputIterator {\n    // CSVRecordIterator implements a typical async producer-consumer model with an internal buffer:\n    // get_record() - consumer\n    // stream.on('data') - producer\n    constructor(stream, csv_path, encoding, delim, policy, has_header=false, comment_prefix=null, table_name='input', variable_prefix='a') {\n        super();\n        this.stream = stream;\n        this.csv_path = csv_path;\n        assert((this.stream === null) != (this.csv_path === null));\n        this.encoding = encoding;\n        this.delim = delim;\n        this.policy = policy;\n\n        this.has_header = has_header;\n        this.first_record = null;\n        this.first_record_should_be_emitted = !has_header;\n        this.header_preread_complete = false;\n\n        this.table_name = table_name;\n        this.variable_prefix = variable_prefix;\n        this.comment_prefix = (comment_prefix !== null && comment_prefix.length) ? comment_prefix : null;\n\n        this.decoder = null;\n        if (encoding == 'utf-8' && this.csv_path === null) {\n            // Unfortunately util.TextDecoder has serious flaws:\n            // 1. It doesn't work in Node without ICU: https://nodejs.org/api/util.html#util_new_textdecoder_encoding_options\n            // 2. It is broken in Electron: https://github.com/electron/electron/issues/18733\n\n            // Technically we can implement our own custom streaming text decoder, using the 3 following technologies:\n            // 1. decode-encode validation method from https://stackoverflow.com/a/32279283/2898283\n            // 2. Scanning buffer chunks for non-continuation utf-8 bytes from the end of the buffer:\n            //    src_buffer -> (buffer_before, buffer_after) where buffer_after is very small(a couple of bytes) and buffer_before is large and ends with a non-continuation bytes\n            // 3. Internal buffer to store small tail part from the previous buffer\n            this.decoder = new util.TextDecoder(encoding, {fatal: true, stream: true});\n        }\n\n        this.input_exhausted = false;\n        this.started = false;\n\n        this.utf8_bom_removed = false; // BOM doesn't get automatically removed by the decoder when utf-8 file is treated as latin-1\n        this.first_defective_line = null;\n\n        this.fields_info = new Object();\n        this.NR = 0; // Record number\n        this.NL = 0; // Line number (NL != NR when the CSV file has comments or multiline fields)\n\n        this.rfc_line_buffer = [];\n\n        this.partially_decoded_line = '';\n        this.partially_decoded_line_ends_with_cr = false;\n\n        // Holds an external \"resolve\" function which is called when everything is fine.\n        this.resolve_current_record = null;\n        // Holds an external \"reject\" function which is called when error has occured.\n        this.reject_current_record = null;\n        // Holds last exception if we don't have any reject callbacks from clients yet.\n        this.current_exception = null;\n\n        this.produced_records_queue = new RecordQueue();\n\n        this.process_line_polymorphic = policy == 'quoted_rfc' ? this.process_partial_rfc_record_line : this.process_record_line;\n    }\n\n\n    handle_query_modifier(modifier) {\n        // For `... WITH (header) ...` syntax\n        if (['header', 'headers'].indexOf(modifier) != -1) {\n            this.has_header = true;\n            this.first_record_should_be_emitted = false;\n        }\n        if (['noheader', 'noheaders'].indexOf(modifier) != -1) {\n            this.has_header = false;\n            this.first_record_should_be_emitted = true;\n        }\n    }\n\n\n    reset_external_callbacks() {\n        // Drop external callbacks simultaneously since promises can only resolve once, see: https://stackoverflow.com/a/18218542/2898283\n        this.reject_current_record = null;\n        this.resolve_current_record = null;\n    }\n\n    try_propagate_exception() {\n        if (this.current_exception && this.reject_current_record) {\n            let reject = this.reject_current_record;\n            let exception = this.current_exception;\n            this.reset_external_callbacks();\n            this.current_exception = null;\n            reject(exception);\n        }\n    }\n\n\n    store_or_propagate_exception(exception) {\n        if (this.current_exception === null)\n            // Ignore subsequent exceptions if we already have an unreported error. This way we prioritize earlier errors over the more recent ones.\n            this.current_exception = exception;\n        this.try_propagate_exception();\n    }\n\n\n    async preread_first_record() {\n        if (this.header_preread_complete)\n            return;\n        this.first_record = await this.get_record();\n        this.header_preread_complete = true; // We must set header_preread_complete to true after calling get_record(), because get_record() uses it internally.\n        if (this.first_record === null) {\n            return;\n        }\n        if (this.stream)\n            this.stream.pause();\n        this.first_record = this.first_record.slice();\n    };\n\n\n    async get_variables_map(query_text) {\n        let variable_map = new Object();\n        rbql.parse_basic_variables(query_text, this.variable_prefix, variable_map);\n        rbql.parse_array_variables(query_text, this.variable_prefix, variable_map);\n\n        await this.preread_first_record();\n        if (this.has_header && this.first_record) {\n            rbql.parse_attribute_variables(query_text, this.variable_prefix, this.first_record, 'CSV header line', variable_map);\n            rbql.parse_dictionary_variables(query_text, this.variable_prefix, this.first_record, variable_map);\n        }\n        return variable_map;\n    };\n\n    async get_header() {\n        await this.preread_first_record();\n        return this.has_header ? this.first_record : null;\n    }\n\n\n    try_resolve_next_record() {\n        this.try_propagate_exception();\n        if (this.resolve_current_record === null)\n            return;\n\n        let record = null;\n        if (this.first_record_should_be_emitted && this.header_preread_complete) {\n            this.first_record_should_be_emitted = false;\n            record = this.first_record;\n        } else {\n            record = this.produced_records_queue.dequeue();\n        }\n\n        if (record === null && !this.input_exhausted)\n            return;\n        let resolve = this.resolve_current_record;\n        this.reset_external_callbacks();\n        resolve(record);\n    };\n\n\n    async get_record() {\n        if (!this.started)\n            await this.start();\n        if (this.stream && this.stream.isPaused())\n            this.stream.resume();\n\n        let parent_iterator = this;\n        let current_record_promise = new Promise(function(resolve, reject) {\n            parent_iterator.resolve_current_record = resolve;\n            parent_iterator.reject_current_record = reject;\n        });\n        this.try_resolve_next_record();\n        return current_record_promise;\n    };\n\n\n    async get_all_records(num_records=null) {\n        let records = [];\n        while (true) {\n            let record = await this.get_record();\n            if (record === null)\n                break;\n            records.push(record);\n            if (num_records && records.length >= num_records) {\n                this.stop();\n                break;\n            }\n        }\n        return records;\n    };\n\n\n    process_record_line(line) {\n        if (this.comment_prefix !== null && line.startsWith(this.comment_prefix))\n            return; // Just skip the line\n        this.NR += 1;\n        var [record, warning] = csv_utils.smart_split(line, this.delim, this.policy, false);\n        if (warning) {\n            if (this.first_defective_line === null) {\n                this.first_defective_line = this.NL;\n                if (this.policy == 'quoted_rfc')\n                    this.store_or_propagate_exception(new RbqlIOHandlingError(`Inconsistent double quote escaping in ${this.table_name} table at record ${this.NR}, line ${this.NL}`));\n            }\n        }\n        let num_fields = record.length;\n        if (!this.fields_info.hasOwnProperty(num_fields))\n            this.fields_info[num_fields] = this.NR;\n        this.produced_records_queue.enqueue(record);\n        this.try_resolve_next_record();\n    };\n\n\n    process_partial_rfc_record_line(line) {\n        let record_line = csv_utils.accumulate_rfc_line_into_record(this.rfc_line_buffer, line, this.comment_prefix);\n        if (record_line !== null)\n            this.process_record_line(record_line);\n    };\n\n\n    process_line(line) {\n        this.NL += 1;\n        if (this.NL === 1) {\n            var clean_line = remove_utf8_bom(line, this.encoding);\n            if (clean_line != line) {\n                line = clean_line;\n                this.utf8_bom_removed = true;\n            }\n        }\n        this.process_line_polymorphic(line);\n    };\n\n\n    process_data_stream_chunk(data_chunk) {\n        let decoded_string = null;\n        if (this.decoder) {\n            try {\n                decoded_string = this.decoder.decode(data_chunk);\n            } catch (e) {\n                if (e instanceof TypeError) {\n                    this.store_or_propagate_exception(new RbqlIOHandlingError(utf_decoding_error));\n                } else {\n                    this.store_or_propagate_exception(e);\n                }\n                return;\n            }\n        } else {\n            decoded_string = data_chunk.toString(this.encoding);\n        }\n        let line_starts_with_lf = decoded_string.length && decoded_string[0] == '\\n';\n        let first_line_index = line_starts_with_lf && this.partially_decoded_line_ends_with_cr ? 1 : 0;\n        this.partially_decoded_line_ends_with_cr = decoded_string.length && decoded_string[decoded_string.length - 1] == '\\r';\n        let lines = csv_utils.split_lines(decoded_string);\n        lines[0] = this.partially_decoded_line + lines[0];\n        assert(first_line_index == 0 || lines[0].length == 0);\n        this.partially_decoded_line = lines.pop();\n        for (let i = first_line_index; i < lines.length; i++) {\n            this.process_line(lines[i]);\n        }\n    };\n\n\n    process_data_bulk(data_chunk) {\n        let decoded_string = data_chunk.toString(this.encoding);\n        if (this.encoding == 'utf-8') {\n            // Using hacky comparison method from here: https://stackoverflow.com/a/32279283/2898283\n            // TODO get rid of this once TextDecoder is really fixed or when alternative method of reliable decoding appears\n            let control_buffer = Buffer.from(decoded_string, 'utf-8');\n            if (Buffer.compare(data_chunk, control_buffer) != 0) {\n                this.store_or_propagate_exception(new RbqlIOHandlingError(utf_decoding_error));\n                return;\n            }\n        }\n        let lines = csv_utils.split_lines(decoded_string);\n        if (lines.length && lines[lines.length - 1].length == 0)\n            lines.pop();\n        for (let i = 0; i < lines.length; i++) {\n            this.process_line(lines[i]);\n        }\n        if (this.rfc_line_buffer.length > 0) {\n            this.process_record_line(this.rfc_line_buffer.join('\\n'));\n        }\n        this.input_exhausted = true;\n        this.try_resolve_next_record(); // Should be a NOOP here?\n    }\n\n\n    process_data_stream_end() {\n        this.input_exhausted = true;\n        if (this.partially_decoded_line.length) {\n            let last_line = this.partially_decoded_line;\n            this.partially_decoded_line = '';\n            this.process_line(last_line);\n        }\n        if (this.rfc_line_buffer.length > 0) {\n            this.process_record_line(this.rfc_line_buffer.join('\\n'));\n        }\n        this.try_resolve_next_record();\n    };\n\n\n    stop() {\n        if (this.stream)\n            this.stream.destroy(); // TODO consider using pause() instead\n    };\n\n\n    async start() {\n        if (this.started)\n            return;\n        this.started = true;\n        if (this.stream) {\n            this.stream.on('data', (data_chunk) => { this.process_data_stream_chunk(data_chunk); });\n            this.stream.on('end', () => { this.process_data_stream_end(); });\n        } else {\n            let parent_iterator = this;\n            return new Promise(function(resolve, reject) {\n                fs.readFile(parent_iterator.csv_path, (err, data_chunk) => {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        parent_iterator.process_data_bulk(data_chunk);\n                        resolve();\n                    }\n                });\n            });\n        }\n    };\n\n\n    get_warnings() {\n        let result = [];\n        if (this.first_defective_line !== null)\n            result.push(`Inconsistent double quote escaping in ${this.table_name} table. E.g. at line ${this.first_defective_line}`);\n        if (this.utf8_bom_removed)\n            result.push(`UTF-8 Byte Order Mark (BOM) was found and skipped in ${this.table_name} table`);\n        if (Object.keys(this.fields_info).length > 1)\n            result.push(make_inconsistent_num_fields_warning(this.table_name, this.fields_info));\n        return result;\n    };\n}\n\n\nclass CSVWriter extends rbql.RBQLOutputWriter {\n    constructor(stream, close_stream_on_finish, encoding, delim, policy, line_separator='\\n') {\n        super();\n        this.stream = stream;\n        this.encoding = encoding;\n        if (encoding)\n            this.stream.setDefaultEncoding(encoding);\n        this.stream.on('error', (error_obj) => { this.store_first_error(error_obj); })\n        this.delim = delim;\n        this.policy = policy;\n        this.line_separator = line_separator;\n        this.sub_array_delim = delim == '|' ? ';' : '|';\n\n        this.close_stream_on_finish = close_stream_on_finish;\n\n        this.null_in_output = false;\n        this.delim_in_simple_output = false;\n        this.header_len = null;\n        this.first_error = null;\n\n        if (policy == 'simple') {\n            this.polymorphic_join = this.simple_join;\n        } else if (policy == 'quoted') {\n            this.polymorphic_join = this.quoted_join;\n        } else if (policy == 'quoted_rfc') {\n            this.polymorphic_join = this.quoted_join_rfc;\n        } else if (policy == 'monocolumn') {\n            this.polymorphic_join = this.mono_join;\n        } else if (policy == 'whitespace') {\n            this.polymorphic_join = this.simple_join;\n        } else {\n            throw new RbqlIOHandlingError('Unknown output csv policy');\n        }\n    }\n\n\n    store_first_error(error_obj) {\n        // Store only first error because it is typically more important than the subsequent ones.\n        if (this.first_error === null)\n            this.first_error = error_obj;\n    }\n\n    set_header(header) {\n        if (header !== null) {\n            this.header_len = header.length;\n            this.write(header);\n        }\n    }\n\n\n    quoted_join(fields) {\n        let delim = this.delim;\n        var quoted_fields = fields.map(function(v) { return csv_utils.quote_field(String(v), delim); });\n        return quoted_fields.join(this.delim);\n    };\n\n\n    quoted_join_rfc(fields) {\n        let delim = this.delim;\n        var quoted_fields = fields.map(function(v) { return csv_utils.rfc_quote_field(String(v), delim); });\n        return quoted_fields.join(this.delim);\n    };\n\n\n    mono_join(fields) {\n        if (fields.length > 1) {\n            throw new RbqlIOHandlingError('Unable to use \"Monocolumn\" output format: some records have more than one field');\n        }\n        return fields[0];\n    };\n\n\n    simple_join(fields) {\n        var res = fields.join(this.delim);\n        if (fields.join('').indexOf(this.delim) != -1) {\n            this.delim_in_simple_output = true;\n        }\n        return res;\n    };\n\n\n    normalize_fields(out_fields) {\n        for (var i = 0; i < out_fields.length; i++) {\n            if (out_fields[i] == null) {\n                this.null_in_output = true;\n                out_fields[i] = '';\n            } else if (Array.isArray(out_fields[i])) {\n                this.normalize_fields(out_fields[i]);\n                out_fields[i] = out_fields[i].join(this.sub_array_delim);\n            }\n        }\n    };\n\n\n    async write(fields) {\n        if (this.header_len !== null && fields.length != this.header_len)\n            throw new RbqlIOHandlingError(`Inconsistent number of columns in output header and the current record: ${this.header_len} != ${fields.length}`);\n        this.normalize_fields(fields);\n        this.stream.write(this.polymorphic_join(fields));\n        this.stream.write(this.line_separator);\n        let writer_error = this.first_error;\n        return new Promise(function(resolve, reject) {\n            if (writer_error !== null) {\n                reject(writer_error);\n            } else {\n                resolve(true);\n            }\n        });\n    };\n\n\n    _write_all(table) {\n        for (let i = 0; i < table.length; i++) {\n            this.write(table[i]);\n        }\n    };\n\n\n    async finish() {\n        let close_stream_on_finish = this.close_stream_on_finish;\n        let output_stream = this.stream;\n        let output_encoding = this.encoding;\n        let writer_error = this.first_error;\n        let finish_promise = new Promise(function(resolve, reject) {\n            if (writer_error !== null) {\n                reject(writer_error);\n            }\n            if (close_stream_on_finish) {\n                output_stream.end('', output_encoding, () => { resolve(); });\n            } else {\n                setTimeout(() => { resolve(); }, 0);\n            }\n        });\n        return finish_promise;\n    };\n\n\n    get_warnings() {\n        let result = [];\n        if (this.null_in_output)\n            result.push('null values in output were replaced by empty strings');\n        if (this.delim_in_simple_output)\n            result.push('Some output fields contain separator');\n        return result;\n    };\n\n}\n\n\nclass FileSystemCSVRegistry extends rbql.RBQLTableRegistry {\n    constructor(input_file_dir, delim, policy, encoding, has_header=false, comment_prefix=null, options=null) {\n        super();\n        this.input_file_dir = input_file_dir;\n        this.delim = delim;\n        this.policy = policy;\n        this.encoding = encoding;\n        this.has_header = has_header;\n        this.comment_prefix = comment_prefix;\n        this.stream = null;\n        this.record_iterator = null;\n\n        this.options = options;\n        this.bulk_input_path = null;\n        this.table_path = null;\n    }\n\n    get_iterator_by_table_id(table_id) {\n        this.table_path = find_table_path(this.input_file_dir, table_id);\n        if (this.table_path === null) {\n            throw new RbqlIOHandlingError(`Unable to find join table \"${table_id}\"`);\n        }\n        if (this.options && this.options['bulk_read']) {\n            this.bulk_input_path = this.table_path;\n        } else {\n            this.stream = fs.createReadStream(this.table_path);\n        }\n        this.record_iterator = new CSVRecordIterator(this.stream, this.bulk_input_path, this.encoding, this.delim, this.policy, this.has_header, this.comment_prefix, table_id, 'b');\n        return this.record_iterator;\n    };\n\n    get_warnings(output_warnings) {\n        if (this.record_iterator && this.has_header) {\n            output_warnings.push(`The first record in JOIN file ${path.basename(this.table_path)} was also treated as header (and skipped)`);\n        }\n    }\n}\n\n\nasync function query_csv(query_text, input_path, input_delim, input_policy, output_path, output_delim, output_policy, csv_encoding, output_warnings, with_headers=false, comment_prefix=null, user_init_code='', options=null) {\n    let input_stream = null;\n    let bulk_input_path = null;\n    if (options && options['bulk_read'] && input_path) {\n        bulk_input_path = input_path;\n    } else {\n        input_stream = input_path === null ? process.stdin : fs.createReadStream(input_path);\n    }\n    let [output_stream, close_output_on_finish] = output_path === null ? [process.stdout, false] : [fs.createWriteStream(output_path), true];\n    if (input_delim == '\"' && input_policy == 'quoted')\n        throw new RbqlIOHandlingError('Double quote delimiter is incompatible with \"quoted\" policy');\n    if (csv_encoding == 'latin-1')\n        csv_encoding = 'binary';\n    if (!is_ascii(query_text) && csv_encoding == 'binary')\n        throw new RbqlIOHandlingError('To use non-ascii characters in query enable UTF-8 encoding instead of latin-1/binary');\n    if ((!is_ascii(input_delim) || !is_ascii(output_delim)) && csv_encoding == 'binary')\n        throw new RbqlIOHandlingError('To use non-ascii characters in query enable UTF-8 encoding instead of latin-1/binary');\n\n    let default_init_source_path = path.join(os.homedir(), '.rbql_init_source.js');\n    if (user_init_code == '' && fs.existsSync(default_init_source_path)) {\n        user_init_code = read_user_init_code(default_init_source_path);\n    }\n    let input_file_dir = input_path ? path.dirname(input_path) : null;\n    let join_tables_registry = new FileSystemCSVRegistry(input_file_dir, input_delim, input_policy, csv_encoding, with_headers, comment_prefix, options);\n    let input_iterator = new CSVRecordIterator(input_stream, bulk_input_path, csv_encoding, input_delim, input_policy, with_headers, comment_prefix);\n    let output_writer = new CSVWriter(output_stream, close_output_on_finish, csv_encoding, output_delim, output_policy);\n\n    await rbql.query(query_text, input_iterator, output_writer, output_warnings, join_tables_registry, user_init_code);\n    join_tables_registry.get_warnings(output_warnings);\n}\n\n\nmodule.exports.is_ascii = is_ascii;\nmodule.exports.CSVRecordIterator = CSVRecordIterator;\nmodule.exports.CSVWriter = CSVWriter;\nmodule.exports.FileSystemCSVRegistry = FileSystemCSVRegistry;\nmodule.exports.interpret_named_csv_format = interpret_named_csv_format;\nmodule.exports.read_user_init_code = read_user_init_code;\nmodule.exports.query_csv = query_csv;\nmodule.exports.RecordQueue = RecordQueue;\nmodule.exports.exception_to_error_info = rbql.exception_to_error_info;\n","module.exports = require(\"vscode\");","'use strict';\n\nvar possibleNames = [\n\t'BigInt64Array',\n\t'BigUint64Array',\n\t'Float32Array',\n\t'Float64Array',\n\t'Int16Array',\n\t'Int32Array',\n\t'Int8Array',\n\t'Uint16Array',\n\t'Uint32Array',\n\t'Uint8Array',\n\t'Uint8ClampedArray'\n];\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\n\nmodule.exports = function availableTypedArrays() {\n\tvar out = [];\n\tfor (var i = 0; i < possibleNames.length; i++) {\n\t\tif (typeof g[possibleNames[i]] === 'function') {\n\t\t\tout[out.length] = possibleNames[i];\n\t\t}\n\t}\n\treturn out;\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","const vscode = require('vscode');\n\nconst path = require('path');\nconst fs = require('fs');\nconst os = require('os');\nconst child_process = require('child_process');\n\n// Please see DEV_README.md file for additional info.\n\nconst csv_utils = require('./rbql_core/rbql-js/csv_utils.js');\n\nvar rbql_csv = null; // Using lazy load to improve startup performance.\nfunction ll_rbql_csv() {\n    if (rbql_csv === null)\n        rbql_csv = require('./rbql_core/rbql-js/rbql_csv.js');\n    return rbql_csv;\n}\n\n\nvar rainbow_utils = null; // Using lazy load to improve startup performance.\nfunction ll_rainbow_utils() {\n    if (rainbow_utils === null)\n        rainbow_utils = require('./rainbow_utils.js');\n    return rainbow_utils;\n}\n\n\nconst is_web_ext = (os.homedir === undefined); // Runs as web extension in browser.\nconst preview_window_size = 100;\nconst max_preview_field_length = 250;\nconst scratch_buf_marker = 'vscode_rbql_scratch';\n\nlet client_html_template_web = null;\n\nvar lint_results = new Map();\nvar aligned_files = new Set();\nvar autodetection_stoplist = new Set();\nvar original_language_ids = new Map();\nvar result_set_parent_map = new Map();\n\nvar lint_status_bar_button = null;\nvar rbql_status_bar_button = null;\nvar align_shrink_button = null;\nvar rainbow_off_status_bar_button = null;\nvar copy_back_button = null;\nvar column_info_button = null;\n\nlet last_statusbar_doc = null;\n\nvar rbql_context = null;\n\nvar last_rbql_queries = new Map(); // Query history does not replace this structure, it is also used to store partially entered queries for preview window switch.\n\nvar client_html_template = null;\n\nvar global_state = null;\n\nvar preview_panel = null;\n\nvar doc_edit_subscription = null;\nvar keyboard_cursor_subscription = null;\n\nvar _unit_test_last_rbql_report = null; // For unit tests only.\nvar _unit_test_last_warnings = null; // For unit tests only.\n\nlet cursor_timeout_handle = null;\n\nconst dialect_map = {\n    'csv': [',', 'quoted'],\n    'tsv': ['\\t', 'simple'],\n    'csv (semicolon)': [';', 'quoted'],\n    'csv (pipe)': ['|', 'simple'],\n    'csv (tilde)': ['~', 'simple'],\n    'csv (caret)': ['^', 'simple'],\n    'csv (colon)': [':', 'simple'],\n    'csv (double quote)': ['\"', 'simple'],\n    'csv (equals)': ['=', 'simple'],\n    'csv (dot)': ['.', 'simple'],\n    'csv (whitespace)': [' ', 'whitespace'],\n    'csv (hyphen)': ['-', 'simple']\n};\n\n\n// This structure will get properly initialized during the startup.\nlet absolute_path_map = {\n    'rbql_client.js': null,\n    'contrib/textarea-caret-position/index.js': null,\n    'rbql_suggest.js': null,\n    'rbql_logo.svg': null,\n    'rbql_client.html': null,\n    'rbql mock/rbql_mock.py': null,\n    'rbql_core/vscode_rbql.py': null\n};\n\n\nfunction show_single_line_error(error_msg) {\n    var active_window = vscode.window;\n    if (!active_window)\n        return;\n    // Do not \"await\" error messages because the promise gets resolved only on error dismissal.\n    active_window.showErrorMessage(error_msg);\n}\n\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n\nasync function push_current_stack_to_js_callback_queue_to_allow_ui_update() {\n    await sleep(0);\n}\n\n\nfunction map_separator_to_language_id(separator) {\n    for (let language_id in dialect_map) {\n        if (!dialect_map.hasOwnProperty(language_id))\n            continue;\n        if (dialect_map[language_id][0] == separator)\n            return language_id;\n    }\n    return null;\n}\n\n\nfunction get_from_global_state(key, default_value) {\n    if (global_state) {\n        var value = global_state.get(key);\n        if (value !== null && value !== undefined)\n            return value;\n    }\n    return default_value;\n}\n\n\nasync function save_to_global_state(key, value) {\n    if (global_state && key) {\n        await global_state.update(key, value);\n        return true;\n    }\n    return false;\n}\n\n\nfunction get_rfc_record_text(document, record_start, record_end) {\n    let result = [];\n    for (let i = record_start; i < record_end && i < document.lineCount; i++) {\n        result.push(document.lineAt(i).text);\n    }\n    return result.join('\\n');\n}\n\n\nasync function replace_doc_content(active_editor, active_doc, new_content) {\n    let invalid_range = new vscode.Range(0, 0, active_doc.lineCount /* Intentionally missing the '-1' */, 0);\n    let full_range = active_doc.validateRange(invalid_range);\n    await active_editor.edit(edit => edit.replace(full_range, new_content));\n}\n\n\nfunction sample_preview_records_from_context(rbql_context, dst_message) {\n    let document = rbql_context.input_document;\n    let delim = rbql_context.delim;\n    let policy = rbql_context.policy;\n\n    rbql_context.requested_start_record = Math.max(rbql_context.requested_start_record, 0);\n\n    let preview_records = [];\n    if (rbql_context.enable_rfc_newlines) {\n        let requested_end_record = rbql_context.requested_start_record + preview_window_size;\n        ll_rainbow_utils().populate_optimistic_rfc_csv_record_map(document, requested_end_record, rbql_context.rfc_record_map);\n        rbql_context.requested_start_record = Math.max(0, Math.min(rbql_context.requested_start_record, rbql_context.rfc_record_map.length - preview_window_size));\n        for (let nr = rbql_context.requested_start_record; nr < rbql_context.rfc_record_map.length && preview_records.length < preview_window_size; nr++) {\n            let [record_start, record_end] = rbql_context.rfc_record_map[nr];\n            let record_text = get_rfc_record_text(document, record_start, record_end);\n            let [cur_record, warning] = csv_utils.smart_split(record_text, delim, policy, false);\n            if (warning) {\n                dst_message.preview_sampling_error = `Double quotes are not consistent in record ${nr + 1} which starts at line ${record_start + 1}`;\n                return;\n            }\n            preview_records.push(cur_record);\n        }\n    } else {\n        let num_records = document.lineCount;\n        if (document.lineAt(Math.max(num_records - 1, 0)).text == '')\n            num_records -= 1;\n        rbql_context.requested_start_record = Math.max(0, Math.min(rbql_context.requested_start_record, num_records - preview_window_size));\n        for (let nr = rbql_context.requested_start_record; nr < num_records && preview_records.length < preview_window_size; nr++) {\n            let line_text = document.lineAt(nr).text;\n            let cur_record = csv_utils.smart_split(line_text, delim, policy, false)[0];\n            preview_records.push(cur_record);\n        }\n    }\n\n    for (let r = 0; r < preview_records.length; r++) {\n        let cur_record = preview_records[r];\n        for (let c = 0; c < cur_record.length; c++) {\n            if (cur_record[c].length > max_preview_field_length) {\n                cur_record[c] = cur_record[c].substr(0, max_preview_field_length) + '###UI_STRING_TRIM_MARKER###';\n            }\n        }\n    }\n    dst_message.preview_records = preview_records;\n    dst_message.start_record_zero_based = rbql_context.requested_start_record;\n}\n\n\nfunction make_header_key(file_path) {\n    return 'rbql_header:' + file_path;\n}\n\n\nfunction make_rfc_policy_key(file_path) {\n    return 'enable_rfc_newlines:' + file_path;\n}\n\n\nfunction make_with_headers_key(file_path) {\n    return 'rbql_with_headers:' + file_path;\n}\n\n\nfunction get_from_config(param_name, default_value) {\n    const config = vscode.workspace.getConfiguration('rainbow_csv');\n    return config ? config.get(param_name) : default_value;\n}\n\n\nfunction get_header_from_document(document, delim, policy) {\n    let comment_prefix = get_from_config('comment_prefix', '');\n    let header_line = ll_rainbow_utils().get_header_line(document, comment_prefix);\n    return csv_utils.smart_split(header_line, delim, policy, /*preserve_quotes_and_whitespaces=*/false)[0];\n}\n\n\nfunction get_header(document, delim, policy) {\n    var file_path = document.fileName;\n    if (file_path) {\n        let raw_header = get_from_global_state(make_header_key(file_path), null);\n        if (raw_header) {\n            return JSON.parse(raw_header);\n        }\n    }\n    return get_header_from_document(document, delim, policy);\n}\n\n\nfunction get_field_by_line_position(fields, query_pos) {\n    if (!fields.length)\n        return null;\n    var col_num = 0;\n    var cpos = fields[col_num].length + 1;\n    while (query_pos > cpos && col_num + 1 < fields.length) {\n        col_num += 1;\n        cpos = cpos + fields[col_num].length + 1;\n    }\n    return col_num;\n}\n\n\nfunction make_hover_text(document, position, language_id, enable_tooltip_column_names, enable_tooltip_warnings) {\n    let [delim, policy] = dialect_map[language_id];\n    var lnum = position.line;\n    var cnum = position.character;\n    var line = document.lineAt(lnum).text;\n\n    let comment_prefix = get_from_config('comment_prefix', '');\n    if (comment_prefix && line.startsWith(comment_prefix))\n        return 'Comment';\n\n    var report = csv_utils.smart_split(line, delim, policy, true);\n\n    var entries = report[0];\n    var warning = report[1];\n    var col_num = get_field_by_line_position(entries, cnum + 1);\n\n    if (col_num == null)\n        return null;\n    var result = 'Col ' + (col_num + 1);\n\n    var header = get_header(document, delim, policy);\n    if (enable_tooltip_column_names && col_num < header.length) {\n        const max_label_len = 50;\n        let column_label = header[col_num].trim();\n        var short_column_label = column_label.substr(0, max_label_len);\n        if (short_column_label != column_label)\n            short_column_label = short_column_label + '...';\n        result += ', ' + short_column_label;\n    }\n    if (enable_tooltip_warnings) {\n        if (warning) {\n            result += '; ERR: Inconsistent double quotes in line';\n        } else if (header.length != entries.length) {\n            result += `; WARN: Inconsistent num of fields, header: ${header.length}, this line: ${entries.length}`;\n        }\n    }\n    return result;\n}\n\n\nfunction make_status_info(document, position, language_id, enable_tooltip_column_names) {\n    let [delim, policy] = dialect_map[language_id];\n    var lnum = position.line;\n    var cnum = position.character;\n    var line = document.lineAt(lnum).text;\n\n    let comment_prefix = get_from_config('comment_prefix', '');\n    if (comment_prefix && line.startsWith(comment_prefix))\n        return null;\n\n    var report = csv_utils.smart_split(line, delim, policy, true);\n\n    var entries = report[0];\n    var warning = report[1];\n    if (warning)\n        return null;\n    var col_num = get_field_by_line_position(entries, cnum + 1);\n\n    if (col_num == null)\n        return null;\n    var result = 'CSV: ' + (col_num + 1);\n\n    var header = get_header(document, delim, policy);\n    if (header.length != entries.length)\n        return null;\n\n    if (enable_tooltip_column_names && col_num < header.length) {\n        let column_label = header[col_num].trim();\n        result += ', ' + column_label;\n    }\n    return result;\n}\n\n\nfunction refresh_status_bar_items(active_doc=null) {\n    if (!active_doc)\n        active_doc = get_active_doc();\n    last_statusbar_doc = active_doc;\n    var file_path = active_doc ? active_doc.fileName : null;\n    if (!active_doc || !file_path) {\n        // For new untitled scratch documents `file_path` would be \"Untitled-1\", \"Untitled-2\", etc, so we won't enter this branch.\n        hide_status_bar_buttons();\n        return;\n    }\n    if (file_path.endsWith('.git')) {\n        // Sometimes for git-controlled dirs VSCode opens mysterious .git files. Skip them, don't hide buttons.\n        return;\n    }\n    hide_status_bar_buttons();\n    var language_id = active_doc.languageId;\n    if (!dialect_map.hasOwnProperty(language_id))\n        return;\n    show_lint_status_bar_button(file_path, language_id);\n    show_rbql_status_bar_button();\n    show_align_shrink_button(file_path);\n    show_rainbow_off_status_bar_button();\n    show_rbql_copy_to_source_button(file_path);\n    show_column_info_button();\n    if (get_from_config('enable_cursor_position_info', false)) {\n        keyboard_cursor_subscription = vscode.window.onDidChangeTextEditorSelection(handle_cursor_movement);\n    }\n}\n\n\nfunction make_hover(document, position, language_id, cancellation_token) {\n    if (last_statusbar_doc != document) {\n        refresh_status_bar_items(document); // Being paranoid and making sure that the buttons are visible.\n    }\n    if (!get_from_config('enable_tooltip', false)) {\n        return;\n    }\n    let enable_tooltip_column_names = get_from_config('enable_tooltip_column_names', false);\n    let enable_tooltip_warnings = get_from_config('enable_tooltip_warnings', false);\n    var hover_text = make_hover_text(document, position, language_id, enable_tooltip_column_names, enable_tooltip_warnings);\n    if (hover_text && !cancellation_token.isCancellationRequested) {\n        let mds = null;\n        try {\n            mds = new vscode.MarkdownString();\n            mds.appendCodeblock(hover_text, 'rainbow hover markup');\n        } catch (e) {\n            mds = hover_text; // Older VSCode versions may not have MarkdownString/appendCodeblock functionality.\n        }\n        return new vscode.Hover(mds);\n    } else {\n        return null;\n    }\n}\n\n\nfunction produce_lint_report(active_doc, delim, policy) {\n    let comment_prefix = get_from_config('comment_prefix', '');\n    let detect_trailing_spaces = get_from_config('csv_lint_detect_trailing_spaces', false);\n    let first_trailing_space_line = null;\n    var num_lines = active_doc.lineCount;\n    var num_fields = null;\n    for (var lnum = 0; lnum < num_lines; lnum++) {\n        var line_text = active_doc.lineAt(lnum).text;\n        if (lnum + 1 == num_lines && !line_text)\n            break;\n        if (comment_prefix && line_text.startsWith(comment_prefix))\n            continue;\n        var split_result = csv_utils.smart_split(line_text, delim, policy, true);\n        if (split_result[1]) {\n            return 'Error. Line ' + (lnum + 1) + ' has formatting error: double quote chars are not consistent';\n        }\n        if (detect_trailing_spaces && first_trailing_space_line === null) {\n            let fields = split_result[0];\n            for (let i = 0; i < fields.length; i++) {\n                if (fields[i].length && (fields[i].charAt(0) == ' ' || fields[i].slice(-1) == ' ')) {\n                    first_trailing_space_line = lnum;\n                }\n            }\n        }\n        if (!num_fields) {\n            num_fields = split_result[0].length;\n        }\n        if (num_fields != split_result[0].length) {\n            return 'Error. Number of fields is not consistent: e.g. line 1 has ' + num_fields + ' fields, and line ' + (lnum + 1) + ' has ' + split_result[0].length + ' fields.';\n        }\n    }\n    if (first_trailing_space_line !== null) {\n        return 'Leading/Trailing spaces detected: e.g. at line ' + (first_trailing_space_line + 1) + '. Run \"Shrink\" command to remove them.';\n    }\n    return 'OK';\n}\n\n\nfunction get_active_editor() {\n    var active_window = vscode.window;\n    if (!active_window)\n        return null;\n    var active_editor = active_window.activeTextEditor;\n    if (!active_editor)\n        return null;\n    return active_editor;\n}\n\n\nfunction get_active_doc(active_editor=null) {\n    if (!active_editor)\n        active_editor = get_active_editor();\n    if (!active_editor)\n        return null;\n    var active_doc = active_editor.document;\n    if (!active_doc)\n        return null;\n    return active_doc;\n}\n\n\nfunction show_lint_status_bar_button(file_path, language_id) {\n    let lint_cache_key = `${file_path}.${language_id}`;\n    if (!lint_results.has(lint_cache_key))\n        return;\n    var lint_report = lint_results.get(lint_cache_key);\n    if (!lint_status_bar_button)\n        lint_status_bar_button = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left);\n    lint_status_bar_button.text = 'CSVLint';\n    if (lint_report === 'OK') {\n        lint_status_bar_button.color = '#62f442';\n    } else if (lint_report == 'Processing...') {\n        lint_status_bar_button.color = '#A0A0A0';\n    } else if (lint_report.indexOf('spaces detected') != -1) {\n        lint_status_bar_button.color = '#ffff28';\n    } else {\n        lint_status_bar_button.color = '#f44242';\n    }\n    lint_status_bar_button.tooltip = lint_report + '\\nClick to recheck';\n    lint_status_bar_button.command = 'rainbow-csv.CSVLint';\n    lint_status_bar_button.show();\n}\n\n\nfunction show_align_shrink_button(file_path) {\n    if (!align_shrink_button)\n        align_shrink_button = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left);\n    if (aligned_files.has(file_path)) {\n        align_shrink_button.text = 'Shrink';\n        align_shrink_button.tooltip = 'Click to shrink table (Then you can click again to align)';\n        align_shrink_button.command = 'rainbow-csv.Shrink';\n    } else {\n        align_shrink_button.text = 'Align';\n        align_shrink_button.tooltip = 'Click to align table (Then you can click again to shrink)';\n        align_shrink_button.command = 'rainbow-csv.Align';\n    }\n    align_shrink_button.show();\n}\n\n\nfunction do_show_column_info_button(status_text) {\n    if (!column_info_button)\n        column_info_button = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Right, 1000);\n    const max_len = 25;\n    let short_info = status_text.length > max_len ? status_text.substring(0, max_len - '...'.length + 1) + '...' : status_text;\n    column_info_button.text = short_info;\n    column_info_button.tooltip = status_text;\n    column_info_button.show();\n}\n\n\nfunction show_column_info_button() {\n    let active_editor = get_active_editor();\n    if (!active_editor) {\n        return false;\n    }\n    let selections = active_editor.selections;\n    if (!selections || selections.length != 1) {\n        // Support only single-cursor info reporting.\n        return false;\n    }\n    let selection = selections[0];\n    let position = selection.active;\n    if (!position.isEqual(selection.anchor)) {\n        // Do not report CSV columns for selections.\n        return false;\n    }\n    let enable_tooltip_column_names = get_from_config('enable_tooltip_column_names', false);\n    let active_doc = get_active_doc(active_editor);\n    let language_id = active_doc.languageId;\n    let status_text = make_status_info(active_doc, position, language_id, enable_tooltip_column_names);\n    if (!status_text)\n        return false;\n    do_show_column_info_button(status_text);\n    return true;\n}\n\n\nfunction show_rainbow_off_status_bar_button() {\n    if (!rainbow_off_status_bar_button)\n        rainbow_off_status_bar_button = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left);\n    rainbow_off_status_bar_button.text = 'Rainbow OFF';\n    rainbow_off_status_bar_button.tooltip = 'Click to restore original file type and syntax';\n    rainbow_off_status_bar_button.command = 'rainbow-csv.RainbowSeparatorOff';\n    rainbow_off_status_bar_button.show();\n}\n\n\nfunction show_rbql_status_bar_button() {\n    if (!rbql_status_bar_button)\n        rbql_status_bar_button = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left);\n    rbql_status_bar_button.text = 'Query';\n    rbql_status_bar_button.tooltip = 'Click to run SQL-like RBQL query';\n    rbql_status_bar_button.command = 'rainbow-csv.RBQL';\n    rbql_status_bar_button.show();\n}\n\n\nfunction hide_status_bar_buttons() {\n    let all_buttons = [lint_status_bar_button, rbql_status_bar_button, rainbow_off_status_bar_button, copy_back_button, align_shrink_button, column_info_button];\n    for (let i = 0; i < all_buttons.length; i++) {\n        if (all_buttons[i])\n            all_buttons[i].hide();\n    }\n    if (keyboard_cursor_subscription) {\n        keyboard_cursor_subscription.dispose();\n        keyboard_cursor_subscription = null;\n    }\n}\n\n\nfunction show_rbql_copy_to_source_button(file_path) {\n    let parent_table_path = result_set_parent_map.get(file_path.toLowerCase());\n    if (!parent_table_path || parent_table_path.indexOf(scratch_buf_marker) != -1)\n        return;\n    let parent_basename = path.basename(parent_table_path);\n    if (!copy_back_button)\n        copy_back_button = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left);\n    copy_back_button.text = 'Copy Back';\n    copy_back_button.tooltip = `Copy to parent table: ${parent_basename}`;\n    copy_back_button.command = 'rainbow-csv.CopyBack';\n    copy_back_button.show();\n}\n\n\nfunction csv_lint(active_doc, is_manual_op) {\n    if (!active_doc)\n        active_doc = get_active_doc();\n    if (!active_doc)\n        return null;\n    var file_path = active_doc.fileName; // For new untitled scratch documents this would be \"Untitled-1\", \"Untitled-2\", etc...\n    if (!file_path)\n        return null;\n    var language_id = active_doc.languageId;\n    if (!dialect_map.hasOwnProperty(language_id))\n        return null;\n    let lint_cache_key = `${file_path}.${language_id}`;\n    if (!is_manual_op) {\n        if (lint_results.has(lint_cache_key))\n            return null;\n        if (!get_from_config('enable_auto_csv_lint', false))\n            return null;\n    }\n    lint_results.set(lint_cache_key, 'Processing...');\n    refresh_status_bar_items(active_doc); // Visual feedback.\n    let [delim, policy] = dialect_map[language_id];\n    var lint_report = produce_lint_report(active_doc, delim, policy);\n    lint_results.set(lint_cache_key, lint_report);\n    return lint_report;\n}\n\n\nasync function csv_lint_cmd() {\n    // TODO re-run on each file save with content change.\n    let lint_report = csv_lint(null, true);\n    // Need timeout here to give user enough time to notice green -> yellow -> green switch, this is a sort of visual feedback.\n    await sleep(500);\n    refresh_status_bar_items();\n    return lint_report;\n}\n\n\nasync function run_internal_test_cmd(integration_test_options) {\n    if (integration_test_options && integration_test_options.check_initialization_state) {\n        // This mode is to ensure that the most basic operations do not cause rainbow csv to load extra (potentially heavy) code.\n        // Vim uses the same approach with its plugin/autoload folder layout design.\n        return {initialized: global_state !== null, lazy_loaded: rainbow_utils !== null};\n    }\n    if (integration_test_options && integration_test_options.check_last_rbql_report) {\n        return _unit_test_last_rbql_report;\n    }\n    if (integration_test_options && integration_test_options.check_last_rbql_warnings) {\n        return {'warnings': _unit_test_last_warnings};\n    }\n    return null;\n}\n\n\nasync function show_warnings(warnings) {\n    _unit_test_last_warnings = [];\n    if (!warnings || !warnings.length)\n        return;\n    var active_window = vscode.window;\n    if (!active_window)\n        return null;\n    for (var i = 0; i < warnings.length; i++) {\n        // Do not \"await\" warning messages because the promise gets resolved only on warning dismissal.\n        active_window.showWarningMessage('RBQL warning: ' + warnings[i]);\n    }\n    _unit_test_last_warnings = warnings;\n}\n\n\nasync function handle_rbql_result_file(text_doc, warnings) {\n    var out_delim = rbql_context.output_delim;\n    let language_id = map_separator_to_language_id(out_delim);\n    var active_window = vscode.window;\n    if (!active_window)\n        return;\n    try {\n        await active_window.showTextDocument(text_doc);\n    } catch (error) {\n        show_single_line_error('Unable to open RBQL result document');\n        return;\n    }\n    if (language_id && text_doc.language_id != language_id) {\n        console.log('changing RBQL result language ' + text_doc.language_id + ' -> ' + language_id);\n        await vscode.languages.setTextDocumentLanguage(text_doc, language_id);\n    }\n    await show_warnings(warnings);\n}\n\n\nfunction run_command(cmd, args, close_and_error_guard, callback_func) {\n    var command = child_process.spawn(cmd, args, {'windowsHide': true});\n    var stdout = '';\n    var stderr = '';\n    command.stdout.on('data', function(data) {\n        stdout += data.toString();\n    });\n    command.stderr.on('data', function(data) {\n        stderr += data.toString();\n    });\n    command.on('close', function(code) {\n        if (!close_and_error_guard['process_reported']) {\n            close_and_error_guard['process_reported'] = true;\n            callback_func(code, stdout, stderr);\n        }\n    });\n    command.on('error', function(error) {\n        var error_msg = error ? error.name + ': ' + error.message : '';\n        if (!close_and_error_guard['process_reported']) {\n            close_and_error_guard['process_reported'] = true;\n            callback_func(1, '', 'Something went wrong. Make sure you have python installed and added to PATH variable in your OS. Or you can use it with JavaScript instead - it should work out of the box\\nDetails:\\n' + error_msg);\n        }\n    });\n}\n\n\nasync function handle_command_result(src_table_path, dst_table_path, error_code, stdout, stderr, webview_report_handler) {\n    let json_report = stdout;\n    let error_type = null;\n    let error_msg = null;\n    let warnings = [];\n    if (error_code || !json_report || stderr) {\n        error_type = 'Integration';\n        error_msg = stderr ? stderr : 'empty error';\n    } else {\n        try {\n            let report = JSON.parse(json_report);\n            if (report.hasOwnProperty('error_type'))\n                error_type = report['error_type'];\n            if (report.hasOwnProperty('error_msg'))\n                error_msg = report['error_msg'];\n            if (report.hasOwnProperty('warnings'))\n                warnings = report['warnings'];\n        } catch (e) {\n            error_type = 'Integration';\n            error_msg = 'Unable to parse JSON report';\n        }\n    }\n    webview_report_handler(error_type, error_msg);\n    if (error_type || error_msg) {\n        return; // Just exit: error would be shown in the preview window.\n    }\n    // No need to close the RBQL console here, better to leave it open so it can be used to quickly adjust the query if needed.\n    autodetection_stoplist.add(dst_table_path);\n    result_set_parent_map.set(dst_table_path.toLowerCase(), src_table_path);\n    let doc = await vscode.workspace.openTextDocument(dst_table_path);\n    await handle_rbql_result_file(doc, warnings);\n}\n\n\nfunction get_dst_table_name(input_path, output_delim) {\n    var table_name = path.basename(input_path);\n    var orig_extension = path.extname(table_name);\n    var delim_ext_map = {'\\t': '.tsv', ',': '.csv'};\n    var dst_extension = '.txt';\n    if (delim_ext_map.hasOwnProperty(output_delim)) {\n        dst_extension = delim_ext_map[output_delim];\n    } else if (orig_extension.length > 1) {\n        dst_extension = orig_extension;\n    }\n    let result_table_name = table_name + dst_extension;\n    if (result_table_name == table_name) { // Just being paranoid to avoid overwriting input table accidentally when output dir configured to be the same as input.\n        result_table_name += '.txt';\n    }\n    return result_table_name;\n}\n\n\nfunction file_path_to_query_key(file_path) {\n    return (file_path && file_path.indexOf(scratch_buf_marker) != -1) ? scratch_buf_marker : file_path;\n}\n\nfunction get_dst_table_dir(input_table_path) {\n    let rbql_output_dir = get_from_config('rbql_output_dir', 'TMP');\n    if (rbql_output_dir == 'TMP') {\n        return os.tmpdir();\n    } else if (rbql_output_dir == 'INPUT') {\n        return path.dirname(input_table_path);\n    } else {\n        // Return custom directory. If the directory does not exist or isn't writable RBQL itself will report more or less clear error.\n        return rbql_output_dir;\n    }\n}\n\n\nasync function run_rbql_query(input_path, csv_encoding, backend_language, rbql_query, output_dialect, enable_rfc_newlines, with_headers, webview_report_handler) {\n    last_rbql_queries.set(file_path_to_query_key(input_path), rbql_query);\n    var cmd = 'python';\n    const test_marker = 'test ';\n    let close_and_error_guard = {'process_reported': false};\n\n    let [input_delim, input_policy] = [rbql_context.delim, rbql_context.policy];\n    if (input_policy == 'quoted' && enable_rfc_newlines)\n        input_policy = 'quoted_rfc';\n    let [output_delim, output_policy] = [input_delim, input_policy];\n    if (output_dialect == 'csv')\n        [output_delim, output_policy] = [',', 'quoted']; // XXX should it be \"quoted_rfc\" instead?\n    if (output_dialect == 'tsv')\n        [output_delim, output_policy] = ['\\t', 'simple'];\n    rbql_context.output_delim = output_delim;\n\n    let output_path = is_web_ext ? null : path.join(get_dst_table_dir(input_path), get_dst_table_name(input_path, output_delim));\n\n    if (rbql_query.startsWith(test_marker)) {\n        if (rbql_query.indexOf('nopython') != -1) {\n            cmd = 'nopython';\n        }\n        let args = [absolute_path_map['rbql mock/rbql_mock.py'], rbql_query];\n        run_command(cmd, args, close_and_error_guard, function(error_code, stdout, stderr) { handle_command_result(input_path, output_path, error_code, stdout, stderr, webview_report_handler); });\n        return;\n    }\n    if (backend_language == 'js') {\n        let warnings = [];\n        let result_doc = null;\n        try {\n            if (is_web_ext) {\n                let result_lines = await ll_rainbow_utils().rbql_query_web(rbql_query, rbql_context.input_document, input_delim, input_policy, output_delim, output_policy, warnings, with_headers, null);\n                let output_doc_cfg = {content: result_lines.join('\\n'), language: map_separator_to_language_id(output_delim)};\n                result_doc = await vscode.workspace.openTextDocument(output_doc_cfg);\n            } else {\n                let csv_options = {'bulk_read': true};\n                await ll_rainbow_utils().rbql_query_node(global_state, rbql_query, input_path, input_delim, input_policy, output_path, output_delim, output_policy, csv_encoding, warnings, with_headers, null, '', csv_options);\n                result_set_parent_map.set(output_path.toLowerCase(), input_path);\n                autodetection_stoplist.add(output_path);\n                result_doc = await vscode.workspace.openTextDocument(output_path);\n            }\n        } catch (e) {\n            let [error_type, error_msg] = ll_rbql_csv().exception_to_error_info(e);\n            webview_report_handler(error_type, error_msg);\n            return;\n        }\n        webview_report_handler(null, null);\n        await handle_rbql_result_file(result_doc, warnings);\n    } else {\n        if (is_web_ext) {\n            webview_report_handler('Input error', 'Python backend for RBQL is not supported in web version, please use JavaScript backend.');\n            return;\n        }\n        let cmd_safe_query = Buffer.from(rbql_query, \"utf-8\").toString(\"base64\");\n        let args = [absolute_path_map['rbql_core/vscode_rbql.py'], cmd_safe_query, input_path, input_delim, input_policy, output_path, output_delim, output_policy, csv_encoding];\n        if (with_headers)\n            args.push('--with_headers');\n        run_command(cmd, args, close_and_error_guard, function(error_code, stdout, stderr) { handle_command_result(input_path, output_path, error_code, stdout, stderr, webview_report_handler); });\n    }\n}\n\n\nfunction get_dialect(document) {\n    var language_id = document.languageId;\n    if (!dialect_map.hasOwnProperty(language_id))\n        return ['monocolumn', 'monocolumn'];\n    return dialect_map[language_id];\n}\n\n\nasync function set_header_line() {\n    let active_editor = get_active_editor();\n    if (!active_editor)\n        return;\n    var active_doc = get_active_doc(active_editor);\n    if (!active_doc)\n        return;\n\n    var dialect = get_dialect(active_doc);\n    var delim = dialect[0];\n    var policy = dialect[1];\n    if (policy == 'monocolumn') {\n        show_single_line_error('Unable to set header line: no separator specified');\n        return;\n    }\n    let file_path = active_doc.fileName;\n    if (!file_path) {\n        show_single_line_error('Unable to set header line for non-file documents');\n        return;\n    }\n    let selection = active_editor.selection;\n    let raw_header = active_doc.lineAt(selection.start.line).text;\n\n    let header = csv_utils.smart_split(raw_header, delim, policy, false)[0];\n    await save_to_global_state(make_header_key(file_path), JSON.stringify(header));\n}\n\n\nasync function set_rainbow_separator() {\n    let active_editor = get_active_editor();\n    if (!active_editor)\n        return;\n    var active_doc = get_active_doc(active_editor);\n    if (!active_doc)\n        return;\n    let original_language_id = active_doc.languageId;\n    let selection = active_editor.selection;\n    if (!selection) {\n        show_single_line_error(\"Selection is empty\");\n        return;\n    }\n    if (selection.start.line != selection.end.line || selection.start.character + 1 != selection.end.character) {\n        show_single_line_error(\"Selection must contain exactly one separator character\");\n        return;\n    }\n    let separator = active_doc.lineAt(selection.start.line).text.charAt(selection.start.character);\n    let language_id = map_separator_to_language_id(separator);\n    if (!language_id) {\n        show_single_line_error(\"Selected separator is not supported\");\n        return;\n    }\n\n    let doc = await vscode.languages.setTextDocumentLanguage(active_doc, language_id);\n    original_language_ids.set(doc.fileName, original_language_id);\n    csv_lint(doc, false);\n    refresh_status_bar_items(doc);\n}\n\n\nasync function restore_original_language() {\n    var active_doc = get_active_doc();\n    if (!active_doc)\n        return;\n    let file_path = active_doc.fileName;\n    autodetection_stoplist.add(file_path);\n    let original_language_id = 'plaintext';\n    if (original_language_ids.has(file_path)) {\n        original_language_id = original_language_ids.get(file_path);\n    }\n    if (!original_language_id || original_language_id == active_doc.languageId) {\n        show_single_line_error(\"Unable to restore original language\");\n        return;\n    }\n\n    let doc = await vscode.languages.setTextDocumentLanguage(active_doc, original_language_id);\n    original_language_ids.delete(file_path);\n    refresh_status_bar_items(doc);\n}\n\n\nasync function set_join_table_name() {\n    if (is_web_ext) {\n        show_single_line_error('This command is currently unavailable in web mode.');\n        return;\n    }\n    var active_doc = get_active_doc();\n    if (!active_doc)\n        return;\n    let file_path = active_doc.fileName;\n    if (!file_path) {\n        show_single_line_error('Unable to use this document as join table');\n        return;\n    }\n    var title = \"Input table name to use in RBQL JOIN expressions instead of table path\";\n    var input_box_props = {\"prompt\": title, \"value\": 'b'};\n    let table_name = await vscode.window.showInputBox(input_box_props);\n    if (!table_name)\n        return; // User pressed Esc and closed the input box.\n    save_to_global_state(ll_rainbow_utils().make_table_name_key(table_name), file_path);\n}\n\n\nasync function set_virtual_header() {\n    var active_doc = get_active_doc();\n    var dialect = get_dialect(active_doc);\n    var delim = dialect[0];\n    var policy = dialect[1];\n    var file_path = active_doc.fileName;\n    if (!file_path) {\n        show_single_line_error('Unable to edit column names for non-file documents');\n        return;\n    }\n    if (policy == 'monocolumn') {\n        show_single_line_error('Unable to set virtual header: no separator specified');\n        return;\n    }\n    var old_header = get_header(active_doc, delim, policy);\n    var title = \"Adjust column names displayed in hover tooltips. Actual header line and file content won't be affected.\";\n    var old_header_str = quoted_join(old_header, delim);\n    var input_box_props = {\"prompt\": title, \"value\": old_header_str};\n    let raw_new_header = await vscode.window.showInputBox(input_box_props);\n    if (!raw_new_header)\n        return; // User pressed Esc and closed the input box.\n    let new_header = csv_utils.smart_split(raw_new_header, delim, policy, false)[0];\n    await save_to_global_state(make_header_key(file_path), JSON.stringify(new_header));\n}\n\n\nasync function column_edit(edit_mode) {\n    let active_editor = get_active_editor();\n    if (!active_editor || !active_editor.selection)\n        return;\n    let active_doc = active_editor.document;\n    if (!active_doc)\n        return;\n    let dialect = get_dialect(active_doc);\n    let delim = dialect[0];\n    let policy = dialect[1];\n    let comment_prefix = get_from_config('comment_prefix', '');\n\n    let position = active_editor.selection.active;\n    let lnum = position.line;\n    let cnum = position.character;\n    let line = active_doc.lineAt(lnum).text;\n\n    let report = csv_utils.smart_split(line, delim, policy, true);\n\n    let entries = report[0];\n    let quoting_warning = report[1];\n    let col_num = get_field_by_line_position(entries, cnum + 1);\n\n    let selections = [];\n    let num_lines = active_doc.lineCount;\n    if (num_lines >= 10000) {\n        show_single_line_error('Multicursor column edit works only for files smaller than 10000 lines.');\n        return;\n    }\n    for (let lnum = 0; lnum < num_lines; lnum++) {\n        let line_text = active_doc.lineAt(lnum).text;\n        if (lnum + 1 == num_lines && !line_text)\n            break;\n        if (comment_prefix && line_text.startsWith(comment_prefix))\n            continue;\n        let report = csv_utils.smart_split(line_text, delim, policy, true);\n        let entries = report[0];\n        quoting_warning = quoting_warning || report[1];\n        if (col_num >= entries.length) {\n            show_single_line_error(`Line ${lnum + 1} doesn't have field number ${col_num + 1}`);\n            return;\n        }\n        let char_pos_before = entries.slice(0, col_num).join('').length + col_num;\n        let char_pos_after = entries.slice(0, col_num + 1).join('').length + col_num;\n        if (edit_mode == 'ce_before' && policy == 'quoted' && line_text.substring(char_pos_before - 2, char_pos_before + 2).indexOf('\"') != -1) {\n            show_single_line_error(`Accidental data corruption prevention: Cursor at line ${lnum + 1} will not be set: a double quote is in proximity.`);\n            return;\n        }\n        if (edit_mode == 'ce_after' && policy == 'quoted' && line_text.substring(char_pos_after - 2, char_pos_after + 2).indexOf('\"') != -1) {\n            show_single_line_error(`Accidental data corruption prevention: Cursor at line ${lnum + 1} will not be set: a double quote is in proximity.`);\n            return;\n        }\n        if (edit_mode == 'ce_select' && char_pos_before == char_pos_after) {\n            show_single_line_error(`Accidental data corruption prevention: The column can not be selected: field ${col_num + 1} at line ${lnum + 1} is empty.`);\n            return;\n        }\n        let position_before = new vscode.Position(lnum, char_pos_before);\n        let position_after = new vscode.Position(lnum, char_pos_after);\n        if (edit_mode == 'ce_before') {\n            selections.push(new vscode.Selection(position_before, position_before));\n        }\n        if (edit_mode == 'ce_after') {\n            selections.push(new vscode.Selection(position_after, position_after));\n        }\n        if (edit_mode == 'ce_select') {\n            selections.push(new vscode.Selection(position_before, position_after));\n        }\n    }\n    active_editor.selections = selections;\n    if (quoting_warning) {\n        vscode.window.showWarningMessage('Some lines have quoting issues: cursors positioning may be incorrect.');\n    }\n    // Call showTextDocument so that the editor will gain focus and the cursors will become active and blinking. This is a critical step here!\n    await vscode.window.showTextDocument(active_doc);\n}\n\n\nasync function shrink_table() {\n    let active_editor = get_active_editor();\n    let active_doc = get_active_doc(active_editor);\n    if (!active_doc)\n        return;\n    let language_id = active_doc.languageId;\n    if (!dialect_map.hasOwnProperty(language_id))\n        return;\n    let [delim, policy] = dialect_map[language_id];\n    let comment_prefix = get_from_config('comment_prefix', '');\n    let progress_options = {location: vscode.ProgressLocation.Window, title: 'Rainbow CSV'};\n    await vscode.window.withProgress(progress_options, async (progress) => {\n        progress.report({message: 'Preparing'});\n        await push_current_stack_to_js_callback_queue_to_allow_ui_update();\n        let [shrinked_doc_text, first_failed_line] = ll_rainbow_utils().shrink_columns(active_doc, delim, policy, comment_prefix);\n        if (first_failed_line) {\n            show_single_line_error(`Unable to shrink: Inconsistent double quotes at line ${first_failed_line}`);\n            return;\n        }\n        aligned_files.delete(active_doc.fileName);\n        refresh_status_bar_items(active_doc);\n        if (shrinked_doc_text === null) {\n            vscode.window.showWarningMessage('No trailing whitespaces found, skipping');\n            return;\n        }\n        progress.report({message: 'Shrinking columns'});\n        await push_current_stack_to_js_callback_queue_to_allow_ui_update();\n        await replace_doc_content(active_editor, active_doc, shrinked_doc_text);\n    });\n}\n\n\nasync function align_table() {\n    let active_editor = get_active_editor();\n    let active_doc = get_active_doc(active_editor);\n    if (!active_doc)\n        return;\n    let language_id = active_doc.languageId;\n    if (!dialect_map.hasOwnProperty(language_id))\n        return;\n    let [delim, policy] = dialect_map[language_id];\n    let comment_prefix = get_from_config('comment_prefix', '');\n    let progress_options = {location: vscode.ProgressLocation.Window, title: 'Rainbow CSV'};\n    await vscode.window.withProgress(progress_options, async (progress) => {\n        progress.report({message: 'Calculating column statistics'});\n        await push_current_stack_to_js_callback_queue_to_allow_ui_update();\n        let [column_stats, first_failed_line] = ll_rainbow_utils().calc_column_stats(active_doc, delim, policy, comment_prefix);\n        if (first_failed_line) {\n            show_single_line_error(`Unable to align: Inconsistent double quotes at line ${first_failed_line}`);\n            return;\n        }\n        column_stats = ll_rainbow_utils().adjust_column_stats(column_stats);\n        if (column_stats === null) {\n            show_single_line_error('Unable to allign: Internal Rainbow CSV Error');\n            return;\n        }\n        progress.report({message: 'Preparing final alignment'});\n        await push_current_stack_to_js_callback_queue_to_allow_ui_update();\n        let aligned_doc_text = ll_rainbow_utils().align_columns(active_doc, delim, policy, comment_prefix, column_stats);\n        aligned_files.add(active_doc.fileName);\n        refresh_status_bar_items(active_doc);\n        if (aligned_doc_text === null) {\n            vscode.window.showWarningMessage('Table is already aligned, skipping');\n            return;\n        }\n        // The last stage of actually applying the edits takes almost 80% of the whole alignment runtime.\n        progress.report({message: 'Aligning columns'});\n        await push_current_stack_to_js_callback_queue_to_allow_ui_update();\n        await replace_doc_content(active_editor, active_doc, aligned_doc_text);\n    });\n}\n\n\nasync function do_copy_back(query_result_doc, active_editor) {\n    let data = query_result_doc.getText();\n    let active_doc = get_active_doc(active_editor);\n    if (!active_doc)\n        return;\n    await replace_doc_content(active_editor, active_doc, data);\n}\n\n\nasync function copy_back() {\n    if (is_web_ext) {\n        show_single_line_error('This command is currently unavailable in web mode.');\n        return;\n    }\n    let result_doc = get_active_doc();\n    if (!result_doc)\n        return;\n    let file_path = result_doc.fileName;\n    let parent_table_path = result_set_parent_map.get(file_path.toLowerCase());\n    if (!parent_table_path)\n        return;\n    let parent_doc = await vscode.workspace.openTextDocument(parent_table_path);\n    let parent_editor = await vscode.window.showTextDocument(parent_doc);\n    await do_copy_back(result_doc, parent_editor);\n}\n\n\nasync function update_query_history(query) {\n    let history_list = get_from_global_state('rbql_query_history', []);\n    let old_index = history_list.indexOf(query);\n    if (old_index != -1) {\n        history_list.splice(old_index, 1);\n    } else if (history_list.length >= 20) {\n        history_list.splice(0, 1);\n    }\n    history_list.push(query);\n    await save_to_global_state('rbql_query_history', history_list);\n}\n\n\nasync function handle_rbql_client_message(webview, message, integration_test_options=null) {\n    let message_type = message['msg_type'];\n\n    let webview_report_handler = async function(error_type, error_msg) {\n        let report_msg = {'msg_type': 'rbql_report'};\n        if (error_type)\n            report_msg[\"error_type\"] = error_type;\n        if (error_msg)\n            report_msg[\"error_msg\"] = error_msg;\n        _unit_test_last_rbql_report = report_msg;\n        await webview.postMessage(report_msg);\n    };\n\n    if (message_type == 'handshake') {\n        var backend_language = get_from_global_state('rbql_backend_language', 'js');\n        var encoding = get_from_global_state('rbql_encoding', 'utf-8');\n        var init_msg = {'msg_type': 'handshake', 'backend_language': backend_language, 'encoding': encoding};\n        sample_preview_records_from_context(rbql_context, init_msg);\n        let path_key = file_path_to_query_key(rbql_context.input_document_path);\n        if (last_rbql_queries.has(path_key))\n            init_msg['last_query'] = last_rbql_queries.get(path_key);\n        let history_list = get_from_global_state('rbql_query_history', []);\n        init_msg['query_history'] = history_list;\n        init_msg['policy'] = rbql_context.policy;\n        init_msg['enable_rfc_newlines'] = rbql_context.enable_rfc_newlines;\n        init_msg['with_headers'] = rbql_context.with_headers;\n        init_msg['header'] = rbql_context.header;\n        init_msg['is_web_ext'] = is_web_ext;\n        if (integration_test_options) {\n            init_msg['integration_test_language'] = integration_test_options.rbql_backend;\n            init_msg['integration_test_query'] = integration_test_options.rbql_query;\n            init_msg['integration_test_with_headers'] = integration_test_options.with_headers || false;\n            init_msg['integration_test_enable_rfc_newlines'] = integration_test_options.enable_rfc_newlines || false;\n        }\n        await webview.postMessage(init_msg);\n    }\n\n    if (message_type == 'fetch_table_header') {\n        try {\n            let table_id = message['table_id'];\n            let encoding = message['encoding'];\n\n            let input_table_dir = rbql_context.input_document_path ? path.dirname(rbql_context.input_document_path) : null;\n            let table_path = ll_rainbow_utils().find_table_path(global_state, input_table_dir, table_id);\n            if (!table_path)\n                return;\n            let header_line = await ll_rainbow_utils().read_header(table_path, encoding);\n            let [fields, warning] = csv_utils.smart_split(header_line, rbql_context.delim, rbql_context.policy, false);\n            if (!warning) {\n                webview.postMessage({'msg_type': 'fetch_table_header_response', 'header': fields});\n            }\n        } catch (e) {\n            console.error('Unable to get join table header: ' + String(e));\n        }\n    }\n\n    if (message_type == 'update_query') {\n        let rbql_query = message['query'];\n        if (!rbql_query)\n            return;\n        if (rbql_context.input_document_path)\n            last_rbql_queries.set(file_path_to_query_key(rbql_context.input_document_path), rbql_query);\n    }\n\n    if (message_type == 'newlines_policy_change') {\n        rbql_context.enable_rfc_newlines = message['enable_rfc_newlines'];\n        if (rbql_context.input_document_path)\n            await save_to_global_state(make_rfc_policy_key(rbql_context.input_document_path), rbql_context.enable_rfc_newlines);\n        let protocol_message = {'msg_type': 'resample'};\n        sample_preview_records_from_context(rbql_context, protocol_message);\n        await webview.postMessage(protocol_message);\n    }\n\n    if (message_type == 'with_headers_change') {\n        rbql_context.with_headers = message['with_headers'];\n        if (rbql_context.input_document_path)\n            await save_to_global_state(make_with_headers_key(rbql_context.input_document_path), rbql_context.with_headers);\n    }\n\n    if (message_type == 'navigate') {\n        var navig_direction = message['direction'];\n        if (navig_direction == 'backward') {\n            rbql_context.requested_start_record -= preview_window_size;\n        } else if (navig_direction == 'forward') {\n            rbql_context.requested_start_record += preview_window_size;\n        } else if (navig_direction == 'begin') {\n            rbql_context.requested_start_record = 0;\n        } else if (navig_direction == 'end') {\n            rbql_context.requested_start_record = rbql_context.input_document.lineCount; // This is just max possible value which is incorrect and will be adjusted later.\n        }\n        let protocol_message = {'msg_type': 'navigate'};\n        sample_preview_records_from_context(rbql_context, protocol_message);\n        await webview.postMessage(protocol_message);\n    }\n\n    if (message_type == 'run') {\n        let rbql_query = message['query'];\n        let backend_language = message['backend_language'];\n        let encoding = message['encoding'];\n        let output_dialect = message['output_dialect'];\n        let enable_rfc_newlines = message['enable_rfc_newlines'];\n        let with_headers = message['with_headers'];\n        await update_query_history(rbql_query);\n        await run_rbql_query(rbql_context.input_document_path, encoding, backend_language, rbql_query, output_dialect, enable_rfc_newlines, with_headers, webview_report_handler);\n    }\n\n    if (message_type == 'edit_udf') {\n        if (is_web_ext) {\n            webview_report_handler('Input error', 'UDFs are currently not supported in web version');\n            return;\n        }\n        let backend_language = message['backend_language'];\n        let udf_file_path = null;\n        let default_content = '';\n        if (backend_language == 'js') {\n            udf_file_path = path.join(os.homedir(), '.rbql_init_source.js');\n            default_content = ll_rainbow_utils().get_default_js_udf_content();\n        } else {\n            udf_file_path = path.join(os.homedir(), '.rbql_init_source.py');\n            default_content = ll_rainbow_utils().get_default_python_udf_content();\n        }\n        if (!fs.existsSync(udf_file_path)) {\n            fs.writeFileSync(udf_file_path, default_content);\n        }\n        let udf_doc = await vscode.workspace.openTextDocument(udf_file_path);\n        await vscode.window.showTextDocument(udf_doc);\n    }\n\n    if (message_type == 'global_param_change') {\n        await save_to_global_state(message['key'], message['value']);\n    }\n}\n\n\nfunction adjust_webview_paths(paths_list, client_html) {\n    for (const local_path of paths_list) {\n        let adjusted_webview_url = null;\n        if (is_web_ext) {\n            adjusted_webview_url = absolute_path_map[local_path];\n        } else {\n            adjusted_webview_url = preview_panel.webview.asWebviewUri(vscode.Uri.file(absolute_path_map[local_path]));\n        }\n        client_html = client_html.replace(`src=\"${local_path}\"`, `src=\"${adjusted_webview_url}\"`);\n    }\n    return client_html;\n}\n\n\nasync function edit_rbql(integration_test_options=null) {\n    let active_window = vscode.window;\n    if (!active_window)\n        return;\n    let active_editor = active_window.activeTextEditor;\n    if (!active_editor)\n        return;\n    let active_doc = active_editor.document;\n    if (!active_doc)\n        return;\n    let orig_uri = active_doc.uri;\n    if (!orig_uri)\n        return;\n    // For web orig_uri.scheme can have other valid values e.g. `vscode-test-web` when testing the browser integration.\n    if (orig_uri.scheme != 'file' && orig_uri.scheme != 'untitled' && !is_web_ext)\n        return;\n    if (orig_uri.scheme == 'file' && active_doc.isDirty && !is_web_ext) {\n        show_single_line_error(\"Unable to run RBQL: file has unsaved changes\");\n        return;\n    }\n    let input_path = null;\n    if (orig_uri.scheme == 'untitled' && !is_web_ext) {\n        // Scheme 'untitled' means that the document is a scratch buffer that hasn't been saved yet, see https://code.visualstudio.com/api/references/document-selector\n        let data = active_doc.getText();\n        let rnd_suffix = String(Math.floor(Math.random() * 1000000));\n        input_path = path.join(os.tmpdir(), `${scratch_buf_marker}_${rnd_suffix}.txt`);\n        // TODO consider adding username to the input_path and using chmod 600 on it.\n        fs.writeFileSync(input_path, data);\n    } else {\n        input_path = active_doc.fileName;\n    }\n\n    if (!input_path) {\n        show_single_line_error(\"Unable to run RBQL for this file\");\n        return;\n    }\n    let language_id = active_doc.languageId;\n    let delim = 'monocolumn';\n    let policy = 'monocolumn';\n    if (dialect_map.hasOwnProperty(language_id)) {\n        [delim, policy] = dialect_map[language_id];\n    }\n    let enable_rfc_newlines = get_from_global_state(make_rfc_policy_key(input_path), false);\n    let with_headers_by_default = get_from_config('rbql_with_headers_by_default', false);\n    let with_headers = get_from_global_state(make_with_headers_key(input_path), with_headers_by_default);\n    let header = get_header_from_document(active_doc, delim, policy);\n    rbql_context = {\n        \"input_document\": active_doc,\n        \"input_document_path\": input_path,\n        \"requested_start_record\": 0,\n        \"delim\": delim,\n        \"policy\": policy,\n        \"rfc_record_map\": [],\n        \"enable_rfc_newlines\": enable_rfc_newlines,\n        \"with_headers\": with_headers,\n        \"header\": header\n    };\n\n    preview_panel = vscode.window.createWebviewPanel('rbql-console', 'RBQL Console', vscode.ViewColumn.Active, {enableScripts: true});\n    if (!client_html_template) {\n        if (is_web_ext) {\n            client_html_template = client_html_template_web;\n        } else {\n            client_html_template = fs.readFileSync(absolute_path_map['rbql_client.html'], \"utf8\");\n        }\n    }\n    let client_html = client_html_template;\n    client_html = adjust_webview_paths(['contrib/textarea-caret-position/index.js', 'rbql_suggest.js', 'rbql_client.js', 'rbql_logo.svg'], client_html);\n    preview_panel.webview.html = client_html;\n    preview_panel.webview.onDidReceiveMessage(function(message) { handle_rbql_client_message(preview_panel.webview, message, integration_test_options); });\n}\n\n\nfunction get_num_columns_if_delimited(active_doc, delim, policy, min_num_columns, min_num_lines) {\n    var num_lines = active_doc.lineCount;\n    let num_fields = 0;\n    let num_lines_checked = 0;\n    let comment_prefix_for_autodetection = get_from_config('comment_prefix', '');\n    if (!comment_prefix_for_autodetection)\n        comment_prefix_for_autodetection = '#';\n    for (var lnum = 0; lnum < num_lines; lnum++) {\n        var line_text = active_doc.lineAt(lnum).text;\n        if (lnum + 1 == num_lines && !line_text)\n            break;\n        if (line_text.startsWith(comment_prefix_for_autodetection))\n            continue;\n        let [fields, warning] = csv_utils.smart_split(line_text, delim, policy, true);\n        if (warning)\n            return 0; // TODO don't fail on warnings?\n        if (!num_fields)\n            num_fields = fields.length;\n        if (num_fields < min_num_columns || num_fields != fields.length)\n            return 0;\n        num_lines_checked += 1;\n    }\n    return num_lines_checked >= min_num_lines ? num_fields : 0;\n}\n\n\nfunction autodetect_dialect(active_doc, candidate_separators) {\n    let min_num_lines = get_from_config('autodetection_min_line_count', 10);\n    if (active_doc.lineCount < min_num_lines)\n        return null;\n\n    let best_dialect = null;\n    let best_dialect_num_columns = 1;\n    for (let i = 0; i < candidate_separators.length; i++) {\n        let dialect_id = map_separator_to_language_id(candidate_separators[i]);\n        if (!dialect_id)\n            continue;\n        let [delim, policy] = dialect_map[dialect_id];\n        let cur_dialect_num_columns = get_num_columns_if_delimited(active_doc, delim, policy, best_dialect_num_columns + 1, min_num_lines);\n        if (cur_dialect_num_columns > best_dialect_num_columns) {\n            best_dialect_num_columns = cur_dialect_num_columns;\n            best_dialect = dialect_id;\n        }\n    }\n    return best_dialect;\n}\n\n\nfunction autodetect_dialect_frequency_based(active_doc, candidate_separators) {\n    let best_dialect = 'csv';\n    let best_dialect_frequency = 0;\n    let data = active_doc.getText();\n    if (!data)\n        return best_dialect;\n    for (let i = 0; i < candidate_separators.length; i++) {\n        if (candidate_separators[i] == ' ' || candidate_separators[i] == '.')\n            continue; // Whitespace and dot have advantage over other separators in this algorithm, so we just skip them.\n        let dialect_id = map_separator_to_language_id(candidate_separators[i]);\n        let frequency = 0;\n        for (let j = 0; j < 10000 && j < data.length; j++) {\n            if (data[j] == candidate_separators[i])\n                frequency += 1;\n        }\n        if (frequency > best_dialect_frequency) {\n            best_dialect = dialect_id;\n            best_dialect_frequency = frequency;\n        }\n    }\n    return best_dialect;\n}\n\n\nasync function autoenable_rainbow_csv(active_doc) {\n    if (!active_doc)\n        return active_doc;\n    if (!get_from_config('enable_separator_autodetection', false))\n        return active_doc;\n    let candidate_separators = get_from_config('autodetect_separators', []);\n    var original_language_id = active_doc.languageId;\n    var file_path = active_doc.fileName;\n    if (!file_path || autodetection_stoplist.has(file_path)) {\n        return active_doc;\n    }\n    let is_default_csv = file_path.endsWith('.csv') && original_language_id == 'csv';\n    if (original_language_id != 'plaintext' && !is_default_csv)\n        return active_doc;\n    let rainbow_csv_language_id = autodetect_dialect(active_doc, candidate_separators);\n    if (!rainbow_csv_language_id && is_default_csv) {\n        // Smart autodetection method has failed, but we need to choose a separator because this is a csv file. Let's just find the most popular one.\n        rainbow_csv_language_id = autodetect_dialect_frequency_based(active_doc, candidate_separators);\n    }\n    if (!rainbow_csv_language_id || rainbow_csv_language_id == original_language_id)\n        return active_doc;\n\n    let doc = await vscode.languages.setTextDocumentLanguage(active_doc, rainbow_csv_language_id);\n    original_language_ids.set(file_path, original_language_id);\n    return doc;\n}\n\n\nasync function handle_first_empty_doc_edit(change_event) {\n    if (!change_event)\n        return;\n    if (doc_edit_subscription) {\n        doc_edit_subscription.dispose();\n        doc_edit_subscription = null;\n    }\n    let active_doc = change_event.document;\n    if (!active_doc)\n        return;\n    let candidate_separators = get_from_config('autodetect_separators', []);\n    let rainbow_csv_language_id = autodetect_dialect(active_doc, candidate_separators);\n    if (!rainbow_csv_language_id)\n        return;\n    let doc = await vscode.languages.setTextDocumentLanguage(active_doc, rainbow_csv_language_id);\n    csv_lint(doc, false);\n    refresh_status_bar_items(doc);\n}\n\n\nfunction register_csv_copy_paste_for_empty_doc(active_doc) {\n    if (!get_from_config('enable_separator_autodetection', false))\n        return;\n    if (!active_doc || doc_edit_subscription)\n        return;\n    if (!active_doc.isUntitled && active_doc.lineCount != 0)\n        return;\n    doc_edit_subscription = vscode.workspace.onDidChangeTextDocument(handle_first_empty_doc_edit);\n    return;\n}\n\n\nfunction handle_editor_switch(editor) {\n    let active_doc = get_active_doc(editor);\n    csv_lint(active_doc, false);\n    // Calling `refresh_status_bar_items` is required for non-csv documents too to ensure that they have csv-related status items cleared.\n    refresh_status_bar_items(active_doc);\n}\n\n\nfunction do_handle_cursor_movement() {\n    if (!show_column_info_button())\n        column_info_button.hide();\n}\n\n\nfunction handle_cursor_movement(_unused_cursor_event) {\n    if (cursor_timeout_handle !== null) {\n        clearTimeout(cursor_timeout_handle);\n    }\n    // We need timeout delay here to deduplicate/debounce events from multiple consecutive movements, see https://stackoverflow.com/a/49050990/2898283.\n    cursor_timeout_handle = setTimeout(() => do_handle_cursor_movement(), 10);\n}\n\n\nasync function handle_doc_open(active_doc) {\n    register_csv_copy_paste_for_empty_doc(active_doc);\n    active_doc = await autoenable_rainbow_csv(active_doc);\n    csv_lint(active_doc, false);\n    refresh_status_bar_items(active_doc);\n}\n\n\nfunction quote_field(field, delim) {\n    if (field.indexOf('\"') != -1 || field.indexOf(delim) != -1) {\n        return '\"' + field.replace(/\"/g, '\"\"') + '\"';\n    }\n    return field;\n}\n\n\nfunction quoted_join(fields, delim) {\n    var quoted_fields = fields.map(function(val) { return quote_field(val, delim); });\n    return quoted_fields.join(delim);\n}\n\n\nasync function make_preview(uri, preview_mode) {\n    if (is_web_ext) {\n        show_single_line_error('This command is currently unavailable in web mode.');\n        return;\n    }\n    var file_path = uri.fsPath;\n    if (!file_path || !fs.existsSync(file_path)) {\n        vscode.window.showErrorMessage('Invalid file');\n        return;\n    }\n\n    var size_limit = 1024000; // ~1MB\n    var file_size_in_bytes = fs.statSync(file_path)['size'];\n    if (file_size_in_bytes <= size_limit) {\n        vscode.window.showWarningMessage('Rainbow CSV: The file is not big enough, showing the full file instead. Use this preview for files larger than 1MB');\n        let full_orig_doc = await vscode.workspace.openTextDocument(file_path);\n        await vscode.window.showTextDocument(full_orig_doc);\n        return;\n    }\n\n    let file_basename = path.basename(file_path);\n    const out_path = path.join(os.tmpdir(), `.rb_csv_preview.${preview_mode}.${file_basename}`);\n\n    fs.open(file_path, 'r', (err, fd) => {\n        if (err) {\n            console.log(err.message);\n            vscode.window.showErrorMessage('Unable to preview file');\n            return;\n        }\n\n        var buffer = Buffer.alloc(size_limit);\n        let read_begin_pos = preview_mode == 'head' ? 0 : Math.max(file_size_in_bytes - size_limit, 0);\n        fs.read(fd, buffer, 0, size_limit, read_begin_pos, function(err, _num) {\n            if (err) {\n                console.log(err.message);\n                vscode.window.showErrorMessage('Unable to preview file');\n                return;\n            }\n\n            const buffer_str = buffer.toString();\n            // TODO handle old mac '\\r' line endings - still used by Mac version of Excel.\n            let content = null;\n            if (preview_mode == 'head') {\n                content = buffer_str.substr(0, buffer_str.lastIndexOf(buffer_str.includes('\\r\\n') ? '\\r\\n' : '\\n'));\n            } else {\n                content = buffer_str.substr(buffer_str.indexOf('\\n') + 1);\n            }\n            fs.writeFileSync(out_path, content);\n            vscode.workspace.openTextDocument(out_path).then(doc => vscode.window.showTextDocument(doc));\n        });\n    });\n}\n\n\nfunction register_csv_hover_info_provider(language_id, context) {\n    let hover_provider = vscode.languages.registerHoverProvider(language_id, {\n        provideHover(document, position, token) {\n            return make_hover(document, position, language_id, token);\n        }\n    });\n    context.subscriptions.push(hover_provider);\n}\n\n\nasync function activate(context) {\n    // TODO consider storing `context` itself in a global variable.\n    global_state = context.globalState;\n\n    if (is_web_ext) {\n        let rbql_client_uri = vscode.Uri.joinPath(context.extensionUri, 'rbql_client.html');\n        let bytes = await vscode.workspace.fs.readFile(rbql_client_uri);\n        // Using TextDecoder because it should work fine in web extension.\n        client_html_template_web = new TextDecoder().decode(bytes);\n    }\n\n    for (let local_path in absolute_path_map) {\n        if (absolute_path_map.hasOwnProperty(local_path)) {\n            if (is_web_ext) {\n                absolute_path_map[local_path] = vscode.Uri.joinPath(context.extensionUri, local_path);\n            } else {\n                absolute_path_map[local_path] = context.asAbsolutePath(local_path);\n            }\n        }\n    }\n\n    if (get_from_config('enable_tooltip', false)) {\n        for (let language_id in dialect_map) {\n            if (dialect_map.hasOwnProperty(language_id)) {\n                register_csv_hover_info_provider(language_id, context);\n            }\n        }\n    }\n\n    var lint_cmd = vscode.commands.registerCommand('rainbow-csv.CSVLint', csv_lint_cmd);\n    var rbql_cmd = vscode.commands.registerCommand('rainbow-csv.RBQL', edit_rbql);\n    var set_header_line_cmd = vscode.commands.registerCommand('rainbow-csv.SetHeaderLine', set_header_line);\n    var edit_column_names_cmd = vscode.commands.registerCommand('rainbow-csv.SetVirtualHeader', set_virtual_header);\n    var set_join_table_name_cmd = vscode.commands.registerCommand('rainbow-csv.SetJoinTableName', set_join_table_name); // WEB_DISABLED\n    var column_edit_before_cmd = vscode.commands.registerCommand('rainbow-csv.ColumnEditBefore', async function() { await column_edit('ce_before'); });\n    var column_edit_after_cmd = vscode.commands.registerCommand('rainbow-csv.ColumnEditAfter', async function() { await column_edit('ce_after'); });\n    var column_edit_select_cmd = vscode.commands.registerCommand('rainbow-csv.ColumnEditSelect', async function() { await column_edit('ce_select'); });\n    var set_separator_cmd = vscode.commands.registerCommand('rainbow-csv.RainbowSeparator', set_rainbow_separator);\n    var rainbow_off_cmd = vscode.commands.registerCommand('rainbow-csv.RainbowSeparatorOff', restore_original_language);\n    var sample_head_cmd = vscode.commands.registerCommand('rainbow-csv.SampleHead', async function(uri) { await make_preview(uri, 'head'); }); // WEB_DISABLED\n    var sample_tail_cmd = vscode.commands.registerCommand('rainbow-csv.SampleTail', async function(uri) { await make_preview(uri, 'tail'); }); // WEB_DISABLED\n    var align_cmd = vscode.commands.registerCommand('rainbow-csv.Align', align_table);\n    var shrink_cmd = vscode.commands.registerCommand('rainbow-csv.Shrink', shrink_table);\n    var copy_back_cmd = vscode.commands.registerCommand('rainbow-csv.CopyBack', copy_back); // WEB_DISABLED\n    var internal_test_cmd = vscode.commands.registerCommand('rainbow-csv.InternalTest', run_internal_test_cmd);\n\n    var doc_open_event = vscode.workspace.onDidOpenTextDocument(handle_doc_open);\n    var switch_event = vscode.window.onDidChangeActiveTextEditor(handle_editor_switch);\n\n    // The only purpose to add the entries to context.subscriptions is to guarantee their disposal during extension deactivation\n    context.subscriptions.push(lint_cmd);\n    context.subscriptions.push(rbql_cmd);\n    context.subscriptions.push(edit_column_names_cmd);\n    context.subscriptions.push(column_edit_before_cmd);\n    context.subscriptions.push(column_edit_after_cmd);\n    context.subscriptions.push(column_edit_select_cmd);\n    context.subscriptions.push(doc_open_event);\n    context.subscriptions.push(switch_event);\n    context.subscriptions.push(set_separator_cmd);\n    context.subscriptions.push(rainbow_off_cmd);\n    context.subscriptions.push(sample_head_cmd);\n    context.subscriptions.push(sample_tail_cmd);\n    context.subscriptions.push(set_join_table_name_cmd);\n    context.subscriptions.push(align_cmd);\n    context.subscriptions.push(shrink_cmd);\n    context.subscriptions.push(copy_back_cmd);\n    context.subscriptions.push(set_header_line_cmd);\n    context.subscriptions.push(internal_test_cmd);\n\n    // Need this because \"onDidOpenTextDocument()\" doesn't get called for the first open document.\n    // Another issue is when dev debug logging mode is enabled, the first document would be \"Log\" because it is printing something and gets VSCode focus.\n    await sleep(1000);\n    let active_doc = get_active_doc();\n    handle_doc_open(active_doc);\n}\n\n\nfunction deactivate() {\n    // This method is called when extension is deactivated.\n}\n\n\nexports.activate = activate;\nexports.deactivate = deactivate;\n"],"names":["GetIntrinsic","callBind","$indexOf","module","exports","name","allowMissing","intrinsic","bind","$apply","$call","$reflectApply","call","$gOPD","$defineProperty","$max","value","e","originalFunction","func","arguments","desc","configurable","length","applyBind","apply","isCallable","toStr","Object","prototype","toString","hasOwnProperty","forEachArray","array","iterator","receiver","i","len","forEachString","string","charAt","forEachObject","object","k","list","thisArg","TypeError","ERROR_MESSAGE","slice","Array","funcType","that","target","this","bound","args","binder","result","concat","boundLength","Math","max","boundArgs","push","Function","join","Empty","implementation","undefined","$SyntaxError","SyntaxError","$Function","$TypeError","getEvalledConstructor","expressionSyntax","getOwnPropertyDescriptor","throwTypeError","ThrowTypeError","calleeThrows","get","gOPDthrows","hasSymbols","getProto","getPrototypeOf","x","__proto__","needsEval","TypedArray","Uint8Array","INTRINSICS","AggregateError","ArrayBuffer","Symbol","Atomics","BigInt","Boolean","DataView","Date","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","Error","eval","EvalError","Float32Array","Float64Array","FinalizationRegistry","Int8Array","Int16Array","Int32Array","isFinite","isNaN","JSON","Map","Number","parseFloat","parseInt","Promise","Proxy","RangeError","ReferenceError","Reflect","RegExp","Set","SharedArrayBuffer","String","Uint8ClampedArray","Uint16Array","Uint32Array","URIError","WeakMap","WeakRef","WeakSet","doEval","fn","gen","LEGACY_ALIASES","hasOwn","$concat","$spliceApply","splice","$replace","replace","$strSlice","rePropName","reEscapeChar","stringToPath","first","last","match","number","quote","subString","getBaseIntrinsic","alias","intrinsicName","parts","intrinsicBaseName","intrinsicRealName","skipFurtherCaching","isOwn","part","origSymbol","hasSymbolSham","getOwnPropertySymbols","obj","sym","symObj","keys","getOwnPropertyNames","syms","propertyIsEnumerable","descriptor","enumerable","toStringTag","create","ctor","superCtor","super_","constructor","writable","TempCtor","hasToStringTag","$toString","callBound","isStandardArguments","isLegacyArguments","callee","supportsStandardArguments","badArrayLike","isCallableMarker","fnToStr","reflectApply","defineProperty","_","constructorRegex","isES6ClassFn","fnStr","test","documentDotAll","document","all","tryFunctionObject","strClass","GeneratorFunction","isFnRegex","generatorFunc","getGeneratorFunc","forEach","availableTypedArrays","g","globalThis","typedArrays","$slice","toStrTags","gOPD","typedArray","arr","proto","superProto","tag","anyTrue","getter","tryTypedArrays","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","arg","copy","fill","readUInt8","isArgumentsObject","isGeneratorFunction","whichTypedArray","isTypedArray","uncurryThis","f","BigIntSupported","SymbolSupported","ObjectToString","numberValue","valueOf","stringValue","booleanValue","bigIntValue","symbolValue","checkBoxedPrimitive","prototypeValueOf","isMapToString","isSetToString","isWeakMapToString","isWeakSetToString","isArrayBufferToString","isArrayBuffer","working","isDataViewToString","isDataView","isPromise","input","then","catch","isArrayBufferView","isView","isUint8Array","isUint8ClampedArray","isUint16Array","isUint32Array","isInt8Array","isInt16Array","isInt32Array","isFloat32Array","isFloat64Array","isBigInt64Array","isBigUint64Array","isMap","isSet","isWeakMap","isWeakSet","SharedArrayBufferCopy","isSharedArrayBufferToString","isSharedArrayBuffer","isNumberObject","isStringObject","isBooleanObject","isBigIntObject","isSymbolObject","isAsyncFunction","isMapIterator","isSetIterator","isGeneratorObject","isWebAssemblyCompiledModule","isBoxedPrimitive","isAnyArrayBuffer","method","getOwnPropertyDescriptors","descriptors","formatRegExp","format","isString","objects","inspect","str","stringify","isNull","isObject","deprecate","msg","noDeprecation","warned","throwDeprecation","traceDeprecation","console","trace","error","debugs","debugEnvRegex","NODE_DEBUG","debugEnv","toUpperCase","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","isFunction","ret","primitive","simple","isNumber","formatPrimitive","visibleKeys","hash","val","idx","arrayToHash","isError","indexOf","formatError","isRegExp","isDate","output","base","braces","isArray","toUTCString","l","formatProperty","key","formatArray","map","pop","reduce","prev","cur","reduceToSingleString","set","split","line","substr","ar","re","objectToString","d","o","pad","n","debuglog","pid","types","isNullOrUndefined","isSymbol","isNativeError","isPrimitive","isBuffer","months","timestamp","time","getHours","getMinutes","getSeconds","getDate","getMonth","prop","log","inherits","origin","add","kCustomPromisifiedSymbol","callbackifyOnRejected","reason","cb","newReason","promisify","original","promiseResolve","promiseReject","promise","resolve","reject","err","setPrototypeOf","defineProperties","custom","callbackify","callbackified","maybeCb","self","rej","foundName","os","fs","path","rbql","rbql_csv","csv_utils","number_regex","AssertionError","update_subcomponent_stats","field","is_first_line","max_field_components_lens","match_result","exec","cur_integer_part_length","cur_fractional_part_length","align_field","is_last_column","trim","delta_length","repeat","dot_pos","integer_delta_length","fractional_delta_length","trailing_spaces","make_table_name_key","file_path","find_table_path","vscode_global_state","main_table_dir","table_id","filepath","candidate_path","homedir","existsSync","isAbsolute","table_path","get_header_line","comment_prefix","num_lines","lineCount","lnum","line_text","lineAt","text","startsWith","RbqlIOHandlingError","VSCodeRecordIterator","RBQLInputIterator","delim","policy","has_header","table_name","variable_prefix","super","NR","NL","fields_info","first_defective_line","first_record","get_first_record","stop","header_line","smart_split","async","query_text","variable_map","parse_basic_variables","parse_array_variables","parse_attribute_variables","parse_dictionary_variables","get_line_rfc","rfc_line_buffer","record_line","accumulate_rfc_line_into_record","get_line_simple","do_get_record","record","warning","num_fields","get_warnings","inconsistent_records_info","entries","record_id","sort","a","b","condition","message","assert","record_1","num_fields_1","record_2","num_fields_2","warn_msg","make_inconsistent_num_fields_warning","VSCodeWriter","RBQLOutputWriter","header_len","null_in_output","delim_in_simple_output","output_lines","polymorphic_join","simple_join","quoted_join","quoted_join_rfc","mono_join","set_header","header","write","fields","v","quote_field","rfc_quote_field","res","normalize_fields","out_fields","sub_array_delim","VSCodeTableRegistry","get_iterator_by_table_id","_table_id","VSCodeFileSystemCSVRegistry","RBQLTableRegistry","input_file_dir","encoding","options","stream","record_iterator","bulk_input_path","createReadStream","CSVRecordIterator","output_warnings","basename","read_header","input_reader","createInterface","closed","promise_resolve","promise_reject","output_promise","close","rbql_query_web","input_document","input_delim","input_policy","output_delim","output_policy","with_headers","join_tables_registry","input_iterator","output_writer","query","rbql_query_node","input_path","output_path","csv_encoding","user_init_code","input_stream","stdin","output_stream","close_output_on_finish","stdout","createWriteStream","is_ascii","default_init_source_path","read_user_init_code","dirname","CSVWriter","populate_optimistic_rfc_csv_record_map","requested_end_record","dst_record_map","record_begin","match_list","has_unbalanced_double_quote","get_default_js_udf_content","get_default_python_udf_content","align_columns","active_doc","column_stats","result_lines","has_edit","fnum","adjusted","shrink_columns","calc_column_stats","adjust_column_stats","adjusted_stats","column_stat","field_rgx","field_rgx_external_whitespaces","extract_next_field","src","dlm","preserve_quotes_and_whitespaces","allow_external_whitespaces","cidx","src_cur","substring","match_obj","match_end","uidx","split_quoted_str","extraction_report","unquote_field","split_whitespace_separated_str","preserve_whitespaces","rgxp","unquote_fields","split_lines","external_rfc_line_buffer","current_line","multiline_row","RbqlParsingError","RbqlRuntimeError","InternalBadFieldError","bad_idx","params","replace_all","search","replacement","RBQLContext","writer","unnest_list","top_count","like_regex_cache","sort_key_expression","aggregation_stage","aggregation_key_expression","functional_aggregators","join_map_impl","join_map","lhs_join_var_expression","where_expression","select_expression","update_expressions","variables_init_code","query_context","wrong_aggregation_usage_error","RBQL_VERSION","check_if_brackets_match","opening_bracket","closing_bracket","parse_root_bracket_level_text_spans","text_spans","last_pos","bracket_stack","cur_char","span","unquote_string","quoted_str","column_info_from_text_span","text_span","string_literals","rbql_star_marker","simple_var_match","attribute_match","subscript_int_match","subscript_str_match","column_index","column_name","is_star","replaced_string_literal_id","unquoted_column_name","adhoc_parse_select_expression_to_column_infos","ts","stable_compare","safe_get","safe_join_get","safe_set","regexp_escape","like_to_regex","pattern","p","converted","like","matcher","LIKE","RBQLAggregationToken","marker_id","UnnestMarker","UNNEST","vals","unnest","Unnest","UNFOLD","parse_number","MinAggregator","stats","increment","cur_aggr","min","get_final","MaxAggregator","SumAggregator","AvgAggregator","cur_sum","cur_cnt","VarianceAggregator","cur_sum_sq","avg_val","MedianAggregator","m","floor","CountAggregator","ArrayAggAggregator","post_proc","ConstGroupVerifier","output_index","const_values","old_value","init_aggregator","generator_name","MIN","Min","MAX","Max","COUNT","count","Count","SUM","sum","Sum","AVG","avg","Avg","VARIANCE","variance","Variance","MEDIAN","median","Median","ARRAY_AGG","array_agg","FOLD","add_to_set","dst_set","len_before","size","TopWriter","subwriter","NW","finish","UniqWriter","UniqCountWriter","records","old_val","unshift","SortedWriter","reverse_sort","unsorted_entries","stable_entry","reverse","entry","AggregateWriter","aggregators","aggregation_keys","all_keys","from","ag","InnerJoiner","get_rhs","lhs_key","get_join_records","LeftJoiner","null_record","max_record_len","StrictLeftJoiner","select_except","except_fields","select_simple","sort_key","sort_entry","select_aggregated","transparent_values","num_aggregators_found","trans_value","select_unnested","folded_fields","unnest_pos","findIndex","PROCESS_SELECT_COMMON","PROCESS_SELECT_SIMPLE","PROCESS_SELECT_JOIN","PROCESS_UPDATE_JOIN","PROCESS_UPDATE_SIMPLE","MAIN_LOOP_BODY","embed_expression","parent_code","child_placeholder","child_expression","embed_code","child_code","parent_lines","child_lines","pos","placeholder_indentation","generate_main_loop_code","is_select_query","is_join_query","js_code","compile_and_run","main_loop_body","main_loop_promise","lower_case_query","toLowerCase","GROUP_BY","UPDATE","SELECT","JOIN","INNER_JOIN","LEFT_JOIN","LEFT_OUTER_JOIN","STRICT_LEFT_JOIN","ORDER_BY","WHERE","LIMIT","EXCEPT","WITH","get_ambiguous_error_msg","variable_name","get_all_matches","regexp","str_strip","strip_comments","cline","combine_string_literals","backend_expression","prefix","dst_variables_map","matches","field_num","initialize","index","js_string_escape_column_name","quote_char","query_probably_has_dictionary_variable","continuous_name_segments","continuous_segment","column_names","dict_test_rgx","escaped_column_name","column_names_source","column_names_from_query","zero_based_idx","map_variables_directly","ensure_no_ambiguous_variables","input_column_names","join_column_names","join_column_names_set","has","parse_join_expression","invalid_join_syntax_error","variable_pairs","pair_rgx","and_rgx","resolve_join_variables","input_variables_map","join_variables_map","lhs_variables","rhs_indices","valid_join_syntax_msg","variable_pair","join_var_1","join_var_2","lhs_key_index","rhs_key_index","generate_common_init_code","base_var","attr_var","generate_init_statements","variables_map","indent","code_lines","simple_var_name_rgx","var_info","variable_declaration_keyword","replace_star_count","aggregate_expression","replace_star_vars","rbql_expression","replacement_expression","replace_star_vars_for_header_parsing","translate_update_expression","update_expression","first_assignment_error","assignment_looking_rgx","dst_var_name","var_index","current_indent","translate_select_expression","expression_without_stars","translated","translated_for_header","separate_string_literals","rgx","format_parts","idx_before","literal_id","string_literal","start_index","lastIndex","format_expression","locate_statements","statement_groups","ig","is","statement","match_str","separate_actions","with_match","ordered_statements","statement_start","span_start","span_end","statement_params","new_span","find_top","rb_actions","select_action","translate_except_expression","except_expression","input_header","skip_vars","skip_indices","var_name","HashJoinMap","key_indices","hash_map","nr","key_index","polymorphic_get_key","get_single_key","get_multi_key","ki","get_record","nf","key_records","cleanup_query","filter","remove_redundant_table_name","select_output_header","join_header","query_column_infos","output_header","qci","handle_query_modifier","TableIterator","table","normalize_column_names","stopped","TableWriter","external_table","SingleTableRegistry","shallow_parse_input_query","get_variables_map","rhs_table_id","join_record_iterator","get_header","sql_join_type","build","select_expression_for_ast","query_table","input_table","output_table","join_table","output_column_names","exception_to_error_info","exceptions_type_map","error_type","util","utf_decoding_error","rbql_init_source_path","readFileSync","name_record","index_path","content","lines","try_read_index","get_index_record","RecordQueue","push_stack","pull_stack","enqueue","dequeue","csv_path","first_record_should_be_emitted","header_preread_complete","decoder","TextDecoder","fatal","input_exhausted","started","utf8_bom_removed","partially_decoded_line","partially_decoded_line_ends_with_cr","resolve_current_record","reject_current_record","current_exception","produced_records_queue","process_line_polymorphic","process_partial_rfc_record_line","process_record_line","modifier","reset_external_callbacks","try_propagate_exception","exception","store_or_propagate_exception","pause","preread_first_record","try_resolve_next_record","start","isPaused","resume","parent_iterator","current_record_promise","num_records","process_line","clean_line","assumed_source_encoding","charCodeAt","remove_utf8_bom","process_data_stream_chunk","data_chunk","decoded_string","decode","first_line_index","process_data_bulk","control_buffer","Buffer","compare","process_data_stream_end","last_line","destroy","readFile","close_stream_on_finish","line_separator","setDefaultEncoding","error_obj","store_first_error","first_error","writer_error","_write_all","output_encoding","end","FileSystemCSVRegistry","interpret_named_csv_format","format_name","query_csv","require","possibleNames","out","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","window","vscode","child_process","rainbow_utils","ll_rainbow_utils","is_web_ext","preview_window_size","scratch_buf_marker","client_html_template_web","lint_results","aligned_files","autodetection_stoplist","original_language_ids","result_set_parent_map","lint_status_bar_button","rbql_status_bar_button","align_shrink_button","rainbow_off_status_bar_button","copy_back_button","column_info_button","last_statusbar_doc","rbql_context","last_rbql_queries","client_html_template","global_state","preview_panel","doc_edit_subscription","keyboard_cursor_subscription","_unit_test_last_rbql_report","_unit_test_last_warnings","cursor_timeout_handle","dialect_map","absolute_path_map","show_single_line_error","error_msg","active_window","showErrorMessage","sleep","ms","push_current_stack_to_js_callback_queue_to_allow_ui_update","map_separator_to_language_id","separator","language_id","get_from_global_state","default_value","save_to_global_state","update","get_rfc_record_text","record_start","record_end","replace_doc_content","active_editor","new_content","invalid_range","Range","full_range","validateRange","edit","sample_preview_records_from_context","dst_message","requested_start_record","preview_records","enable_rfc_newlines","rfc_record_map","record_text","cur_record","preview_sampling_error","r","c","start_record_zero_based","make_header_key","make_rfc_policy_key","make_with_headers_key","get_from_config","param_name","config","workspace","getConfiguration","get_header_from_document","fileName","raw_header","parse","get_field_by_line_position","query_pos","col_num","cpos","refresh_status_bar_items","get_active_doc","endsWith","hide_status_bar_buttons","languageId","lint_cache_key","lint_report","createStatusBarItem","StatusBarAlignment","Left","color","tooltip","command","show","show_lint_status_bar_button","show_align_shrink_button","parent_table_path","parent_basename","show_rbql_copy_to_source_button","show_column_info_button","onDidChangeTextEditorSelection","handle_cursor_movement","get_active_editor","activeTextEditor","selections","selection","position","active","isEqual","anchor","enable_tooltip_column_names","status_text","cnum","character","report","make_status_info","Right","short_info","do_show_column_info_button","all_buttons","hide","dispose","csv_lint","is_manual_op","detect_trailing_spaces","first_trailing_space_line","split_result","produce_lint_report","csv_lint_cmd","run_internal_test_cmd","integration_test_options","check_initialization_state","initialized","lazy_loaded","check_last_rbql_report","check_last_rbql_warnings","handle_rbql_result_file","text_doc","warnings","showTextDocument","languages","setTextDocumentLanguage","showWarningMessage","show_warnings","run_command","cmd","close_and_error_guard","callback_func","spawn","stderr","data","code","handle_command_result","src_table_path","dst_table_path","error_code","webview_report_handler","json_report","doc","openTextDocument","file_path_to_query_key","get_dialect","set_header_line","dialect","set_rainbow_separator","original_language_id","restore_original_language","delete","set_join_table_name","showInputBox","set_virtual_header","old_header_str","input_box_props","raw_new_header","new_header","column_edit","edit_mode","quoting_warning","char_pos_before","char_pos_after","position_before","Position","position_after","Selection","shrink_table","progress_options","location","ProgressLocation","Window","withProgress","progress","shrinked_doc_text","first_failed_line","align_table","aligned_doc_text","copy_back","result_doc","parent_doc","parent_editor","query_result_doc","getText","do_copy_back","handle_rbql_client_message","webview","message_type","report_msg","postMessage","init_msg","path_key","input_document_path","history_list","rbql_backend","rbql_query","input_table_dir","protocol_message","navig_direction","backend_language","output_dialect","old_index","update_query_history","input_table_path","rbql_output_dir","tmpdir","get_dst_table_dir","orig_extension","extname","delim_ext_map","dst_extension","result_table_name","get_dst_table_name","output_doc_cfg","language","csv_options","cmd_safe_query","run_rbql_query","udf_file_path","default_content","writeFileSync","udf_doc","edit_rbql","orig_uri","uri","scheme","isDirty","rnd_suffix","random","with_headers_by_default","createWebviewPanel","ViewColumn","Active","enableScripts","client_html","paths_list","local_path","adjusted_webview_url","asWebviewUri","Uri","file","adjust_webview_paths","html","onDidReceiveMessage","get_num_columns_if_delimited","min_num_columns","min_num_lines","num_lines_checked","comment_prefix_for_autodetection","autodetect_dialect","candidate_separators","best_dialect","best_dialect_num_columns","dialect_id","cur_dialect_num_columns","handle_first_empty_doc_edit","change_event","rainbow_csv_language_id","handle_editor_switch","editor","_unused_cursor_event","handle_doc_open","isUntitled","onDidChangeTextDocument","register_csv_copy_paste_for_empty_doc","is_default_csv","best_dialect_frequency","frequency","j","autodetect_dialect_frequency_based","autoenable_rainbow_csv","make_preview","preview_mode","fsPath","size_limit","file_size_in_bytes","statSync","full_orig_doc","file_basename","out_path","open","fd","buffer","alloc","read_begin_pos","read","_num","buffer_str","lastIndexOf","includes","register_csv_hover_info_provider","context","hover_provider","registerHoverProvider","provideHover","token","cancellation_token","hover_text","enable_tooltip_warnings","max_label_len","column_label","short_column_label","make_hover_text","isCancellationRequested","mds","MarkdownString","appendCodeblock","Hover","make_hover","subscriptions","activate","globalState","rbql_client_uri","joinPath","extensionUri","bytes","asAbsolutePath","lint_cmd","commands","registerCommand","rbql_cmd","set_header_line_cmd","edit_column_names_cmd","set_join_table_name_cmd","column_edit_before_cmd","column_edit_after_cmd","column_edit_select_cmd","set_separator_cmd","rainbow_off_cmd","sample_head_cmd","sample_tail_cmd","align_cmd","shrink_cmd","copy_back_cmd","internal_test_cmd","doc_open_event","onDidOpenTextDocument","switch_event","onDidChangeActiveTextEditor","deactivate"],"sourceRoot":""}