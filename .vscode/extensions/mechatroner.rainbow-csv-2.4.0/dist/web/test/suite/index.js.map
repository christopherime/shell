{"version":3,"file":"test/suite/index.js","mappings":"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","sources":["webpack://rainbow-csv/./node_modules/assert/build/assert.js","webpack://rainbow-csv/./node_modules/assert/build/internal/assert/assertion_error.js","webpack://rainbow-csv/./node_modules/assert/build/internal/errors.js","webpack://rainbow-csv/./node_modules/assert/build/internal/util/comparisons.js","webpack://rainbow-csv/./node_modules/call-bind/callBound.js","webpack://rainbow-csv/./node_modules/call-bind/index.js","webpack://rainbow-csv/./node_modules/define-properties/index.js","webpack://rainbow-csv/./node_modules/es6-object-assign/index.js","webpack://rainbow-csv/./node_modules/for-each/index.js","webpack://rainbow-csv/./node_modules/function-bind/implementation.js","webpack://rainbow-csv/./node_modules/function-bind/index.js","webpack://rainbow-csv/./node_modules/get-intrinsic/index.js","webpack://rainbow-csv/./node_modules/has-property-descriptors/index.js","webpack://rainbow-csv/./node_modules/has-symbols/index.js","webpack://rainbow-csv/./node_modules/has-symbols/shams.js","webpack://rainbow-csv/./node_modules/has-tostringtag/shams.js","webpack://rainbow-csv/./node_modules/has/src/index.js","webpack://rainbow-csv/./node_modules/inherits/inherits_browser.js","webpack://rainbow-csv/./node_modules/is-arguments/index.js","webpack://rainbow-csv/./node_modules/is-callable/index.js","webpack://rainbow-csv/./node_modules/is-generator-function/index.js","webpack://rainbow-csv/./node_modules/is-nan/implementation.js","webpack://rainbow-csv/./node_modules/is-nan/index.js","webpack://rainbow-csv/./node_modules/is-nan/polyfill.js","webpack://rainbow-csv/./node_modules/is-nan/shim.js","webpack://rainbow-csv/./node_modules/is-typed-array/index.js","webpack://rainbow-csv/./node_modules/object-is/implementation.js","webpack://rainbow-csv/./node_modules/object-is/index.js","webpack://rainbow-csv/./node_modules/object-is/polyfill.js","webpack://rainbow-csv/./node_modules/object-is/shim.js","webpack://rainbow-csv/./node_modules/object-keys/implementation.js","webpack://rainbow-csv/./node_modules/object-keys/index.js","webpack://rainbow-csv/./node_modules/object-keys/isArguments.js","webpack://rainbow-csv/./node_modules/process/browser.js","webpack://rainbow-csv/./node_modules/util/support/isBufferBrowser.js","webpack://rainbow-csv/./node_modules/util/support/types.js","webpack://rainbow-csv/./node_modules/util/util.js","webpack://rainbow-csv/./node_modules/which-typed-array/index.js","webpack://rainbow-csv/./rainbow_utils.js","webpack://rainbow-csv/./rbql_core/rbql-js/csv_utils.js","webpack://rainbow-csv/./rbql_core/rbql-js/rbql.js","webpack://rainbow-csv/./rbql_core/rbql-js/rbql_csv.js","webpack://rainbow-csv/external commonjs \"vscode\"","webpack://rainbow-csv/./node_modules/available-typed-arrays/index.js","webpack://rainbow-csv/./node_modules/es-abstract/helpers/getOwnPropertyDescriptor.js","webpack://rainbow-csv/webpack/bootstrap","webpack://rainbow-csv/webpack/runtime/global","webpack://rainbow-csv/./test/suite/index.js"],"sourcesContent":["// Currently in sync with Node.js lib/assert.js\n// https://github.com/nodejs/node/commit/2a51ae424a513ec9a6aa3466baa0cc1d55dd4f3b\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _require = require('./internal/errors'),\n    _require$codes = _require.codes,\n    ERR_AMBIGUOUS_ARGUMENT = _require$codes.ERR_AMBIGUOUS_ARGUMENT,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_INVALID_ARG_VALUE = _require$codes.ERR_INVALID_ARG_VALUE,\n    ERR_INVALID_RETURN_VALUE = _require$codes.ERR_INVALID_RETURN_VALUE,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS;\n\nvar AssertionError = require('./internal/assert/assertion_error');\n\nvar _require2 = require('util/'),\n    inspect = _require2.inspect;\n\nvar _require$types = require('util/').types,\n    isPromise = _require$types.isPromise,\n    isRegExp = _require$types.isRegExp;\n\nvar objectAssign = Object.assign ? Object.assign : require('es6-object-assign').assign;\nvar objectIs = Object.is ? Object.is : require('object-is');\nvar errorCache = new Map();\nvar isDeepEqual;\nvar isDeepStrictEqual;\nvar parseExpressionAt;\nvar findNodeAround;\nvar decoder;\n\nfunction lazyLoadComparison() {\n  var comparison = require('./internal/util/comparisons');\n\n  isDeepEqual = comparison.isDeepEqual;\n  isDeepStrictEqual = comparison.isDeepStrictEqual;\n} // Escape control characters but not \\n and \\t to keep the line breaks and\n// indentation intact.\n// eslint-disable-next-line no-control-regex\n\n\nvar escapeSequencesRegExp = /[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f]/g;\nvar meta = [\"\\\\u0000\", \"\\\\u0001\", \"\\\\u0002\", \"\\\\u0003\", \"\\\\u0004\", \"\\\\u0005\", \"\\\\u0006\", \"\\\\u0007\", '\\\\b', '', '', \"\\\\u000b\", '\\\\f', '', \"\\\\u000e\", \"\\\\u000f\", \"\\\\u0010\", \"\\\\u0011\", \"\\\\u0012\", \"\\\\u0013\", \"\\\\u0014\", \"\\\\u0015\", \"\\\\u0016\", \"\\\\u0017\", \"\\\\u0018\", \"\\\\u0019\", \"\\\\u001a\", \"\\\\u001b\", \"\\\\u001c\", \"\\\\u001d\", \"\\\\u001e\", \"\\\\u001f\"];\n\nvar escapeFn = function escapeFn(str) {\n  return meta[str.charCodeAt(0)];\n};\n\nvar warned = false; // The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\nvar NO_EXCEPTION_SENTINEL = {}; // All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided. All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction innerFail(obj) {\n  if (obj.message instanceof Error) throw obj.message;\n  throw new AssertionError(obj);\n}\n\nfunction fail(actual, expected, message, operator, stackStartFn) {\n  var argsLen = arguments.length;\n  var internalMessage;\n\n  if (argsLen === 0) {\n    internalMessage = 'Failed';\n  } else if (argsLen === 1) {\n    message = actual;\n    actual = undefined;\n  } else {\n    if (warned === false) {\n      warned = true;\n      var warn = process.emitWarning ? process.emitWarning : console.warn.bind(console);\n      warn('assert.fail() with more than one argument is deprecated. ' + 'Please use assert.strictEqual() instead or only pass a message.', 'DeprecationWarning', 'DEP0094');\n    }\n\n    if (argsLen === 2) operator = '!=';\n  }\n\n  if (message instanceof Error) throw message;\n  var errArgs = {\n    actual: actual,\n    expected: expected,\n    operator: operator === undefined ? 'fail' : operator,\n    stackStartFn: stackStartFn || fail\n  };\n\n  if (message !== undefined) {\n    errArgs.message = message;\n  }\n\n  var err = new AssertionError(errArgs);\n\n  if (internalMessage) {\n    err.message = internalMessage;\n    err.generatedMessage = true;\n  }\n\n  throw err;\n}\n\nassert.fail = fail; // The AssertionError is defined in internal/error.\n\nassert.AssertionError = AssertionError;\n\nfunction innerOk(fn, argLen, value, message) {\n  if (!value) {\n    var generatedMessage = false;\n\n    if (argLen === 0) {\n      generatedMessage = true;\n      message = 'No value argument passed to `assert.ok()`';\n    } else if (message instanceof Error) {\n      throw message;\n    }\n\n    var err = new AssertionError({\n      actual: value,\n      expected: true,\n      message: message,\n      operator: '==',\n      stackStartFn: fn\n    });\n    err.generatedMessage = generatedMessage;\n    throw err;\n  }\n} // Pure assertion tests whether a value is truthy, as determined\n// by !!value.\n\n\nfunction ok() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  innerOk.apply(void 0, [ok, args.length].concat(args));\n}\n\nassert.ok = ok; // The equality assertion tests shallow, coercive equality with ==.\n\n/* eslint-disable no-restricted-properties */\n\nassert.equal = function equal(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  } // eslint-disable-next-line eqeqeq\n\n\n  if (actual != expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '==',\n      stackStartFn: equal\n    });\n  }\n}; // The non-equality assertion tests for whether two objects are not\n// equal with !=.\n\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  } // eslint-disable-next-line eqeqeq\n\n\n  if (actual == expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '!=',\n      stackStartFn: notEqual\n    });\n  }\n}; // The equivalence assertion tests a deep equality relation.\n\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (!isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepEqual',\n      stackStartFn: deepEqual\n    });\n  }\n}; // The non-equivalence assertion tests for any deep inequality.\n\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepEqual',\n      stackStartFn: notDeepEqual\n    });\n  }\n};\n/* eslint-enable */\n\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (!isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepStrictEqual',\n      stackStartFn: deepStrictEqual\n    });\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\n\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepStrictEqual',\n      stackStartFn: notDeepStrictEqual\n    });\n  }\n}\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (!objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'strictEqual',\n      stackStartFn: strictEqual\n    });\n  }\n};\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notStrictEqual',\n      stackStartFn: notStrictEqual\n    });\n  }\n};\n\nvar Comparison = function Comparison(obj, keys, actual) {\n  var _this = this;\n\n  _classCallCheck(this, Comparison);\n\n  keys.forEach(function (key) {\n    if (key in obj) {\n      if (actual !== undefined && typeof actual[key] === 'string' && isRegExp(obj[key]) && obj[key].test(actual[key])) {\n        _this[key] = actual[key];\n      } else {\n        _this[key] = obj[key];\n      }\n    }\n  });\n};\n\nfunction compareExceptionKey(actual, expected, key, message, keys, fn) {\n  if (!(key in actual) || !isDeepStrictEqual(actual[key], expected[key])) {\n    if (!message) {\n      // Create placeholder objects to create a nice output.\n      var a = new Comparison(actual, keys);\n      var b = new Comparison(expected, keys, actual);\n      var err = new AssertionError({\n        actual: a,\n        expected: b,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.actual = actual;\n      err.expected = expected;\n      err.operator = fn.name;\n      throw err;\n    }\n\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: fn.name,\n      stackStartFn: fn\n    });\n  }\n}\n\nfunction expectedException(actual, expected, msg, fn) {\n  if (typeof expected !== 'function') {\n    if (isRegExp(expected)) return expected.test(actual); // assert.doesNotThrow does not accept objects.\n\n    if (arguments.length === 2) {\n      throw new ERR_INVALID_ARG_TYPE('expected', ['Function', 'RegExp'], expected);\n    } // Handle primitives properly.\n\n\n    if (_typeof(actual) !== 'object' || actual === null) {\n      var err = new AssertionError({\n        actual: actual,\n        expected: expected,\n        message: msg,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.operator = fn.name;\n      throw err;\n    }\n\n    var keys = Object.keys(expected); // Special handle errors to make sure the name and the message are compared\n    // as well.\n\n    if (expected instanceof Error) {\n      keys.push('name', 'message');\n    } else if (keys.length === 0) {\n      throw new ERR_INVALID_ARG_VALUE('error', expected, 'may not be an empty object');\n    }\n\n    if (isDeepEqual === undefined) lazyLoadComparison();\n    keys.forEach(function (key) {\n      if (typeof actual[key] === 'string' && isRegExp(expected[key]) && expected[key].test(actual[key])) {\n        return;\n      }\n\n      compareExceptionKey(actual, expected, key, msg, keys, fn);\n    });\n    return true;\n  } // Guard instanceof against arrow functions as they don't have a prototype.\n\n\n  if (expected.prototype !== undefined && actual instanceof expected) {\n    return true;\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction getActual(fn) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', 'Function', fn);\n  }\n\n  try {\n    fn();\n  } catch (e) {\n    return e;\n  }\n\n  return NO_EXCEPTION_SENTINEL;\n}\n\nfunction checkIsPromise(obj) {\n  // Accept native ES6 promises and promises that are implemented in a similar\n  // way. Do not accept thenables that use a function as `obj` and that have no\n  // `catch` handler.\n  // TODO: thenables are checked up until they have the correct methods,\n  // but according to documentation, the `then` method should receive\n  // the `fulfill` and `reject` arguments as well or it may be never resolved.\n  return isPromise(obj) || obj !== null && _typeof(obj) === 'object' && typeof obj.then === 'function' && typeof obj.catch === 'function';\n}\n\nfunction waitForActual(promiseFn) {\n  return Promise.resolve().then(function () {\n    var resultPromise;\n\n    if (typeof promiseFn === 'function') {\n      // Return a rejected promise if `promiseFn` throws synchronously.\n      resultPromise = promiseFn(); // Fail in case no promise is returned.\n\n      if (!checkIsPromise(resultPromise)) {\n        throw new ERR_INVALID_RETURN_VALUE('instance of Promise', 'promiseFn', resultPromise);\n      }\n    } else if (checkIsPromise(promiseFn)) {\n      resultPromise = promiseFn;\n    } else {\n      throw new ERR_INVALID_ARG_TYPE('promiseFn', ['Function', 'Promise'], promiseFn);\n    }\n\n    return Promise.resolve().then(function () {\n      return resultPromise;\n    }).then(function () {\n      return NO_EXCEPTION_SENTINEL;\n    }).catch(function (e) {\n      return e;\n    });\n  });\n}\n\nfunction expectsError(stackStartFn, actual, error, message) {\n  if (typeof error === 'string') {\n    if (arguments.length === 4) {\n      throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n    }\n\n    if (_typeof(actual) === 'object' && actual !== null) {\n      if (actual.message === error) {\n        throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error message \\\"\".concat(actual.message, \"\\\" is identical to the message.\"));\n      }\n    } else if (actual === error) {\n      throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error \\\"\".concat(actual, \"\\\" is identical to the message.\"));\n    }\n\n    message = error;\n    error = undefined;\n  } else if (error != null && _typeof(error) !== 'object' && typeof error !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n  }\n\n  if (actual === NO_EXCEPTION_SENTINEL) {\n    var details = '';\n\n    if (error && error.name) {\n      details += \" (\".concat(error.name, \")\");\n    }\n\n    details += message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'rejects' ? 'rejection' : 'exception';\n    innerFail({\n      actual: undefined,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Missing expected \".concat(fnType).concat(details),\n      stackStartFn: stackStartFn\n    });\n  }\n\n  if (error && !expectedException(actual, error, message, stackStartFn)) {\n    throw actual;\n  }\n}\n\nfunction expectsNoError(stackStartFn, actual, error, message) {\n  if (actual === NO_EXCEPTION_SENTINEL) return;\n\n  if (typeof error === 'string') {\n    message = error;\n    error = undefined;\n  }\n\n  if (!error || expectedException(actual, error)) {\n    var details = message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'doesNotReject' ? 'rejection' : 'exception';\n    innerFail({\n      actual: actual,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Got unwanted \".concat(fnType).concat(details, \"\\n\") + \"Actual message: \\\"\".concat(actual && actual.message, \"\\\"\"),\n      stackStartFn: stackStartFn\n    });\n  }\n\n  throw actual;\n}\n\nassert.throws = function throws(promiseFn) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n\n  expectsError.apply(void 0, [throws, getActual(promiseFn)].concat(args));\n};\n\nassert.rejects = function rejects(promiseFn) {\n  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n\n  return waitForActual(promiseFn).then(function (result) {\n    return expectsError.apply(void 0, [rejects, result].concat(args));\n  });\n};\n\nassert.doesNotThrow = function doesNotThrow(fn) {\n  for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n\n  expectsNoError.apply(void 0, [doesNotThrow, getActual(fn)].concat(args));\n};\n\nassert.doesNotReject = function doesNotReject(fn) {\n  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    args[_key5 - 1] = arguments[_key5];\n  }\n\n  return waitForActual(fn).then(function (result) {\n    return expectsNoError.apply(void 0, [doesNotReject, result].concat(args));\n  });\n};\n\nassert.ifError = function ifError(err) {\n  if (err !== null && err !== undefined) {\n    var message = 'ifError got unwanted exception: ';\n\n    if (_typeof(err) === 'object' && typeof err.message === 'string') {\n      if (err.message.length === 0 && err.constructor) {\n        message += err.constructor.name;\n      } else {\n        message += err.message;\n      }\n    } else {\n      message += inspect(err);\n    }\n\n    var newErr = new AssertionError({\n      actual: err,\n      expected: null,\n      operator: 'ifError',\n      message: message,\n      stackStartFn: ifError\n    }); // Make sure we actually have a stack trace!\n\n    var origStack = err.stack;\n\n    if (typeof origStack === 'string') {\n      // This will remove any duplicated frames from the error frames taken\n      // from within `ifError` and add the original error frames to the newly\n      // created ones.\n      var tmp2 = origStack.split('\\n');\n      tmp2.shift(); // Filter all frames existing in err.stack.\n\n      var tmp1 = newErr.stack.split('\\n');\n\n      for (var i = 0; i < tmp2.length; i++) {\n        // Find the first occurrence of the frame.\n        var pos = tmp1.indexOf(tmp2[i]);\n\n        if (pos !== -1) {\n          // Only keep new frames.\n          tmp1 = tmp1.slice(0, pos);\n          break;\n        }\n      }\n\n      newErr.stack = \"\".concat(tmp1.join('\\n'), \"\\n\").concat(tmp2.join('\\n'));\n    }\n\n    throw newErr;\n  }\n}; // Expose a strict only variant of assert\n\n\nfunction strict() {\n  for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    args[_key6] = arguments[_key6];\n  }\n\n  innerOk.apply(void 0, [strict, args.length].concat(args));\n}\n\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;","// Currently in sync with Node.js lib/internal/assert/assertion_error.js\n// https://github.com/nodejs/node/commit/0817840f775032169ddd70c85ac059f18ffcc81c\n'use strict';\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar _require = require('util/'),\n    inspect = _require.inspect;\n\nvar _require2 = require('../errors'),\n    ERR_INVALID_ARG_TYPE = _require2.codes.ERR_INVALID_ARG_TYPE; // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n\n\nfunction repeat(str, count) {\n  count = Math.floor(count);\n  if (str.length == 0 || count == 0) return '';\n  var maxCount = str.length * count;\n  count = Math.floor(Math.log(count) / Math.log(2));\n\n  while (count) {\n    str += str;\n    count--;\n  }\n\n  str += str.substring(0, maxCount - str.length);\n  return str;\n}\n\nvar blue = '';\nvar green = '';\nvar red = '';\nvar white = '';\nvar kReadableOperator = {\n  deepStrictEqual: 'Expected values to be strictly deep-equal:',\n  strictEqual: 'Expected values to be strictly equal:',\n  strictEqualObject: 'Expected \"actual\" to be reference-equal to \"expected\":',\n  deepEqual: 'Expected values to be loosely deep-equal:',\n  equal: 'Expected values to be loosely equal:',\n  notDeepStrictEqual: 'Expected \"actual\" not to be strictly deep-equal to:',\n  notStrictEqual: 'Expected \"actual\" to be strictly unequal to:',\n  notStrictEqualObject: 'Expected \"actual\" not to be reference-equal to \"expected\":',\n  notDeepEqual: 'Expected \"actual\" not to be loosely deep-equal to:',\n  notEqual: 'Expected \"actual\" to be loosely unequal to:',\n  notIdentical: 'Values identical but not reference-equal:'\n}; // Comparing short primitives should just show === / !== instead of using the\n// diff.\n\nvar kMaxShortLength = 10;\n\nfunction copyError(source) {\n  var keys = Object.keys(source);\n  var target = Object.create(Object.getPrototypeOf(source));\n  keys.forEach(function (key) {\n    target[key] = source[key];\n  });\n  Object.defineProperty(target, 'message', {\n    value: source.message\n  });\n  return target;\n}\n\nfunction inspectValue(val) {\n  // The util.inspect default values could be changed. This makes sure the\n  // error messages contain the necessary information nevertheless.\n  return inspect(val, {\n    compact: false,\n    customInspect: false,\n    depth: 1000,\n    maxArrayLength: Infinity,\n    // Assert compares only enumerable properties (with a few exceptions).\n    showHidden: false,\n    // Having a long line as error is better than wrapping the line for\n    // comparison for now.\n    // TODO(BridgeAR): `breakLength` should be limited as soon as soon as we\n    // have meta information about the inspected properties (i.e., know where\n    // in what line the property starts and ends).\n    breakLength: Infinity,\n    // Assert does not detect proxies currently.\n    showProxy: false,\n    sorted: true,\n    // Inspect getters as we also check them when comparing entries.\n    getters: true\n  });\n}\n\nfunction createErrDiff(actual, expected, operator) {\n  var other = '';\n  var res = '';\n  var lastPos = 0;\n  var end = '';\n  var skipped = false;\n  var actualInspected = inspectValue(actual);\n  var actualLines = actualInspected.split('\\n');\n  var expectedLines = inspectValue(expected).split('\\n');\n  var i = 0;\n  var indicator = ''; // In case both values are objects explicitly mark them as not reference equal\n  // for the `strictEqual` operator.\n\n  if (operator === 'strictEqual' && _typeof(actual) === 'object' && _typeof(expected) === 'object' && actual !== null && expected !== null) {\n    operator = 'strictEqualObject';\n  } // If \"actual\" and \"expected\" fit on a single line and they are not strictly\n  // equal, check further special handling.\n\n\n  if (actualLines.length === 1 && expectedLines.length === 1 && actualLines[0] !== expectedLines[0]) {\n    var inputLength = actualLines[0].length + expectedLines[0].length; // If the character length of \"actual\" and \"expected\" together is less than\n    // kMaxShortLength and if neither is an object and at least one of them is\n    // not `zero`, use the strict equal comparison to visualize the output.\n\n    if (inputLength <= kMaxShortLength) {\n      if ((_typeof(actual) !== 'object' || actual === null) && (_typeof(expected) !== 'object' || expected === null) && (actual !== 0 || expected !== 0)) {\n        // -0 === +0\n        return \"\".concat(kReadableOperator[operator], \"\\n\\n\") + \"\".concat(actualLines[0], \" !== \").concat(expectedLines[0], \"\\n\");\n      }\n    } else if (operator !== 'strictEqualObject') {\n      // If the stderr is a tty and the input length is lower than the current\n      // columns per line, add a mismatch indicator below the output. If it is\n      // not a tty, use a default value of 80 characters.\n      var maxLength = process.stderr && process.stderr.isTTY ? process.stderr.columns : 80;\n\n      if (inputLength < maxLength) {\n        while (actualLines[0][i] === expectedLines[0][i]) {\n          i++;\n        } // Ignore the first characters.\n\n\n        if (i > 2) {\n          // Add position indicator for the first mismatch in case it is a\n          // single line and the input length is less than the column length.\n          indicator = \"\\n  \".concat(repeat(' ', i), \"^\");\n          i = 0;\n        }\n      }\n    }\n  } // Remove all ending lines that match (this optimizes the output for\n  // readability by reducing the number of total changed lines).\n\n\n  var a = actualLines[actualLines.length - 1];\n  var b = expectedLines[expectedLines.length - 1];\n\n  while (a === b) {\n    if (i++ < 2) {\n      end = \"\\n  \".concat(a).concat(end);\n    } else {\n      other = a;\n    }\n\n    actualLines.pop();\n    expectedLines.pop();\n    if (actualLines.length === 0 || expectedLines.length === 0) break;\n    a = actualLines[actualLines.length - 1];\n    b = expectedLines[expectedLines.length - 1];\n  }\n\n  var maxLines = Math.max(actualLines.length, expectedLines.length); // Strict equal with identical objects that are not identical by reference.\n  // E.g., assert.deepStrictEqual({ a: Symbol() }, { a: Symbol() })\n\n  if (maxLines === 0) {\n    // We have to get the result again. The lines were all removed before.\n    var _actualLines = actualInspected.split('\\n'); // Only remove lines in case it makes sense to collapse those.\n    // TODO: Accept env to always show the full error.\n\n\n    if (_actualLines.length > 30) {\n      _actualLines[26] = \"\".concat(blue, \"...\").concat(white);\n\n      while (_actualLines.length > 27) {\n        _actualLines.pop();\n      }\n    }\n\n    return \"\".concat(kReadableOperator.notIdentical, \"\\n\\n\").concat(_actualLines.join('\\n'), \"\\n\");\n  }\n\n  if (i > 3) {\n    end = \"\\n\".concat(blue, \"...\").concat(white).concat(end);\n    skipped = true;\n  }\n\n  if (other !== '') {\n    end = \"\\n  \".concat(other).concat(end);\n    other = '';\n  }\n\n  var printedLines = 0;\n  var msg = kReadableOperator[operator] + \"\\n\".concat(green, \"+ actual\").concat(white, \" \").concat(red, \"- expected\").concat(white);\n  var skippedMsg = \" \".concat(blue, \"...\").concat(white, \" Lines skipped\");\n\n  for (i = 0; i < maxLines; i++) {\n    // Only extra expected lines exist\n    var cur = i - lastPos;\n\n    if (actualLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(expectedLines[i - 2]);\n          printedLines++;\n        }\n\n        res += \"\\n  \".concat(expectedLines[i - 1]);\n        printedLines++;\n      } // Mark the current line as the last diverging one.\n\n\n      lastPos = i; // Add the expected line to the cache.\n\n      other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLines[i]);\n      printedLines++; // Only extra actual lines exist\n    } else if (expectedLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(actualLines[i - 2]);\n          printedLines++;\n        }\n\n        res += \"\\n  \".concat(actualLines[i - 1]);\n        printedLines++;\n      } // Mark the current line as the last diverging one.\n\n\n      lastPos = i; // Add the actual line to the result.\n\n      res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLines[i]);\n      printedLines++; // Lines diverge\n    } else {\n      var expectedLine = expectedLines[i];\n      var actualLine = actualLines[i]; // If the lines diverge, specifically check for lines that only diverge by\n      // a trailing comma. In that case it is actually identical and we should\n      // mark it as such.\n\n      var divergingLines = actualLine !== expectedLine && (!endsWith(actualLine, ',') || actualLine.slice(0, -1) !== expectedLine); // If the expected line has a trailing comma but is otherwise identical,\n      // add a comma at the end of the actual line. Otherwise the output could\n      // look weird as in:\n      //\n      //   [\n      //     1         // No comma at the end!\n      // +   2\n      //   ]\n      //\n\n      if (divergingLines && endsWith(expectedLine, ',') && expectedLine.slice(0, -1) === actualLine) {\n        divergingLines = false;\n        actualLine += ',';\n      }\n\n      if (divergingLines) {\n        // If the last diverging line is more than one line above and the\n        // current line is at least line three, add some of the former lines and\n        // also add dots to indicate skipped entries.\n        if (cur > 1 && i > 2) {\n          if (cur > 4) {\n            res += \"\\n\".concat(blue, \"...\").concat(white);\n            skipped = true;\n          } else if (cur > 3) {\n            res += \"\\n  \".concat(actualLines[i - 2]);\n            printedLines++;\n          }\n\n          res += \"\\n  \".concat(actualLines[i - 1]);\n          printedLines++;\n        } // Mark the current line as the last diverging one.\n\n\n        lastPos = i; // Add the actual line to the result and cache the expected diverging\n        // line so consecutive diverging lines show up as +++--- and not +-+-+-.\n\n        res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLine);\n        other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLine);\n        printedLines += 2; // Lines are identical\n      } else {\n        // Add all cached information to the result before adding other things\n        // and reset the cache.\n        res += other;\n        other = ''; // If the last diverging line is exactly one line above or if it is the\n        // very first line, add the line to the result.\n\n        if (cur === 1 || i === 0) {\n          res += \"\\n  \".concat(actualLine);\n          printedLines++;\n        }\n      }\n    } // Inspected object to big (Show ~20 rows max)\n\n\n    if (printedLines > 20 && i < maxLines - 2) {\n      return \"\".concat(msg).concat(skippedMsg, \"\\n\").concat(res, \"\\n\").concat(blue, \"...\").concat(white).concat(other, \"\\n\") + \"\".concat(blue, \"...\").concat(white);\n    }\n  }\n\n  return \"\".concat(msg).concat(skipped ? skippedMsg : '', \"\\n\").concat(res).concat(other).concat(end).concat(indicator);\n}\n\nvar AssertionError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(AssertionError, _Error);\n\n  function AssertionError(options) {\n    var _this;\n\n    _classCallCheck(this, AssertionError);\n\n    if (_typeof(options) !== 'object' || options === null) {\n      throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);\n    }\n\n    var message = options.message,\n        operator = options.operator,\n        stackStartFn = options.stackStartFn;\n    var actual = options.actual,\n        expected = options.expected;\n    var limit = Error.stackTraceLimit;\n    Error.stackTraceLimit = 0;\n\n    if (message != null) {\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, String(message)));\n    } else {\n      if (process.stderr && process.stderr.isTTY) {\n        // Reset on each call to make sure we handle dynamically set environment\n        // variables correct.\n        if (process.stderr && process.stderr.getColorDepth && process.stderr.getColorDepth() !== 1) {\n          blue = \"\\x1B[34m\";\n          green = \"\\x1B[32m\";\n          white = \"\\x1B[39m\";\n          red = \"\\x1B[31m\";\n        } else {\n          blue = '';\n          green = '';\n          white = '';\n          red = '';\n        }\n      } // Prevent the error stack from being visible by duplicating the error\n      // in a very close way to the original in case both sides are actually\n      // instances of Error.\n\n\n      if (_typeof(actual) === 'object' && actual !== null && _typeof(expected) === 'object' && expected !== null && 'stack' in actual && actual instanceof Error && 'stack' in expected && expected instanceof Error) {\n        actual = copyError(actual);\n        expected = copyError(expected);\n      }\n\n      if (operator === 'deepStrictEqual' || operator === 'strictEqual') {\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, createErrDiff(actual, expected, operator)));\n      } else if (operator === 'notDeepStrictEqual' || operator === 'notStrictEqual') {\n        // In case the objects are equal but the operator requires unequal, show\n        // the first object and say A equals B\n        var base = kReadableOperator[operator];\n        var res = inspectValue(actual).split('\\n'); // In case \"actual\" is an object, it should not be reference equal.\n\n        if (operator === 'notStrictEqual' && _typeof(actual) === 'object' && actual !== null) {\n          base = kReadableOperator.notStrictEqualObject;\n        } // Only remove lines in case it makes sense to collapse those.\n        // TODO: Accept env to always show the full error.\n\n\n        if (res.length > 30) {\n          res[26] = \"\".concat(blue, \"...\").concat(white);\n\n          while (res.length > 27) {\n            res.pop();\n          }\n        } // Only print a single input.\n\n\n        if (res.length === 1) {\n          _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, \"\".concat(base, \" \").concat(res[0])));\n        } else {\n          _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, \"\".concat(base, \"\\n\\n\").concat(res.join('\\n'), \"\\n\")));\n        }\n      } else {\n        var _res = inspectValue(actual);\n\n        var other = '';\n        var knownOperators = kReadableOperator[operator];\n\n        if (operator === 'notDeepEqual' || operator === 'notEqual') {\n          _res = \"\".concat(kReadableOperator[operator], \"\\n\\n\").concat(_res);\n\n          if (_res.length > 1024) {\n            _res = \"\".concat(_res.slice(0, 1021), \"...\");\n          }\n        } else {\n          other = \"\".concat(inspectValue(expected));\n\n          if (_res.length > 512) {\n            _res = \"\".concat(_res.slice(0, 509), \"...\");\n          }\n\n          if (other.length > 512) {\n            other = \"\".concat(other.slice(0, 509), \"...\");\n          }\n\n          if (operator === 'deepEqual' || operator === 'equal') {\n            _res = \"\".concat(knownOperators, \"\\n\\n\").concat(_res, \"\\n\\nshould equal\\n\\n\");\n          } else {\n            other = \" \".concat(operator, \" \").concat(other);\n          }\n        }\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, \"\".concat(_res).concat(other)));\n      }\n    }\n\n    Error.stackTraceLimit = limit;\n    _this.generatedMessage = !message;\n    Object.defineProperty(_assertThisInitialized(_this), 'name', {\n      value: 'AssertionError [ERR_ASSERTION]',\n      enumerable: false,\n      writable: true,\n      configurable: true\n    });\n    _this.code = 'ERR_ASSERTION';\n    _this.actual = actual;\n    _this.expected = expected;\n    _this.operator = operator;\n\n    if (Error.captureStackTrace) {\n      // eslint-disable-next-line no-restricted-syntax\n      Error.captureStackTrace(_assertThisInitialized(_this), stackStartFn);\n    } // Create error message including the error code in the name.\n\n\n    _this.stack; // Reset the name.\n\n    _this.name = 'AssertionError';\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(AssertionError, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.name, \" [\").concat(this.code, \"]: \").concat(this.message);\n    }\n  }, {\n    key: inspect.custom,\n    value: function value(recurseTimes, ctx) {\n      // This limits the `actual` and `expected` property default inspection to\n      // the minimum depth. Otherwise those values would be too verbose compared\n      // to the actual error message which contains a combined view of these two\n      // input values.\n      return inspect(this, _objectSpread({}, ctx, {\n        customInspect: false,\n        depth: 0\n      }));\n    }\n  }]);\n\n  return AssertionError;\n}(_wrapNativeSuper(Error));\n\nmodule.exports = AssertionError;","// Currently in sync with Node.js lib/internal/errors.js\n// https://github.com/nodejs/node/commit/3b044962c48fe313905877a96b5d0894a5404f6f\n\n/* eslint node-core/documented-errors: \"error\" */\n\n/* eslint node-core/alphabetize-errors: \"error\" */\n\n/* eslint node-core/prefer-util-format-errors: \"error\" */\n'use strict'; // The whole point behind this internal module is to allow Node.js to no\n// longer be forced to treat every error message change as a semver-major\n// change. The NodeError classes here all expose a `code` property whose\n// value statically and permanently identifies the error. While the error\n// message may change, the code should not.\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar codes = {}; // Lazy loaded\n\nvar assert;\nvar util;\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inherits(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      var _this;\n\n      _classCallCheck(this, NodeError);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(NodeError).call(this, getMessage(arg1, arg2, arg3)));\n      _this.code = code;\n      return _this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_AMBIGUOUS_ARGUMENT', 'The \"%s\" argument is ambiguous. %s', TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  if (assert === undefined) assert = require('../assert');\n  assert(typeof name === 'string', \"'name' must be a string\"); // determiner: 'must be' or 'must not be'\n\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } // TODO(BridgeAR): Improve the output by showing `null` and similar.\n\n\n  msg += \". Received type \".concat(_typeof(actual));\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_VALUE', function (name, value) {\n  var reason = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'is invalid';\n  if (util === undefined) util = require('util/');\n  var inspected = util.inspect(value);\n\n  if (inspected.length > 128) {\n    inspected = \"\".concat(inspected.slice(0, 128), \"...\");\n  }\n\n  return \"The argument '\".concat(name, \"' \").concat(reason, \". Received \").concat(inspected);\n}, TypeError, RangeError);\ncreateErrorType('ERR_INVALID_RETURN_VALUE', function (input, name, value) {\n  var type;\n\n  if (value && value.constructor && value.constructor.name) {\n    type = \"instance of \".concat(value.constructor.name);\n  } else {\n    type = \"type \".concat(_typeof(value));\n  }\n\n  return \"Expected \".concat(input, \" to be returned from the \\\"\").concat(name, \"\\\"\") + \" function but got \".concat(type, \".\");\n}, TypeError);\ncreateErrorType('ERR_MISSING_ARGS', function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (assert === undefined) assert = require('../assert');\n  assert(args.length > 0, 'At least one arg needs to be specified');\n  var msg = 'The ';\n  var len = args.length;\n  args = args.map(function (a) {\n    return \"\\\"\".concat(a, \"\\\"\");\n  });\n\n  switch (len) {\n    case 1:\n      msg += \"\".concat(args[0], \" argument\");\n      break;\n\n    case 2:\n      msg += \"\".concat(args[0], \" and \").concat(args[1], \" arguments\");\n      break;\n\n    default:\n      msg += args.slice(0, len - 1).join(', ');\n      msg += \", and \".concat(args[len - 1], \" arguments\");\n      break;\n  }\n\n  return \"\".concat(msg, \" must be specified\");\n}, TypeError);\nmodule.exports.codes = codes;","// Currently in sync with Node.js lib/internal/util/comparisons.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n'use strict';\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar regexFlagsSupported = /a/g.flags !== undefined;\n\nvar arrayFromSet = function arrayFromSet(set) {\n  var array = [];\n  set.forEach(function (value) {\n    return array.push(value);\n  });\n  return array;\n};\n\nvar arrayFromMap = function arrayFromMap(map) {\n  var array = [];\n  map.forEach(function (value, key) {\n    return array.push([key, value]);\n  });\n  return array;\n};\n\nvar objectIs = Object.is ? Object.is : require('object-is');\nvar objectGetOwnPropertySymbols = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function () {\n  return [];\n};\nvar numberIsNaN = Number.isNaN ? Number.isNaN : require('is-nan');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\nvar propertyIsEnumerable = uncurryThis(Object.prototype.propertyIsEnumerable);\nvar objectToString = uncurryThis(Object.prototype.toString);\n\nvar _require$types = require('util/').types,\n    isAnyArrayBuffer = _require$types.isAnyArrayBuffer,\n    isArrayBufferView = _require$types.isArrayBufferView,\n    isDate = _require$types.isDate,\n    isMap = _require$types.isMap,\n    isRegExp = _require$types.isRegExp,\n    isSet = _require$types.isSet,\n    isNativeError = _require$types.isNativeError,\n    isBoxedPrimitive = _require$types.isBoxedPrimitive,\n    isNumberObject = _require$types.isNumberObject,\n    isStringObject = _require$types.isStringObject,\n    isBooleanObject = _require$types.isBooleanObject,\n    isBigIntObject = _require$types.isBigIntObject,\n    isSymbolObject = _require$types.isSymbolObject,\n    isFloat32Array = _require$types.isFloat32Array,\n    isFloat64Array = _require$types.isFloat64Array;\n\nfunction isNonIndex(key) {\n  if (key.length === 0 || key.length > 10) return true;\n\n  for (var i = 0; i < key.length; i++) {\n    var code = key.charCodeAt(i);\n    if (code < 48 || code > 57) return true;\n  } // The maximum size for an array is 2 ** 32 -1.\n\n\n  return key.length === 10 && key >= Math.pow(2, 32);\n}\n\nfunction getOwnNonIndexProperties(value) {\n  return Object.keys(value).filter(isNonIndex).concat(objectGetOwnPropertySymbols(value).filter(Object.prototype.propertyIsEnumerable.bind(value)));\n} // Taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n\n  if (y < x) {\n    return 1;\n  }\n\n  return 0;\n}\n\nvar ONLY_ENUMERABLE = undefined;\nvar kStrict = true;\nvar kLoose = false;\nvar kNoIterator = 0;\nvar kIsArray = 1;\nvar kIsSet = 2;\nvar kIsMap = 3; // Check if they have the same source and flags\n\nfunction areSimilarRegExps(a, b) {\n  return regexFlagsSupported ? a.source === b.source && a.flags === b.flags : RegExp.prototype.toString.call(a) === RegExp.prototype.toString.call(b);\n}\n\nfunction areSimilarFloatArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n\n  for (var offset = 0; offset < a.byteLength; offset++) {\n    if (a[offset] !== b[offset]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction areSimilarTypedArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n\n  return compare(new Uint8Array(a.buffer, a.byteOffset, a.byteLength), new Uint8Array(b.buffer, b.byteOffset, b.byteLength)) === 0;\n}\n\nfunction areEqualArrayBuffers(buf1, buf2) {\n  return buf1.byteLength === buf2.byteLength && compare(new Uint8Array(buf1), new Uint8Array(buf2)) === 0;\n}\n\nfunction isEqualBoxedPrimitive(val1, val2) {\n  if (isNumberObject(val1)) {\n    return isNumberObject(val2) && objectIs(Number.prototype.valueOf.call(val1), Number.prototype.valueOf.call(val2));\n  }\n\n  if (isStringObject(val1)) {\n    return isStringObject(val2) && String.prototype.valueOf.call(val1) === String.prototype.valueOf.call(val2);\n  }\n\n  if (isBooleanObject(val1)) {\n    return isBooleanObject(val2) && Boolean.prototype.valueOf.call(val1) === Boolean.prototype.valueOf.call(val2);\n  }\n\n  if (isBigIntObject(val1)) {\n    return isBigIntObject(val2) && BigInt.prototype.valueOf.call(val1) === BigInt.prototype.valueOf.call(val2);\n  }\n\n  return isSymbolObject(val2) && Symbol.prototype.valueOf.call(val1) === Symbol.prototype.valueOf.call(val2);\n} // Notes: Type tags are historical [[Class]] properties that can be set by\n// FunctionTemplate::SetClassName() in C++ or Symbol.toStringTag in JS\n// and retrieved using Object.prototype.toString.call(obj) in JS\n// See https://tc39.github.io/ecma262/#sec-object.prototype.tostring\n// for a list of tags pre-defined in the spec.\n// There are some unspecified tags in the wild too (e.g. typed array tags).\n// Since tags can be altered, they only serve fast failures\n//\n// Typed arrays and buffers are checked by comparing the content in their\n// underlying ArrayBuffer. This optimization requires that it's\n// reasonable to interpret their underlying memory in the same way,\n// which is checked by comparing their type tags.\n// (e.g. a Uint8Array and a Uint16Array with the same memory content\n// could still be different because they will be interpreted differently).\n//\n// For strict comparison, objects should have\n// a) The same built-in type tags\n// b) The same prototypes.\n\n\nfunction innerDeepEqual(val1, val2, strict, memos) {\n  // All identical values are equivalent, as determined by ===.\n  if (val1 === val2) {\n    if (val1 !== 0) return true;\n    return strict ? objectIs(val1, val2) : true;\n  } // Check more closely if val1 and val2 are equal.\n\n\n  if (strict) {\n    if (_typeof(val1) !== 'object') {\n      return typeof val1 === 'number' && numberIsNaN(val1) && numberIsNaN(val2);\n    }\n\n    if (_typeof(val2) !== 'object' || val1 === null || val2 === null) {\n      return false;\n    }\n\n    if (Object.getPrototypeOf(val1) !== Object.getPrototypeOf(val2)) {\n      return false;\n    }\n  } else {\n    if (val1 === null || _typeof(val1) !== 'object') {\n      if (val2 === null || _typeof(val2) !== 'object') {\n        // eslint-disable-next-line eqeqeq\n        return val1 == val2;\n      }\n\n      return false;\n    }\n\n    if (val2 === null || _typeof(val2) !== 'object') {\n      return false;\n    }\n  }\n\n  var val1Tag = objectToString(val1);\n  var val2Tag = objectToString(val2);\n\n  if (val1Tag !== val2Tag) {\n    return false;\n  }\n\n  if (Array.isArray(val1)) {\n    // Check for sparse arrays and general fast path\n    if (val1.length !== val2.length) {\n      return false;\n    }\n\n    var keys1 = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n    var keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kIsArray, keys1);\n  } // [browserify] This triggers on certain types in IE (Map/Set) so we don't\n  // wan't to early return out of the rest of the checks. However we can check\n  // if the second value is one of these values and the first isn't.\n\n\n  if (val1Tag === '[object Object]') {\n    // return keyCheck(val1, val2, strict, memos, kNoIterator);\n    if (!isMap(val1) && isMap(val2) || !isSet(val1) && isSet(val2)) {\n      return false;\n    }\n  }\n\n  if (isDate(val1)) {\n    if (!isDate(val2) || Date.prototype.getTime.call(val1) !== Date.prototype.getTime.call(val2)) {\n      return false;\n    }\n  } else if (isRegExp(val1)) {\n    if (!isRegExp(val2) || !areSimilarRegExps(val1, val2)) {\n      return false;\n    }\n  } else if (isNativeError(val1) || val1 instanceof Error) {\n    // Do not compare the stack as it might differ even though the error itself\n    // is otherwise identical.\n    if (val1.message !== val2.message || val1.name !== val2.name) {\n      return false;\n    }\n  } else if (isArrayBufferView(val1)) {\n    if (!strict && (isFloat32Array(val1) || isFloat64Array(val1))) {\n      if (!areSimilarFloatArrays(val1, val2)) {\n        return false;\n      }\n    } else if (!areSimilarTypedArrays(val1, val2)) {\n      return false;\n    } // Buffer.compare returns true, so val1.length === val2.length. If they both\n    // only contain numeric keys, we don't need to exam further than checking\n    // the symbols.\n\n\n    var _keys = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n\n    var _keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n\n    if (_keys.length !== _keys2.length) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kNoIterator, _keys);\n  } else if (isSet(val1)) {\n    if (!isSet(val2) || val1.size !== val2.size) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kIsSet);\n  } else if (isMap(val1)) {\n    if (!isMap(val2) || val1.size !== val2.size) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kIsMap);\n  } else if (isAnyArrayBuffer(val1)) {\n    if (!areEqualArrayBuffers(val1, val2)) {\n      return false;\n    }\n  } else if (isBoxedPrimitive(val1) && !isEqualBoxedPrimitive(val1, val2)) {\n    return false;\n  }\n\n  return keyCheck(val1, val2, strict, memos, kNoIterator);\n}\n\nfunction getEnumerables(val, keys) {\n  return keys.filter(function (k) {\n    return propertyIsEnumerable(val, k);\n  });\n}\n\nfunction keyCheck(val1, val2, strict, memos, iterationType, aKeys) {\n  // For all remaining Object pairs, including Array, objects and Maps,\n  // equivalence is determined by having:\n  // a) The same number of owned enumerable properties\n  // b) The same set of keys/indexes (although not necessarily the same order)\n  // c) Equivalent values for every corresponding key/index\n  // d) For Sets and Maps, equal contents\n  // Note: this accounts for both named and indexed properties on Arrays.\n  if (arguments.length === 5) {\n    aKeys = Object.keys(val1);\n    var bKeys = Object.keys(val2); // The pair must have the same number of owned properties.\n\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n  } // Cheap key test\n\n\n  var i = 0;\n\n  for (; i < aKeys.length; i++) {\n    if (!hasOwnProperty(val2, aKeys[i])) {\n      return false;\n    }\n  }\n\n  if (strict && arguments.length === 5) {\n    var symbolKeysA = objectGetOwnPropertySymbols(val1);\n\n    if (symbolKeysA.length !== 0) {\n      var count = 0;\n\n      for (i = 0; i < symbolKeysA.length; i++) {\n        var key = symbolKeysA[i];\n\n        if (propertyIsEnumerable(val1, key)) {\n          if (!propertyIsEnumerable(val2, key)) {\n            return false;\n          }\n\n          aKeys.push(key);\n          count++;\n        } else if (propertyIsEnumerable(val2, key)) {\n          return false;\n        }\n      }\n\n      var symbolKeysB = objectGetOwnPropertySymbols(val2);\n\n      if (symbolKeysA.length !== symbolKeysB.length && getEnumerables(val2, symbolKeysB).length !== count) {\n        return false;\n      }\n    } else {\n      var _symbolKeysB = objectGetOwnPropertySymbols(val2);\n\n      if (_symbolKeysB.length !== 0 && getEnumerables(val2, _symbolKeysB).length !== 0) {\n        return false;\n      }\n    }\n  }\n\n  if (aKeys.length === 0 && (iterationType === kNoIterator || iterationType === kIsArray && val1.length === 0 || val1.size === 0)) {\n    return true;\n  } // Use memos to handle cycles.\n\n\n  if (memos === undefined) {\n    memos = {\n      val1: new Map(),\n      val2: new Map(),\n      position: 0\n    };\n  } else {\n    // We prevent up to two map.has(x) calls by directly retrieving the value\n    // and checking for undefined. The map can only contain numbers, so it is\n    // safe to check for undefined only.\n    var val2MemoA = memos.val1.get(val1);\n\n    if (val2MemoA !== undefined) {\n      var val2MemoB = memos.val2.get(val2);\n\n      if (val2MemoB !== undefined) {\n        return val2MemoA === val2MemoB;\n      }\n    }\n\n    memos.position++;\n  }\n\n  memos.val1.set(val1, memos.position);\n  memos.val2.set(val2, memos.position);\n  var areEq = objEquiv(val1, val2, strict, aKeys, memos, iterationType);\n  memos.val1.delete(val1);\n  memos.val2.delete(val2);\n  return areEq;\n}\n\nfunction setHasEqualElement(set, val1, strict, memo) {\n  // Go looking.\n  var setValues = arrayFromSet(set);\n\n  for (var i = 0; i < setValues.length; i++) {\n    var val2 = setValues[i];\n\n    if (innerDeepEqual(val1, val2, strict, memo)) {\n      // Remove the matching element to make sure we do not check that again.\n      set.delete(val2);\n      return true;\n    }\n  }\n\n  return false;\n} // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Loose_equality_using\n// Sadly it is not possible to detect corresponding values properly in case the\n// type is a string, number, bigint or boolean. The reason is that those values\n// can match lots of different string values (e.g., 1n == '+00001').\n\n\nfunction findLooseMatchingPrimitives(prim) {\n  switch (_typeof(prim)) {\n    case 'undefined':\n      return null;\n\n    case 'object':\n      // Only pass in null as object!\n      return undefined;\n\n    case 'symbol':\n      return false;\n\n    case 'string':\n      prim = +prim;\n    // Loose equal entries exist only if the string is possible to convert to\n    // a regular number and not NaN.\n    // Fall through\n\n    case 'number':\n      if (numberIsNaN(prim)) {\n        return false;\n      }\n\n  }\n\n  return true;\n}\n\nfunction setMightHaveLoosePrim(a, b, prim) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) return altValue;\n  return b.has(altValue) && !a.has(altValue);\n}\n\nfunction mapMightHaveLoosePrim(a, b, prim, item, memo) {\n  var altValue = findLooseMatchingPrimitives(prim);\n\n  if (altValue != null) {\n    return altValue;\n  }\n\n  var curB = b.get(altValue);\n\n  if (curB === undefined && !b.has(altValue) || !innerDeepEqual(item, curB, false, memo)) {\n    return false;\n  }\n\n  return !a.has(altValue) && innerDeepEqual(item, curB, false, memo);\n}\n\nfunction setEquiv(a, b, strict, memo) {\n  // This is a lazily initiated Set of entries which have to be compared\n  // pairwise.\n  var set = null;\n  var aValues = arrayFromSet(a);\n\n  for (var i = 0; i < aValues.length; i++) {\n    var val = aValues[i]; // Note: Checking for the objects first improves the performance for object\n    // heavy sets but it is a minor slow down for primitives. As they are fast\n    // to check this improves the worst case scenario instead.\n\n    if (_typeof(val) === 'object' && val !== null) {\n      if (set === null) {\n        set = new Set();\n      } // If the specified value doesn't exist in the second set its an not null\n      // object (or non strict only: a not matching primitive) we'll need to go\n      // hunting for something thats deep-(strict-)equal to it. To make this\n      // O(n log n) complexity we have to copy these values in a new set first.\n\n\n      set.add(val);\n    } else if (!b.has(val)) {\n      if (strict) return false; // Fast path to detect missing string, symbol, undefined and null values.\n\n      if (!setMightHaveLoosePrim(a, b, val)) {\n        return false;\n      }\n\n      if (set === null) {\n        set = new Set();\n      }\n\n      set.add(val);\n    }\n  }\n\n  if (set !== null) {\n    var bValues = arrayFromSet(b);\n\n    for (var _i = 0; _i < bValues.length; _i++) {\n      var _val = bValues[_i]; // We have to check if a primitive value is already\n      // matching and only if it's not, go hunting for it.\n\n      if (_typeof(_val) === 'object' && _val !== null) {\n        if (!setHasEqualElement(set, _val, strict, memo)) return false;\n      } else if (!strict && !a.has(_val) && !setHasEqualElement(set, _val, strict, memo)) {\n        return false;\n      }\n    }\n\n    return set.size === 0;\n  }\n\n  return true;\n}\n\nfunction mapHasEqualEntry(set, map, key1, item1, strict, memo) {\n  // To be able to handle cases like:\n  //   Map([[{}, 'a'], [{}, 'b']]) vs Map([[{}, 'b'], [{}, 'a']])\n  // ... we need to consider *all* matching keys, not just the first we find.\n  var setValues = arrayFromSet(set);\n\n  for (var i = 0; i < setValues.length; i++) {\n    var key2 = setValues[i];\n\n    if (innerDeepEqual(key1, key2, strict, memo) && innerDeepEqual(item1, map.get(key2), strict, memo)) {\n      set.delete(key2);\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction mapEquiv(a, b, strict, memo) {\n  var set = null;\n  var aEntries = arrayFromMap(a);\n\n  for (var i = 0; i < aEntries.length; i++) {\n    var _aEntries$i = _slicedToArray(aEntries[i], 2),\n        key = _aEntries$i[0],\n        item1 = _aEntries$i[1];\n\n    if (_typeof(key) === 'object' && key !== null) {\n      if (set === null) {\n        set = new Set();\n      }\n\n      set.add(key);\n    } else {\n      // By directly retrieving the value we prevent another b.has(key) check in\n      // almost all possible cases.\n      var item2 = b.get(key);\n\n      if (item2 === undefined && !b.has(key) || !innerDeepEqual(item1, item2, strict, memo)) {\n        if (strict) return false; // Fast path to detect missing string, symbol, undefined and null\n        // keys.\n\n        if (!mapMightHaveLoosePrim(a, b, key, item1, memo)) return false;\n\n        if (set === null) {\n          set = new Set();\n        }\n\n        set.add(key);\n      }\n    }\n  }\n\n  if (set !== null) {\n    var bEntries = arrayFromMap(b);\n\n    for (var _i2 = 0; _i2 < bEntries.length; _i2++) {\n      var _bEntries$_i = _slicedToArray(bEntries[_i2], 2),\n          key = _bEntries$_i[0],\n          item = _bEntries$_i[1];\n\n      if (_typeof(key) === 'object' && key !== null) {\n        if (!mapHasEqualEntry(set, a, key, item, strict, memo)) return false;\n      } else if (!strict && (!a.has(key) || !innerDeepEqual(a.get(key), item, false, memo)) && !mapHasEqualEntry(set, a, key, item, false, memo)) {\n        return false;\n      }\n    }\n\n    return set.size === 0;\n  }\n\n  return true;\n}\n\nfunction objEquiv(a, b, strict, keys, memos, iterationType) {\n  // Sets and maps don't have their entries accessible via normal object\n  // properties.\n  var i = 0;\n\n  if (iterationType === kIsSet) {\n    if (!setEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsMap) {\n    if (!mapEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsArray) {\n    for (; i < a.length; i++) {\n      if (hasOwnProperty(a, i)) {\n        if (!hasOwnProperty(b, i) || !innerDeepEqual(a[i], b[i], strict, memos)) {\n          return false;\n        }\n      } else if (hasOwnProperty(b, i)) {\n        return false;\n      } else {\n        // Array is sparse.\n        var keysA = Object.keys(a);\n\n        for (; i < keysA.length; i++) {\n          var key = keysA[i];\n\n          if (!hasOwnProperty(b, key) || !innerDeepEqual(a[key], b[key], strict, memos)) {\n            return false;\n          }\n        }\n\n        if (keysA.length !== Object.keys(b).length) {\n          return false;\n        }\n\n        return true;\n      }\n    }\n  } // The pair must have equivalent values for every corresponding key.\n  // Possibly expensive deep test:\n\n\n  for (i = 0; i < keys.length; i++) {\n    var _key = keys[i];\n\n    if (!innerDeepEqual(a[_key], b[_key], strict, memos)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isDeepEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kLoose);\n}\n\nfunction isDeepStrictEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kStrict);\n}\n\nmodule.exports = {\n  isDeepEqual: isDeepEqual,\n  isDeepStrictEqual: isDeepStrictEqual\n};","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n","'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = $reflectApply(bind, $call, arguments);\n\tif ($gOPD && $defineProperty) {\n\t\tvar desc = $gOPD(func, 'length');\n\t\tif (desc.configurable) {\n\t\t\t// original length, plus the receiver, minus any additional arguments (after the receiver)\n\t\t\t$defineProperty(\n\t\t\t\tfunc,\n\t\t\t\t'length',\n\t\t\t\t{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }\n\t\t\t);\n\t\t}\n\t}\n\treturn func;\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n","'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar origDefineProperty = Object.defineProperty;\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar hasPropertyDescriptors = require('has-property-descriptors')();\n\nvar supportsDescriptors = origDefineProperty && hasPropertyDescriptors;\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object && (!isFunction(predicate) || !predicate())) {\n\t\treturn;\n\t}\n\tif (supportsDescriptors) {\n\t\torigDefineProperty(object, name, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: value,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\tobject[name] = value; // eslint-disable-line no-param-reassign\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n","/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n'use strict';\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('has');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\n\nvar hasPropertyDescriptors = function hasPropertyDescriptors() {\n\tif ($defineProperty) {\n\t\ttry {\n\t\t\t$defineProperty({}, 'a', { value: 1 });\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\t// IE 8 has a broken defineProperty\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn false;\n};\n\nhasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {\n\t// node v0.6 has a bug where array lengths can be Set but not Defined\n\tif (!hasPropertyDescriptors()) {\n\t\treturn null;\n\t}\n\ttry {\n\t\treturn $defineProperty([], 'length', { value: 1 }).length !== 1;\n\t} catch (e) {\n\t\t// In Firefox 4-22, defining length on an array throws an exception.\n\t\treturn true;\n\t}\n};\n\nmodule.exports = hasPropertyDescriptors;\n","'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nvar hasSymbols = require('has-symbols/shams');\n\nmodule.exports = function hasToStringTagShams() {\n\treturn hasSymbols() && !!Symbol.toStringTag;\n};\n","'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn $toString(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\t$toString(value) !== '[object Array]' &&\n\t\t$toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n","'use strict';\n\nvar fnToStr = Function.prototype.toString;\nvar reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;\nvar badArrayLike;\nvar isCallableMarker;\nif (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {\n\ttry {\n\t\tbadArrayLike = Object.defineProperty({}, 'length', {\n\t\t\tget: function () {\n\t\t\t\tthrow isCallableMarker;\n\t\t\t}\n\t\t});\n\t\tisCallableMarker = {};\n\t\t// eslint-disable-next-line no-throw-literal\n\t\treflectApply(function () { throw 42; }, null, badArrayLike);\n\t} catch (_) {\n\t\tif (_ !== isCallableMarker) {\n\t\t\treflectApply = null;\n\t\t}\n\t}\n} else {\n\treflectApply = null;\n}\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`\n/* globals document: false */\nvar documentDotAll = typeof document === 'object' && typeof document.all === 'undefined' && document.all !== undefined ? document.all : {};\n\nmodule.exports = reflectApply\n\t? function isCallable(value) {\n\t\tif (value === documentDotAll) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\tif (typeof value === 'function' && !value.prototype) { return true; }\n\t\ttry {\n\t\t\treflectApply(value, null, badArrayLike);\n\t\t} catch (e) {\n\t\t\tif (e !== isCallableMarker) { return false; }\n\t\t}\n\t\treturn !isES6ClassFn(value);\n\t}\n\t: function isCallable(value) {\n\t\tif (value === documentDotAll) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\tif (typeof value === 'function' && !value.prototype) { return true; }\n\t\tif (hasToStringTag) { return tryFunctionObject(value); }\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tvar strClass = toStr.call(value);\n\t\treturn strClass === fnClass || strClass === genClass;\n\t};\n","'use strict';\n\nvar toStr = Object.prototype.toString;\nvar fnToStr = Function.prototype.toString;\nvar isFnRegex = /^\\s*(?:function)?\\*/;\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar getProto = Object.getPrototypeOf;\nvar getGeneratorFunc = function () { // eslint-disable-line consistent-return\n\tif (!hasToStringTag) {\n\t\treturn false;\n\t}\n\ttry {\n\t\treturn Function('return function*() {}')();\n\t} catch (e) {\n\t}\n};\nvar GeneratorFunction;\n\nmodule.exports = function isGeneratorFunction(fn) {\n\tif (typeof fn !== 'function') {\n\t\treturn false;\n\t}\n\tif (isFnRegex.test(fnToStr.call(fn))) {\n\t\treturn true;\n\t}\n\tif (!hasToStringTag) {\n\t\tvar str = toStr.call(fn);\n\t\treturn str === '[object GeneratorFunction]';\n\t}\n\tif (!getProto) {\n\t\treturn false;\n\t}\n\tif (typeof GeneratorFunction === 'undefined') {\n\t\tvar generatorFunc = getGeneratorFunc();\n\t\tGeneratorFunction = generatorFunc ? getProto(generatorFunc) : false;\n\t}\n\treturn getProto(fn) === GeneratorFunction;\n};\n","'use strict';\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function isNaN(value) {\n\treturn value !== value;\n};\n","'use strict';\n\nvar callBind = require('call-bind');\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Number);\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\tif (Number.isNaN && Number.isNaN(NaN) && !Number.isNaN('a')) {\n\t\treturn Number.isNaN;\n\t}\n\treturn implementation;\n};\n","'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function shimNumberIsNaN() {\n\tvar polyfill = getPolyfill();\n\tdefine(Number, { isNaN: polyfill }, {\n\t\tisNaN: function testIsNaN() {\n\t\t\treturn Number.isNaN !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n","'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar gOPD = require('es-abstract/helpers/getOwnPropertyDescriptor');\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tif (Symbol.toStringTag in arr) {\n\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor) {\n\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar anyTrue = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!anyTrue) {\n\t\t\ttry {\n\t\t\t\tanyTrue = getter.call(value) === typedArray;\n\t\t\t} catch (e) { /**/ }\n\t\t}\n\t});\n\treturn anyTrue;\n};\n\nmodule.exports = function isTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) {\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\treturn $indexOf(typedArrays, tag) > -1;\n\t}\n\tif (!gOPD) { return false; }\n\treturn tryTypedArrays(value);\n};\n","'use strict';\n\nvar numberIsNaN = function (value) {\n\treturn value !== value;\n};\n\nmodule.exports = function is(a, b) {\n\tif (a === 0 && b === 0) {\n\t\treturn 1 / a === 1 / b;\n\t}\n\tif (a === b) {\n\t\treturn true;\n\t}\n\tif (numberIsNaN(a) && numberIsNaN(b)) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\n","'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Object);\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn typeof Object.is === 'function' ? Object.is : implementation;\n};\n","'use strict';\n\nvar getPolyfill = require('./polyfill');\nvar define = require('define-properties');\n\nmodule.exports = function shimObjectIs() {\n\tvar polyfill = getPolyfill();\n\tdefine(Object, { is: polyfill }, {\n\t\tis: function testObjectIs() {\n\t\t\treturn Object.is !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Currently in sync with Node.js lib/internal/util/types.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nvar isArgumentsObject = require('is-arguments');\nvar isGeneratorFunction = require('is-generator-function');\nvar whichTypedArray = require('which-typed-array');\nvar isTypedArray = require('is-typed-array');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar BigIntSupported = typeof BigInt !== 'undefined';\nvar SymbolSupported = typeof Symbol !== 'undefined';\n\nvar ObjectToString = uncurryThis(Object.prototype.toString);\n\nvar numberValue = uncurryThis(Number.prototype.valueOf);\nvar stringValue = uncurryThis(String.prototype.valueOf);\nvar booleanValue = uncurryThis(Boolean.prototype.valueOf);\n\nif (BigIntSupported) {\n  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n}\n\nif (SymbolSupported) {\n  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n}\n\nfunction checkBoxedPrimitive(value, prototypeValueOf) {\n  if (typeof value !== 'object') {\n    return false;\n  }\n  try {\n    prototypeValueOf(value);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n\nexports.isArgumentsObject = isArgumentsObject;\nexports.isGeneratorFunction = isGeneratorFunction;\nexports.isTypedArray = isTypedArray;\n\n// Taken from here and modified for better browser support\n// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\nfunction isPromise(input) {\n\treturn (\n\t\t(\n\t\t\ttypeof Promise !== 'undefined' &&\n\t\t\tinput instanceof Promise\n\t\t) ||\n\t\t(\n\t\t\tinput !== null &&\n\t\t\ttypeof input === 'object' &&\n\t\t\ttypeof input.then === 'function' &&\n\t\t\ttypeof input.catch === 'function'\n\t\t)\n\t);\n}\nexports.isPromise = isPromise;\n\nfunction isArrayBufferView(value) {\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    return ArrayBuffer.isView(value);\n  }\n\n  return (\n    isTypedArray(value) ||\n    isDataView(value)\n  );\n}\nexports.isArrayBufferView = isArrayBufferView;\n\n\nfunction isUint8Array(value) {\n  return whichTypedArray(value) === 'Uint8Array';\n}\nexports.isUint8Array = isUint8Array;\n\nfunction isUint8ClampedArray(value) {\n  return whichTypedArray(value) === 'Uint8ClampedArray';\n}\nexports.isUint8ClampedArray = isUint8ClampedArray;\n\nfunction isUint16Array(value) {\n  return whichTypedArray(value) === 'Uint16Array';\n}\nexports.isUint16Array = isUint16Array;\n\nfunction isUint32Array(value) {\n  return whichTypedArray(value) === 'Uint32Array';\n}\nexports.isUint32Array = isUint32Array;\n\nfunction isInt8Array(value) {\n  return whichTypedArray(value) === 'Int8Array';\n}\nexports.isInt8Array = isInt8Array;\n\nfunction isInt16Array(value) {\n  return whichTypedArray(value) === 'Int16Array';\n}\nexports.isInt16Array = isInt16Array;\n\nfunction isInt32Array(value) {\n  return whichTypedArray(value) === 'Int32Array';\n}\nexports.isInt32Array = isInt32Array;\n\nfunction isFloat32Array(value) {\n  return whichTypedArray(value) === 'Float32Array';\n}\nexports.isFloat32Array = isFloat32Array;\n\nfunction isFloat64Array(value) {\n  return whichTypedArray(value) === 'Float64Array';\n}\nexports.isFloat64Array = isFloat64Array;\n\nfunction isBigInt64Array(value) {\n  return whichTypedArray(value) === 'BigInt64Array';\n}\nexports.isBigInt64Array = isBigInt64Array;\n\nfunction isBigUint64Array(value) {\n  return whichTypedArray(value) === 'BigUint64Array';\n}\nexports.isBigUint64Array = isBigUint64Array;\n\nfunction isMapToString(value) {\n  return ObjectToString(value) === '[object Map]';\n}\nisMapToString.working = (\n  typeof Map !== 'undefined' &&\n  isMapToString(new Map())\n);\n\nfunction isMap(value) {\n  if (typeof Map === 'undefined') {\n    return false;\n  }\n\n  return isMapToString.working\n    ? isMapToString(value)\n    : value instanceof Map;\n}\nexports.isMap = isMap;\n\nfunction isSetToString(value) {\n  return ObjectToString(value) === '[object Set]';\n}\nisSetToString.working = (\n  typeof Set !== 'undefined' &&\n  isSetToString(new Set())\n);\nfunction isSet(value) {\n  if (typeof Set === 'undefined') {\n    return false;\n  }\n\n  return isSetToString.working\n    ? isSetToString(value)\n    : value instanceof Set;\n}\nexports.isSet = isSet;\n\nfunction isWeakMapToString(value) {\n  return ObjectToString(value) === '[object WeakMap]';\n}\nisWeakMapToString.working = (\n  typeof WeakMap !== 'undefined' &&\n  isWeakMapToString(new WeakMap())\n);\nfunction isWeakMap(value) {\n  if (typeof WeakMap === 'undefined') {\n    return false;\n  }\n\n  return isWeakMapToString.working\n    ? isWeakMapToString(value)\n    : value instanceof WeakMap;\n}\nexports.isWeakMap = isWeakMap;\n\nfunction isWeakSetToString(value) {\n  return ObjectToString(value) === '[object WeakSet]';\n}\nisWeakSetToString.working = (\n  typeof WeakSet !== 'undefined' &&\n  isWeakSetToString(new WeakSet())\n);\nfunction isWeakSet(value) {\n  return isWeakSetToString(value);\n}\nexports.isWeakSet = isWeakSet;\n\nfunction isArrayBufferToString(value) {\n  return ObjectToString(value) === '[object ArrayBuffer]';\n}\nisArrayBufferToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  isArrayBufferToString(new ArrayBuffer())\n);\nfunction isArrayBuffer(value) {\n  if (typeof ArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  return isArrayBufferToString.working\n    ? isArrayBufferToString(value)\n    : value instanceof ArrayBuffer;\n}\nexports.isArrayBuffer = isArrayBuffer;\n\nfunction isDataViewToString(value) {\n  return ObjectToString(value) === '[object DataView]';\n}\nisDataViewToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  typeof DataView !== 'undefined' &&\n  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))\n);\nfunction isDataView(value) {\n  if (typeof DataView === 'undefined') {\n    return false;\n  }\n\n  return isDataViewToString.working\n    ? isDataViewToString(value)\n    : value instanceof DataView;\n}\nexports.isDataView = isDataView;\n\n// Store a copy of SharedArrayBuffer in case it's deleted elsewhere\nvar SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;\nfunction isSharedArrayBufferToString(value) {\n  return ObjectToString(value) === '[object SharedArrayBuffer]';\n}\nfunction isSharedArrayBuffer(value) {\n  if (typeof SharedArrayBufferCopy === 'undefined') {\n    return false;\n  }\n\n  if (typeof isSharedArrayBufferToString.working === 'undefined') {\n    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());\n  }\n\n  return isSharedArrayBufferToString.working\n    ? isSharedArrayBufferToString(value)\n    : value instanceof SharedArrayBufferCopy;\n}\nexports.isSharedArrayBuffer = isSharedArrayBuffer;\n\nfunction isAsyncFunction(value) {\n  return ObjectToString(value) === '[object AsyncFunction]';\n}\nexports.isAsyncFunction = isAsyncFunction;\n\nfunction isMapIterator(value) {\n  return ObjectToString(value) === '[object Map Iterator]';\n}\nexports.isMapIterator = isMapIterator;\n\nfunction isSetIterator(value) {\n  return ObjectToString(value) === '[object Set Iterator]';\n}\nexports.isSetIterator = isSetIterator;\n\nfunction isGeneratorObject(value) {\n  return ObjectToString(value) === '[object Generator]';\n}\nexports.isGeneratorObject = isGeneratorObject;\n\nfunction isWebAssemblyCompiledModule(value) {\n  return ObjectToString(value) === '[object WebAssembly.Module]';\n}\nexports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n\nfunction isNumberObject(value) {\n  return checkBoxedPrimitive(value, numberValue);\n}\nexports.isNumberObject = isNumberObject;\n\nfunction isStringObject(value) {\n  return checkBoxedPrimitive(value, stringValue);\n}\nexports.isStringObject = isStringObject;\n\nfunction isBooleanObject(value) {\n  return checkBoxedPrimitive(value, booleanValue);\n}\nexports.isBooleanObject = isBooleanObject;\n\nfunction isBigIntObject(value) {\n  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n}\nexports.isBigIntObject = isBigIntObject;\n\nfunction isSymbolObject(value) {\n  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n}\nexports.isSymbolObject = isSymbolObject;\n\nfunction isBoxedPrimitive(value) {\n  return (\n    isNumberObject(value) ||\n    isStringObject(value) ||\n    isBooleanObject(value) ||\n    isBigIntObject(value) ||\n    isSymbolObject(value)\n  );\n}\nexports.isBoxedPrimitive = isBoxedPrimitive;\n\nfunction isAnyArrayBuffer(value) {\n  return typeof Uint8Array !== 'undefined' && (\n    isArrayBuffer(value) ||\n    isSharedArrayBuffer(value)\n  );\n}\nexports.isAnyArrayBuffer = isAnyArrayBuffer;\n\n['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {\n  Object.defineProperty(exports, method, {\n    enumerable: false,\n    value: function() {\n      throw new Error(method + ' is not supported in userland');\n    }\n  });\n});\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnvRegex = /^$/;\n\nif (process.env.NODE_DEBUG) {\n  var debugEnv = process.env.NODE_DEBUG;\n  debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&')\n    .replace(/\\*/g, '.*')\n    .replace(/,/g, '$|^')\n    .toUpperCase();\n  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');\n}\nexports.debuglog = function(set) {\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (debugEnvRegex.test(set)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexports.types = require('./support/types');\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\nexports.types.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\nexports.types.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\nexports.types.isNativeError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },\n            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar gOPD = require('es-abstract/helpers/getOwnPropertyDescriptor');\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tif (typeof g[typedArray] === 'function') {\n\t\t\tvar arr = new g[typedArray]();\n\t\t\tif (Symbol.toStringTag in arr) {\n\t\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\t\tif (!descriptor) {\n\t\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t\t}\n\t\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t\t}\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar foundName = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!foundName) {\n\t\t\ttry {\n\t\t\t\tvar name = getter.call(value);\n\t\t\t\tif (name === typedArray) {\n\t\t\t\t\tfoundName = name;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t}\n\t});\n\treturn foundName;\n};\n\nvar isTypedArray = require('is-typed-array');\n\nmodule.exports = function whichTypedArray(value) {\n\tif (!isTypedArray(value)) { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) { return $slice($toString(value), 8, -1); }\n\treturn tryTypedArrays(value);\n};\n","const os = require('os');\nconst fs = require('fs');\nconst path = require('path');\n\nconst rbql = require('./rbql_core/rbql-js/rbql.js');\nconst rbql_csv = require('./rbql_core/rbql-js/rbql_csv.js');\nconst csv_utils = require('./rbql_core/rbql-js/csv_utils.js');\n\nconst non_numeric_sentinel = -1;\nconst number_regex = /^([0-9]+)(\\.[0-9]+)?$/;\n\nclass AssertionError extends Error {}\n\nfunction assert(condition, message=null) {\n    if (!condition) {\n        if (!message) {\n            message = 'Assertion error';\n        }\n        throw new AssertionError(message);\n    }\n}\n\n\nfunction get_default_js_udf_content() {\n    let default_content = `// This file can be used to store RBQL UDFs. Example:\n    //\n    // function foo(value) {\n    //     return 'foo ' + String(value.length);\n    // }\n    // \n    // Functions defined in this file can be used in RBQL queries e.g. \n    // SELECT foo(a1), a2 WHERE foo(a3) != 'foo 5' LIMIT 10\n    //\n    // Don't forget to save this file after editing!\n    //\n    // Write your own functions bellow this line:\n    `.replace(new RegExp(/^  */, 'mg'), '');\n    return default_content;\n}\n\n\nfunction get_default_python_udf_content() {\n    let default_content = `# This file can be used to store RBQL UDFs. Example:\n    #\n    # def foo(value):\n    #     return 'foo ' + str(len(value))\n    # \n    # \n    # Functions defined in this file can be used in RBQL queries e.g. \n    # SELECT foo(a1), a2 WHERE foo(a3) != 'foo 5' LIMIT 10\n    #\n    # Don't forget to save this file after editing!\n    #\n    # Write your own functions bellow this line:\n    `.replace(new RegExp(/^  */, 'mg'), '');\n    return default_content;\n}\n\n\nfunction update_subcomponent_stats(field, is_first_line, max_field_components_lens) {\n    // Extract overall field length and length of integer and fractional parts of the field if it represents a number.\n    // Here `max_field_components_lens` is a tuple: (max_field_length, max_integer_part_length, max_fractional_part_length)\n    if (field.length > max_field_components_lens[0]) {\n        max_field_components_lens[0] = field.length;\n    }\n    if (max_field_components_lens[1] == non_numeric_sentinel) {\n        // Column is not a number, early return.\n        return;\n    }\n    let match_result = number_regex.exec(field);\n    if (match_result === null) {\n        if (!is_first_line && field.length) { // Checking field_length here allows numeric columns to have some of the fields empty.\n            // We only mark the column as non-header if we know that this is not a header line.\n            max_field_components_lens[1] = non_numeric_sentinel;\n            max_field_components_lens[2] = non_numeric_sentinel;\n        }\n        return;\n    }\n    let cur_integer_part_length = match_result[1].length;\n    max_field_components_lens[1] = Math.max(max_field_components_lens[1], cur_integer_part_length);\n    let cur_fractional_part_length = match_result[2] === undefined ? 0 : match_result[2].length;\n    max_field_components_lens[2] = Math.max(max_field_components_lens[2], cur_fractional_part_length);\n}\n\n\nfunction calc_column_stats(active_doc, delim, policy, comment_prefix) {\n    let column_stats = [];\n    let num_lines = active_doc.lineCount;\n    let is_first_line = true;\n    for (let lnum = 0; lnum < num_lines; lnum++) {\n        let line_text = active_doc.lineAt(lnum).text;\n        if (comment_prefix && line_text.startsWith(comment_prefix))\n            continue;\n        let [fields, warning] = csv_utils.smart_split(line_text, delim, policy, true);\n        if (warning) {\n            return [null, lnum + 1];\n        }\n        for (let fnum = 0; fnum < fields.length; fnum++) {\n            let field = fields[fnum].trim();\n            if (column_stats.length <= fnum) {\n                column_stats.push([0, 0, 0]);\n            }\n            update_subcomponent_stats(field, is_first_line, column_stats[fnum]);\n        }\n        is_first_line = false;\n    }\n    return [column_stats, null];\n}\n\n\nfunction adjust_column_stats(column_stats) {\n    // Ensure that numeric components max widths are consistent with non-numeric (header) width.\n    let adjusted_stats = [];\n    for (let column_stat of column_stats) {\n        if (column_stat[1] <= 0) {\n            column_stat[1] = -1;\n            column_stat[2] = -1;\n        }\n        if (column_stat[1] > 0) {\n            // The sum of integer and float parts can be bigger than the max width, e.g. here:\n            // value\n            // 0.12\n            // 1234\n            if (column_stat[1] + column_stat[2] > column_stat[0]) {\n                column_stat[0] = column_stat[1] + column_stat[2];\n            }\n            // This is needed when the header is wider than numeric components and/or their sum.\n            if (column_stat[0] - column_stat[2] > column_stat[1]) {\n                column_stat[1] = column_stat[0] - column_stat[2];\n            }\n            // Sanity check.\n            if (column_stat[0] != column_stat[1] + column_stat[2]) {\n                // Assertion Error, this can never happen.\n                return null;\n            }\n        }\n        adjusted_stats.push(column_stat);\n    }\n    return adjusted_stats;\n}\n\n\nfunction align_field(field, is_first_line, max_field_components_lens, is_last_column) {\n    // Align field, use Math.max() to avoid negative delta_length which can happen theorethically due to async doc edit.\n    const extra_readability_whitespace_length = 1;\n    field = field.trim();\n    if (max_field_components_lens[1] == non_numeric_sentinel) {\n        let delta_length = Math.max(max_field_components_lens[0] - field.length, 0);\n        return is_last_column ? field : field + ' '.repeat(delta_length + extra_readability_whitespace_length);\n    }\n    if (is_first_line) {\n        if (number_regex.exec(field) === null) {\n            // The line must be a header - align it using max_width rule.\n            let delta_length = Math.max(max_field_components_lens[0] - field.length, 0);\n            return is_last_column ? field : field + ' '.repeat(delta_length + extra_readability_whitespace_length);\n        }\n    }\n    let dot_pos = field.indexOf('.');\n    let cur_integer_part_length = dot_pos == -1 ? field.length : dot_pos;\n    // Here cur_fractional_part_length includes the leading dot too.\n    let cur_fractional_part_length = dot_pos == -1 ? 0 : field.length - dot_pos;\n    let integer_delta_length = Math.max(max_field_components_lens[1] - cur_integer_part_length, 0);\n    let fractional_delta_length = Math.max(max_field_components_lens[2] - cur_fractional_part_length);\n    let trailing_spaces = is_last_column ? '' : ' '.repeat(fractional_delta_length + extra_readability_whitespace_length);\n    return ' '.repeat(integer_delta_length) + field + trailing_spaces;\n}\n\n\nfunction align_columns(active_doc, delim, policy, comment_prefix, column_stats) {\n    let result_lines = [];\n    let num_lines = active_doc.lineCount;\n    let has_edit = false;\n    let is_first_line = true;\n    for (let lnum = 0; lnum < num_lines; lnum++) {\n        let line_text = active_doc.lineAt(lnum).text;\n        if (comment_prefix && line_text.startsWith(comment_prefix)) {\n            result_lines.push(line_text);\n            continue;\n        }\n        if (lnum + 1 == num_lines && line_text == '') {\n            // Skip the last empty line which corresponds to the trailing newline character.\n            result_lines.push(line_text);\n            continue;\n        }\n        let fields = csv_utils.smart_split(line_text, delim, policy, true)[0];\n        for (let fnum = 0; fnum < fields.length; fnum++) {\n            if (fnum >= column_stats.length) // Safeguard against async doc edit, should never happen.\n                break;\n            let is_last_column = fnum + 1 == column_stats.length;\n            let adjusted = align_field(fields[fnum], is_first_line, column_stats[fnum], is_last_column);\n            if (fields[fnum] != adjusted) {\n                fields[fnum] = adjusted;\n                has_edit = true;\n            }\n        }\n        is_first_line = false;\n        result_lines.push(fields.join(delim));\n    }\n    if (!has_edit)\n        return null;\n    return result_lines.join('\\n');\n}\n\n\nfunction shrink_columns(active_doc, delim, policy, comment_prefix) {\n    let result_lines = [];\n    let num_lines = active_doc.lineCount;\n    let has_edit = false;\n    for (let lnum = 0; lnum < num_lines; lnum++) {\n        let line_text = active_doc.lineAt(lnum).text;\n        if (comment_prefix && line_text.startsWith(comment_prefix)) {\n            result_lines.push(line_text);\n            continue;\n        }\n        let [fields, warning] = csv_utils.smart_split(line_text, delim, policy, true);\n        if (warning) {\n            return [null, lnum + 1];\n        }\n        for (let i = 0; i < fields.length; i++) {\n            let adjusted = fields[i].trim();\n            if (fields[i].length != adjusted.length) {\n                fields[i] = adjusted;\n                has_edit = true;\n            }\n        }\n        result_lines.push(fields.join(delim));\n    }\n    if (!has_edit)\n        return [null, null];\n    return [result_lines.join('\\n'), null];\n}\n\n\nfunction get_last(arr) {\n    return arr[arr.length - 1];\n}\n\n\nfunction populate_optimistic_rfc_csv_record_map(document, requested_end_record, dst_record_map, comment_prefix=null) {\n    let num_lines = document.lineCount;\n    let record_begin = null;\n    let start_line_idx = dst_record_map.length ? get_last(dst_record_map)[1] : 0;\n    for (let lnum = start_line_idx; lnum < num_lines && dst_record_map.length < requested_end_record; ++lnum) {\n        let line_text = document.lineAt(lnum).text;\n        if (lnum + 1 >= num_lines && line_text == \"\")\n            break; // Skip the last empty line.\n        if (comment_prefix && line_text.startsWith(comment_prefix))\n            continue;\n        let match_list = line_text.match(/\"/g);\n        let has_unbalanced_double_quote = match_list && match_list.length % 2 == 1;\n        if (record_begin === null && !has_unbalanced_double_quote) {\n            dst_record_map.push([lnum, lnum + 1]);\n        } else if (record_begin === null && has_unbalanced_double_quote) {\n            record_begin = lnum;\n        } else if (!has_unbalanced_double_quote) {\n            continue;\n        } else {\n            dst_record_map.push([record_begin, lnum + 1]);\n            record_begin = null;\n        }\n    }\n    if (record_begin !== null) {\n        dst_record_map.push([record_begin, num_lines]);\n    }\n}\n\n\nfunction make_table_name_key(file_path) {\n    return 'rbql_table_name:' + file_path;\n}\n\n\nfunction expanduser(filepath) {\n    if (filepath.charAt(0) === '~') {\n        return path.join(os.homedir(), filepath.slice(1));\n    }\n    return filepath;\n}\n\n\nfunction find_table_path(vscode_global_state, main_table_dir, table_id) {\n    // If table_id is a relative path it could be relative either to the current directory or to the main table dir.\n    var candidate_path = expanduser(table_id);\n    if (fs.existsSync(candidate_path)) {\n        return candidate_path;\n    }\n    if (main_table_dir && !path.isAbsolute(candidate_path)) {\n        candidate_path = path.join(main_table_dir, candidate_path);\n        if (fs.existsSync(candidate_path)) {\n            return candidate_path;\n        }\n    }\n    let table_path = vscode_global_state ? vscode_global_state.get(make_table_name_key(table_id)) : null;\n    if (table_path && fs.existsSync(table_path)) {\n        return table_path;\n    }\n    return null;\n}\n\n\nasync function read_header(table_path, encoding) {\n    if (encoding == 'latin-1')\n        encoding = 'binary';\n    let readline = require('readline');\n    let input_reader = readline.createInterface({ input: fs.createReadStream(table_path, {encoding: encoding}) });\n    let closed = false;\n    let promise_resolve = null;\n    let promise_reject = null;\n    let output_promise = new Promise(function(resolve, reject) {\n        promise_resolve = resolve;\n        promise_reject = reject;\n    });\n    input_reader.on('line', line => {\n        if (!closed) {\n            closed = true;\n            input_reader.close();\n            promise_resolve(line);\n        }\n    });\n    input_reader.on('error', error => {\n        promise_reject(error);\n    });\n    return output_promise;\n}\n\n\nfunction get_header_line(document, comment_prefix) {\n    const num_lines = document.lineCount;\n    for (let lnum = 0; lnum < num_lines; ++lnum) {\n        const line_text = document.lineAt(lnum).text;\n        if (!comment_prefix || !line_text.startsWith(comment_prefix)) {\n            return line_text;\n        }\n    }\n    return null;\n}\n\n\nfunction make_inconsistent_num_fields_warning(table_name, inconsistent_records_info) {\n    let keys = Object.keys(inconsistent_records_info);\n    let entries = [];\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let record_id = inconsistent_records_info[key];\n        entries.push([record_id, key]);\n    }\n    entries.sort(function(a, b) { return a[0] - b[0]; });\n    assert(entries.length > 1);\n    let [record_1, num_fields_1] = entries[0];\n    let [record_2, num_fields_2] = entries[1];\n    let warn_msg = `Number of fields in \"${table_name}\" table is not consistent: `;\n    warn_msg += `e.g. record ${record_1} -> ${num_fields_1} fields, record ${record_2} -> ${num_fields_2} fields`;\n    return warn_msg;\n}\n\n\n\nclass RbqlIOHandlingError extends Error {}\n\nclass VSCodeRecordIterator extends rbql.RBQLInputIterator {\n    constructor(document, delim, policy, has_header=false, comment_prefix=null, table_name='input', variable_prefix='a') {\n        // We could have done a hack here actually: convert the document to stream/buffer and then use the standard reader.\n        super();\n        this.document = document;\n        this.delim = delim;\n        this.policy = policy;\n        this.has_header = has_header;\n        this.comment_prefix = comment_prefix;\n        this.table_name = table_name;\n        this.variable_prefix = variable_prefix;\n        this.NR = 0; // Record number.\n        this.NL = 0; // Line number (NL != NR when the CSV file has comments or multiline fields).\n        this.fields_info = new Object();\n        this.first_defective_line = null;\n        this.first_record = this.get_first_record();\n    }\n\n    stop() {\n    }\n\n    get_first_record() {\n        let header_line = get_header_line(this.document, this.comment_prefix);\n        let first_record = csv_utils.smart_split(header_line, this.delim, this.policy, /*preserve_quotes_and_whitespaces=*/false)[0];\n        return first_record;\n    }\n\n    async get_variables_map(query_text) {\n        let variable_map = new Object();\n        rbql.parse_basic_variables(query_text, this.variable_prefix, variable_map);\n        rbql.parse_array_variables(query_text, this.variable_prefix, variable_map);\n        let header_line = get_header_line(this.document, this.comment_prefix);\n        let first_record = csv_utils.smart_split(header_line, this.delim, this.policy, /*preserve_quotes_and_whitespaces=*/false)[0];\n        if (this.has_header) {\n            rbql.parse_attribute_variables(query_text, this.variable_prefix, first_record, 'CSV header line', variable_map);\n            rbql.parse_dictionary_variables(query_text, this.variable_prefix, first_record, variable_map);\n        }\n        return variable_map;\n    }\n\n    async get_header() {\n        return this.has_header ? this.first_record : null;\n    }\n\n    get_line_rfc() {\n        let rfc_line_buffer = [];\n        const num_lines = this.document.lineCount;\n        while (this.NL < num_lines) {\n            let line = this.document.lineAt(this.NL).text;\n            this.NL += 1;\n            if (this.NL == num_lines && line.length == 0)\n                return null; // Skip the last line if it is empty - this can happen due to trailing newline.\n            let record_line = csv_utils.accumulate_rfc_line_into_record(rfc_line_buffer, line, this.comment_prefix);\n            if (record_line !== null)\n                return record_line;\n        }\n        return null;\n    }\n\n    get_line_simple() {\n        const num_lines = this.document.lineCount;\n        while (this.NL < num_lines) {\n            let line = this.document.lineAt(this.NL).text;\n            this.NL += 1;\n            if (this.NL == num_lines && line.length == 0)\n                return null; // Skip the last line if it is empty - this can happen due to trailing newline.\n            if (this.comment_prefix === null || !line.startsWith(this.comment_prefix))\n                return line;\n        }\n        return null;\n    }\n\n    do_get_record() {\n        let line = (this.policy == 'quoted_rfc') ? this.get_line_rfc() : this.get_line_simple();\n        if (line === null)\n            return null;\n        let [record, warning] = csv_utils.smart_split(line, this.delim, this.policy, /*preserve_quotes_and_whitespaces=*/false);\n        if (warning) {\n            if (this.first_defective_line === null) {\n                this.first_defective_line = this.NL;\n                if (this.policy == 'quoted_rfc')\n                    throw new RbqlIOHandlingError(`Inconsistent double quote escaping in ${this.table_name} table at record ${this.NR}, line ${this.NL}`);\n            }\n        }\n        let num_fields = record.length;\n        if (!this.fields_info.hasOwnProperty(num_fields))\n            this.fields_info[num_fields] = this.NR;\n        return record;\n    }\n\n    async get_record() {\n        if (this.NR == 0 && this.has_header) {\n            this.do_get_record(); // Skip the header record.\n        }\n        this.NR += 1;\n        let record = this.do_get_record();\n        return record;\n    }\n\n    get_warnings() {\n        let result = [];\n        if (this.first_defective_line !== null)\n            result.push(`Inconsistent double quote escaping in ${this.table_name} table. E.g. at line ${this.first_defective_line}`);\n        if (Object.keys(this.fields_info).length > 1)\n            result.push(make_inconsistent_num_fields_warning(this.table_name, this.fields_info));\n        return result;\n    }\n}\n\n\nclass VSCodeWriter extends rbql.RBQLOutputWriter {\n    constructor(delim, policy) {\n        super();\n        this.delim = delim;\n        this.policy = policy;\n        this.header_len = null;\n        this.null_in_output = false;\n        this.delim_in_simple_output = false;\n        this.output_lines = [];\n\n        if (policy == 'simple') {\n            this.polymorphic_join = this.simple_join;\n        } else if (policy == 'quoted') {\n            this.polymorphic_join = this.quoted_join;\n        } else if (policy == 'quoted_rfc') {\n            this.polymorphic_join = this.quoted_join_rfc;\n        } else if (policy == 'monocolumn') {\n            this.polymorphic_join = this.mono_join;\n        } else if (policy == 'whitespace') {\n            this.polymorphic_join = this.simple_join;\n        } else {\n            throw new RbqlIOHandlingError('Unknown output csv policy');\n        }\n    }\n\n    set_header(header) {\n        if (header !== null) {\n            this.header_len = header.length;\n            this.write(header);\n        }\n    }\n\n    quoted_join(fields) {\n        let delim = this.delim;\n        var quoted_fields = fields.map(function(v) { return csv_utils.quote_field(String(v), delim); });\n        return quoted_fields.join(this.delim);\n    };\n\n\n    quoted_join_rfc(fields) {\n        let delim = this.delim;\n        var quoted_fields = fields.map(function(v) { return csv_utils.rfc_quote_field(String(v), delim); });\n        return quoted_fields.join(this.delim);\n    };\n\n\n    mono_join(fields) {\n        if (fields.length > 1) {\n            throw new RbqlIOHandlingError('Unable to use \"Monocolumn\" output format: some records have more than one field');\n        }\n        return fields[0];\n    };\n\n\n    simple_join(fields) {\n        var res = fields.join(this.delim);\n        if (fields.join('').indexOf(this.delim) != -1) {\n            this.delim_in_simple_output = true;\n        }\n        return res;\n    };\n\n\n    normalize_fields(out_fields) {\n        for (var i = 0; i < out_fields.length; i++) {\n            if (out_fields[i] == null) {\n                this.null_in_output = true;\n                out_fields[i] = '';\n            } else if (Array.isArray(out_fields[i])) {\n                this.normalize_fields(out_fields[i]);\n                out_fields[i] = out_fields[i].join(this.sub_array_delim);\n            }\n        }\n    };\n\n\n    write(fields) {\n        if (this.header_len !== null && fields.length != this.header_len)\n            throw new RbqlIOHandlingError(`Inconsistent number of columns in output header and the current record: ${this.header_len} != ${fields.length}`);\n        this.normalize_fields(fields);\n        this.output_lines.push(this.polymorphic_join(fields));\n        return true;\n    };\n\n    async finish() {\n    }\n\n    get_warnings() {\n        let result = [];\n        if (this.null_in_output)\n            result.push('null values in output were replaced by empty strings');\n        if (this.delim_in_simple_output)\n            result.push('Some output fields contain separator');\n        return result;\n    };\n}\n\nclass VSCodeTableRegistry {\n    constructor(){}\n\n    get_iterator_by_table_id(_table_id) {\n        throw new RbqlIOHandlingError(\"JOIN queries are currently not supported in vscode.dev web version.\");\n    }\n\n    get_warnings() {\n        return [];\n    };\n}\n\nasync function rbql_query_web(query_text, input_document, input_delim, input_policy, output_delim, output_policy, output_warnings, with_headers, comment_prefix=null) {\n    let user_init_code = ''; // TODO find a way to have init code.\n    let join_tables_registry = new VSCodeTableRegistry(); // TODO find a way to have join registry.\n    let input_iterator = new VSCodeRecordIterator(input_document, input_delim, input_policy, with_headers, comment_prefix);\n    let output_writer = new VSCodeWriter(output_delim, output_policy);\n    await rbql.query(query_text, input_iterator, output_writer, output_warnings, join_tables_registry, user_init_code);\n    return output_writer.output_lines;\n}\n\n\nclass VSCodeFileSystemCSVRegistry extends rbql.RBQLTableRegistry {\n    constructor(vscode_global_state, input_file_dir, delim, policy, encoding, has_header=false, comment_prefix=null, options=null) {\n        super();\n        this.vscode_global_state = vscode_global_state;\n        this.input_file_dir = input_file_dir;\n        this.delim = delim;\n        this.policy = policy;\n        this.encoding = encoding;\n        this.has_header = has_header;\n        this.comment_prefix = comment_prefix;\n        this.stream = null;\n        this.record_iterator = null;\n\n        this.options = options;\n        this.bulk_input_path = null;\n        this.table_path = null;\n    }\n\n    get_iterator_by_table_id(table_id) {\n        this.table_path = find_table_path(this.vscode_global_state, this.input_file_dir, table_id);\n        if (this.table_path === null) {\n            throw new RbqlIOHandlingError(`Unable to find join table \"${table_id}\"`);\n        }\n        if (this.options && this.options['bulk_read']) {\n            this.bulk_input_path = this.table_path;\n        } else {\n            this.stream = fs.createReadStream(this.table_path);\n        }\n        this.record_iterator = new rbql_csv.CSVRecordIterator(this.stream, this.bulk_input_path, this.encoding, this.delim, this.policy, this.has_header, this.comment_prefix, table_id, 'b');\n        return this.record_iterator;\n    };\n\n    get_warnings(output_warnings) {\n        if (this.record_iterator && this.has_header) {\n            output_warnings.push(`The first record in JOIN file ${path.basename(this.table_path)} was also treated as header (and skipped)`);\n        }\n    }\n}\n\n\nasync function rbql_query_node(vscode_global_state, query_text, input_path, input_delim, input_policy, output_path, output_delim, output_policy, csv_encoding, output_warnings, with_headers=false, comment_prefix=null, user_init_code='', options=null) {\n    let input_stream = null;\n    let bulk_input_path = null;\n    if (options && options['bulk_read'] && input_path) {\n        bulk_input_path = input_path;\n    } else {\n        input_stream = input_path === null ? process.stdin : fs.createReadStream(input_path);\n    }\n    let [output_stream, close_output_on_finish] = output_path === null ? [process.stdout, false] : [fs.createWriteStream(output_path), true];\n    if (input_delim == '\"' && input_policy == 'quoted')\n        throw new RbqlIOHandlingError('Double quote delimiter is incompatible with \"quoted\" policy');\n    if (csv_encoding == 'latin-1')\n        csv_encoding = 'binary';\n    if (!rbql_csv.is_ascii(query_text) && csv_encoding == 'binary')\n        throw new RbqlIOHandlingError('To use non-ascii characters in query enable UTF-8 encoding instead of latin-1/binary');\n    if ((!rbql_csv.is_ascii(input_delim) || !rbql_csv.is_ascii(output_delim)) && csv_encoding == 'binary')\n        throw new RbqlIOHandlingError('To use non-ascii characters in query enable UTF-8 encoding instead of latin-1/binary');\n\n    let default_init_source_path = path.join(os.homedir(), '.rbql_init_source.js');\n    if (user_init_code == '' && fs.existsSync(default_init_source_path)) {\n        user_init_code = rbql_csv.read_user_init_code(default_init_source_path);\n    }\n    let input_file_dir = input_path ? path.dirname(input_path) : null;\n    let join_tables_registry = new VSCodeFileSystemCSVRegistry(vscode_global_state, input_file_dir, input_delim, input_policy, csv_encoding, with_headers, comment_prefix, options);\n    let input_iterator = new rbql_csv.CSVRecordIterator(input_stream, bulk_input_path, csv_encoding, input_delim, input_policy, with_headers, comment_prefix);\n    let output_writer = new rbql_csv.CSVWriter(output_stream, close_output_on_finish, csv_encoding, output_delim, output_policy);\n\n    await rbql.query(query_text, input_iterator, output_writer, output_warnings, join_tables_registry, user_init_code);\n    join_tables_registry.get_warnings(output_warnings);\n}\n\n\nmodule.exports.make_table_name_key = make_table_name_key;\nmodule.exports.find_table_path = find_table_path;\nmodule.exports.read_header = read_header;\nmodule.exports.rbql_query_web = rbql_query_web;\nmodule.exports.rbql_query_node = rbql_query_node;\nmodule.exports.get_header_line = get_header_line;\nmodule.exports.populate_optimistic_rfc_csv_record_map = populate_optimistic_rfc_csv_record_map;\nmodule.exports.get_default_js_udf_content = get_default_js_udf_content;\nmodule.exports.get_default_python_udf_content = get_default_python_udf_content;\nmodule.exports.align_columns = align_columns;\nmodule.exports.shrink_columns = shrink_columns;\nmodule.exports.calc_column_stats = calc_column_stats;\nmodule.exports.adjust_column_stats = adjust_column_stats;\nmodule.exports.update_subcomponent_stats = update_subcomponent_stats;\nmodule.exports.align_field = align_field;\n","let field_regular_expression = '\"((?:[^\"]*\"\")*[^\"]*)\"';\nlet field_rgx = new RegExp('^' + field_regular_expression);\nlet field_rgx_external_whitespaces = new RegExp('^ *' + field_regular_expression + ' *');\n\n\n// TODO consider making this file (and rbql.js) both node and browser compatible: https://caolan.org/posts/writing_for_node_and_the_browser.html\n\n\nfunction split_lines(text) {\n    return text.split(/\\r\\n|\\r|\\n/);\n}\n\n\nfunction extract_next_field(src, dlm, preserve_quotes_and_whitespaces, allow_external_whitespaces, cidx, result) {\n    var warning = false;\n    let src_cur = src.substring(cidx);\n    let rgx = allow_external_whitespaces ? field_rgx_external_whitespaces : field_rgx;\n    let match_obj = rgx.exec(src_cur);\n    if (match_obj !== null) {\n        let match_end = match_obj[0].length;\n        if (cidx + match_end == src.length || src[cidx + match_end] == dlm) {\n            if (preserve_quotes_and_whitespaces) {\n                result.push(match_obj[0]);\n            } else {\n                result.push(match_obj[1].replace(/\"\"/g, '\"'));\n            }\n            return [cidx + match_end + 1, false];\n        }\n        warning = true;\n    }\n    var uidx = src.indexOf(dlm, cidx);\n    if (uidx == -1)\n        uidx = src.length;\n    var field = src.substring(cidx, uidx);\n    warning = warning || field.indexOf('\"') != -1;\n    result.push(field);\n    return [uidx + 1, warning];\n}\n\n\nfunction split_quoted_str(src, dlm, preserve_quotes_and_whitespaces=false) {\n    // This function is newline-agnostic i.e. it can also split records with multiline fields.\n    if (src.indexOf('\"') == -1) // Optimization for most common case\n        return [src.split(dlm), false];\n    var result = [];\n    var cidx = 0;\n    var warning = false;\n    let allow_external_whitespaces = dlm != ' ';\n    while (cidx < src.length) {\n        var extraction_report = extract_next_field(src, dlm, preserve_quotes_and_whitespaces, allow_external_whitespaces, cidx, result);\n        cidx = extraction_report[0];\n        warning = warning || extraction_report[1];\n    }\n    if (src.charAt(src.length - 1) == dlm)\n        result.push('');\n    return [result, warning];\n}\n\n\nfunction quote_field(src, delim) {\n    if (src.indexOf(delim) != -1 || src.indexOf('\"') != -1) {\n        var escaped = src.replace(/\"/g, '\"\"');\n        return `\"${escaped}\"`;\n    }\n    return src;\n}\n\n\nfunction rfc_quote_field(src, delim) {\n    if (src.indexOf(delim) != -1 || src.indexOf('\"') != -1 || src.indexOf('\\n') != -1 || src.indexOf('\\r') != -1) {\n        var escaped = src.replace(/\"/g, '\"\"');\n        return `\"${escaped}\"`;\n    }\n    return src;\n}\n\n\nfunction unquote_field(field) {\n    let rgx = new RegExp('^' + ' *' + field_regular_expression + ' *$');\n    let match_obj = rgx.exec(field);\n    if (match_obj !== null) {\n        return match_obj[1].replace(/\"\"/g, '\"');\n    }\n    return field;\n}\n\n\nfunction unquote_fields(fields) {\n    return fields.map(unquote_field);\n}\n\n\nfunction split_whitespace_separated_str(src, preserve_whitespaces=false) {\n    var rgxp = preserve_whitespaces ? new RegExp(' *[^ ]+ *', 'g') : new RegExp('[^ ]+', 'g');\n    let result = [];\n    let match_obj = null;\n    while((match_obj = rgxp.exec(src)) !== null) {\n        result.push(match_obj[0]);\n    }\n    if (preserve_whitespaces) {\n        for (let i = 0; i < result.length - 1; i++) {\n            result[i] = result[i].slice(0, -1);\n        }\n    }\n    return result;\n}\n\n\nfunction smart_split(src, dlm, policy, preserve_quotes_and_whitespaces) {\n    if (policy === 'simple')\n        return [src.split(dlm), false];\n    if (policy === 'whitespace')\n        return [split_whitespace_separated_str(src, preserve_quotes_and_whitespaces), false];\n    if (policy === 'monocolumn')\n        return [[src], false];\n    return split_quoted_str(src, dlm, preserve_quotes_and_whitespaces);\n}\n\n\nfunction accumulate_rfc_line_into_record(external_rfc_line_buffer, current_line, comment_prefix=null) {\n    // Return null if the current line yields no record.\n    // Return a record string if the current line yields the record and cleans the external line buffer.\n    if (comment_prefix !== null && external_rfc_line_buffer.length == 0 && current_line.startsWith(comment_prefix))\n        return null;\n    let match_list = current_line.match(/\"/g);\n    let has_unbalanced_double_quote = match_list && match_list.length % 2 == 1;\n    if (external_rfc_line_buffer.length == 0 && !has_unbalanced_double_quote) {\n        return current_line;\n    } else if (external_rfc_line_buffer.length == 0 && has_unbalanced_double_quote) {\n        external_rfc_line_buffer.push(current_line);\n    } else if (!has_unbalanced_double_quote) {\n        external_rfc_line_buffer.push(current_line);\n    } else {\n        external_rfc_line_buffer.push(current_line);\n        let multiline_row = external_rfc_line_buffer.join('\\n');\n        external_rfc_line_buffer.splice(0, external_rfc_line_buffer.length); // Cleanup the external buffer.\n        return multiline_row;\n    }\n    return null;\n}\n\n\nmodule.exports.split_quoted_str = split_quoted_str;\nmodule.exports.split_whitespace_separated_str = split_whitespace_separated_str;\nmodule.exports.smart_split = smart_split;\nmodule.exports.quote_field = quote_field;\nmodule.exports.rfc_quote_field = rfc_quote_field;\nmodule.exports.unquote_field = unquote_field;\nmodule.exports.unquote_fields = unquote_fields;\nmodule.exports.split_lines = split_lines;\nmodule.exports.accumulate_rfc_line_into_record = accumulate_rfc_line_into_record;\n","(function(exports){\n// The magic line above is to make the module both browser and Node compatible, see https://stackoverflow.com/questions/3225251/how-can-i-share-code-between-node-js-and-the-browser\n\n// This module works with records only. It is CSV-agnostic.\n// Do not add CSV-related logic or variables/functions/objects like \"delim\", \"separator\" etc\n\n\nclass RbqlParsingError extends Error {}\nclass RbqlRuntimeError extends Error {}\nclass AssertionError extends Error {}\nclass RbqlIOHandlingError extends Error {}\n\n\nclass InternalBadFieldError extends Error {\n    constructor(bad_idx, ...params) {\n        super(...params);\n        this.bad_idx = bad_idx;\n    }\n}\n\n\nfunction assert(condition, message=null) {\n    if (!condition) {\n        if (!message) {\n            message = 'Assertion error';\n        }\n        throw new AssertionError(message);\n    }\n}\n\n\nfunction replace_all(src, search, replacement) {\n    return src.split(search).join(replacement);\n}\n\n\nclass RBQLContext {\n    constructor(query_text, input_iterator, output_writer, user_init_code) {\n        this.query_text = query_text;\n        this.input_iterator = input_iterator;\n        this.writer = output_writer;\n        this.user_init_code = user_init_code;\n\n        this.unnest_list = null;\n        this.top_count = null;\n\n        this.like_regex_cache = new Map();\n\n        this.sort_key_expression = null;\n\n        this.aggregation_stage = 0;\n        this.aggregation_key_expression = null;\n        this.functional_aggregators = [];\n\n        this.join_map_impl = null;\n        this.join_map = null;\n        this.lhs_join_var_expression = null;\n\n        this.where_expression = null;\n\n        this.select_expression = null;\n\n        this.update_expressions = null;\n\n        this.variables_init_code = null;\n    }\n}\n\nvar query_context = null; // Needs to be global for MIN(), MAX(), etc functions. TODO find a way to make it local.\n\n\nconst wrong_aggregation_usage_error = 'Usage of RBQL aggregation functions inside JavaScript expressions is not allowed, see the docs';\nconst RBQL_VERSION = '0.25.0';\n\n\nfunction check_if_brackets_match(opening_bracket, closing_bracket) {\n    return (opening_bracket == '[' && closing_bracket == ']') || (opening_bracket == '(' && closing_bracket == ')') || (opening_bracket == '{' && closing_bracket == '}');\n}\n\n\nfunction parse_root_bracket_level_text_spans(select_expression) {\n    let text_spans = []; // parts of text separated by commas at the root parenthesis level\n    let last_pos = 0;\n    let bracket_stack = [];\n    for (let i = 0; i < select_expression.length; i++) {\n        let cur_char = select_expression[i];\n        if (cur_char == ',' && bracket_stack.length == 0) {\n            text_spans.push(select_expression.substring(last_pos, i));\n            last_pos = i + 1;\n        } else if (['[', '{', '('].indexOf(cur_char) != -1) {\n            bracket_stack.push(cur_char);\n        } else if ([']', '}', ')'].indexOf(cur_char) != -1) {\n            if (bracket_stack.length && check_if_brackets_match(bracket_stack[bracket_stack.length - 1], cur_char)) {\n                bracket_stack.pop();\n            } else {\n                throw new RbqlParsingError(`Unable to parse column headers in SELECT expression: No matching opening bracket for closing \"${cur_char}\"`);\n            }\n        }\n    }\n    if (bracket_stack.length) {\n        throw new RbqlParsingError(`Unable to parse column headers in SELECT expression: No matching closing bracket for opening \"${bracket_stack[0]}\"`);\n    }\n    text_spans.push(select_expression.substring(last_pos, select_expression.length));\n    text_spans = text_spans.map(span => span.trim());\n    return text_spans;\n}\n\n\nfunction unquote_string(quoted_str) {\n    // It's possible to use eval here to unqoute the quoted_column_name, but it would be a little barbaric, let's do it manually instead\n    if (!quoted_str || quoted_str.length < 2)\n        return null;\n    if (quoted_str[0] == \"'\" && quoted_str[quoted_str.length - 1] == \"'\") {\n        return quoted_str.substring(1, quoted_str.length - 1).replace(/\\\\'/g, \"'\").replace(/\\\\\\\\/g, \"\\\\\");\n    } else if (quoted_str[0] == '\"' && quoted_str[quoted_str.length - 1] == '\"') {\n        return quoted_str.substring(1, quoted_str.length - 1).replace(/\\\\\"/g, '\"').replace(/\\\\\\\\/g, \"\\\\\");\n    } else {\n        return null;\n    }\n}\n\n\nfunction column_info_from_text_span(text_span, string_literals) {\n    // This function is a rough equivalent of \"column_info_from_node()\" function in python version of RBQL\n    text_span = text_span.trim();\n    let rbql_star_marker = '__RBQL_INTERNAL_STAR';\n    let simple_var_match = /^[_a-zA-Z][_a-zA-Z0-9]*$/.exec(text_span);\n    let attribute_match = /^([ab])\\.([_a-zA-Z][_a-zA-Z0-9]*)$/.exec(text_span);\n    let subscript_int_match = /^([ab])\\[([0-9]+)\\]$/.exec(text_span);\n    let subscript_str_match = /^([ab])\\[___RBQL_STRING_LITERAL([0-9]+)___\\]$/.exec(text_span);\n    if (simple_var_match !== null) {\n        if (text_span == rbql_star_marker)\n            return {table_name: null, column_index: null, column_name: null, is_star: true};\n        if (text_span.startsWith('___RBQL_STRING_LITERAL'))\n            return null;\n        let match = /^([ab])([0-9]+)$/.exec(text_span);\n        if (match !== null) {\n            return {table_name: match[1], column_index: parseInt(match[2]) - 1, column_name: null, is_star: false};\n        }\n        // Some examples for this branch: NR, NF\n        return {table_name: null, column_index: null, column_name: text_span, is_star: false};\n    } else if (attribute_match !== null) {\n        let table_name = attribute_match[1];\n        let column_name = attribute_match[2];\n        if (column_name == rbql_star_marker) {\n            return {table_name: table_name, column_index: null, column_name: null, is_star: true};\n        }\n        return {table_name: null, column_index: null, column_name: column_name, is_star: false};\n    } else if (subscript_int_match != null) {\n        let table_name = subscript_int_match[1];\n        let column_index = parseInt(subscript_int_match[2]) - 1;\n        return {table_name: table_name, column_index: column_index, column_name: null, is_star: false};\n    } else if (subscript_str_match != null) {\n        let table_name = subscript_str_match[1];\n        let replaced_string_literal_id = subscript_str_match[2];\n        if (replaced_string_literal_id < string_literals.length) {\n            let quoted_column_name = string_literals[replaced_string_literal_id];\n            let unquoted_column_name = unquote_string(quoted_column_name);\n            if (unquoted_column_name !== null && unquoted_column_name !== undefined) {\n                return {table_name: null, column_index: null, column_name: unquoted_column_name, is_star: false};\n            }\n        }\n    }\n    return null;\n}\n\n\nfunction adhoc_parse_select_expression_to_column_infos(select_expression, string_literals) {\n    // It is acceptable for the algorithm to provide null column name when it could be theorethically possible to deduce the name.\n    // I.e. this algorithm guarantees precision but doesn't guarantee completeness in all theorethically possible queries.\n    // Although the algorithm should be complete in all practical scenarios, i.e. it should be hard to come up with the query that doesn't produce complete set of column names.\n    // The null column name just means that the output column will be named as col{i}, so the failure to detect the proper column name can be tolerated.\n    // Specifically this function guarantees the following:\n    // 1. The number of column_infos is correct and will match the number of fields in each record in the output - otherwise the exception should be thrown\n    // 2. If column_info at pos j is not null, it is guaranteed to correctly represent that column name in the output\n    let text_spans = parse_root_bracket_level_text_spans(select_expression);\n    let column_infos = text_spans.map(ts => column_info_from_text_span(ts, string_literals));\n    return column_infos;\n}\n\n\nfunction stable_compare(a, b) {\n    for (var i = 0; i < a.length; i++) {\n        if (a[i] !== b[i])\n            return a[i] < b[i] ? -1 : 1;\n    }\n}\n\n\nfunction safe_get(record, idx) {\n    return idx < record.length ? record[idx] : null;\n}\n\n\nfunction safe_join_get(record, idx) {\n    if (idx < record.length) {\n        return record[idx];\n    }\n    throw new InternalBadFieldError(idx);\n}\n\n\nfunction safe_set(record, idx, value) {\n    if (idx < record.length) {\n        record[idx] = value;\n    } else {\n        throw new InternalBadFieldError(idx);\n    }\n}\n\n\nfunction regexp_escape(text) {\n    // From here: https://stackoverflow.com/a/6969486/2898283\n    return text.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');  // $& means the whole matched text\n}\n\n\nfunction like_to_regex(pattern) {\n    let p = 0;\n    let i = 0;\n    let converted = '';\n    while (i < pattern.length) {\n        if (pattern.charAt(i) == '_' || pattern.charAt(i) == '%') {\n            converted += regexp_escape(pattern.substring(p, i));\n            p = i + 1;\n            if (pattern.charAt(i) == '_') {\n                converted += '.';\n            } else {\n                converted += '.*';\n            }\n        }\n        i += 1;\n    }\n    converted += regexp_escape(pattern.substring(p, i));\n    return '^' + converted + '$';\n}\n\n\nfunction like(text, pattern) {\n    let matcher = query_context.like_regex_cache.get(pattern);\n    if (matcher === undefined) {\n        matcher = new RegExp(like_to_regex(pattern));\n        query_context.like_regex_cache.set(pattern, matcher);\n    }\n    return matcher.test(text);\n}\nconst LIKE = like;\n\n\nclass RBQLAggregationToken {\n    constructor(marker_id, value) {\n        this.marker_id = marker_id;\n        this.value = value;\n    }\n\n    toString() {\n        throw new RbqlParsingError(wrong_aggregation_usage_error);\n    }\n}\n\n\nclass UnnestMarker {}\n\n\nfunction UNNEST(vals) {\n    if (query_context.unnest_list !== null) {\n        // Technically we can support multiple UNNEST's but the implementation/algorithm is more complex and just doesn't worth it\n        throw new RbqlParsingError('Only one UNNEST is allowed per query');\n    }\n    query_context.unnest_list = vals;\n    return new UnnestMarker();\n}\nconst unnest = UNNEST;\nconst Unnest = UNNEST;\nconst UNFOLD = UNNEST; // \"UNFOLD\" is deprecated, just for backward compatibility\n\n\nfunction parse_number(val) {\n    // We can do a more pedantic number test like `/^ *-{0,1}[0-9]+\\.{0,1}[0-9]* *$/.test(val)`, but  user will probably use just Number(val) or parseInt/parseFloat\n    let result = Number(val);\n    if (isNaN(result)) {\n        throw new RbqlRuntimeError(`Unable to convert value \"${val}\" to a number. MIN, MAX, SUM, AVG, MEDIAN and VARIANCE aggregate functions convert their string arguments to numeric values`);\n    }\n    return result;\n}\n\n\nclass MinAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        val = parse_number(val);\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, val);\n        } else {\n            this.stats.set(key, Math.min(cur_aggr, val));\n        }\n    }\n\n    get_final(key) {\n        return this.stats.get(key);\n    }\n}\n\n\n\nclass MaxAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        val = parse_number(val);\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, val);\n        } else {\n            this.stats.set(key, Math.max(cur_aggr, val));\n        }\n    }\n\n    get_final(key) {\n        return this.stats.get(key);\n    }\n}\n\n\nclass SumAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        val = parse_number(val);\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, val);\n        } else {\n            this.stats.set(key, cur_aggr + val);\n        }\n    }\n\n    get_final(key) {\n        return this.stats.get(key);\n    }\n}\n\n\nclass AvgAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        val = parse_number(val);\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, [val, 1]);\n        } else {\n            var cur_sum = cur_aggr[0];\n            var cur_cnt = cur_aggr[1];\n            this.stats.set(key, [cur_sum + val, cur_cnt + 1]);\n        }\n    }\n\n    get_final(key) {\n        var cur_aggr = this.stats.get(key);\n        var cur_sum = cur_aggr[0];\n        var cur_cnt = cur_aggr[1];\n        var avg = cur_sum / cur_cnt;\n        return avg;\n    }\n}\n\n\nclass VarianceAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        val = parse_number(val);\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, [val, val * val, 1]);\n        } else {\n            var cur_sum = cur_aggr[0];\n            var cur_sum_sq = cur_aggr[1];\n            var cur_cnt = cur_aggr[2];\n            this.stats.set(key, [cur_sum + val, cur_sum_sq + val * val, cur_cnt + 1]);\n        }\n    }\n\n    get_final(key) {\n        var cur_aggr = this.stats.get(key);\n        var cur_sum = cur_aggr[0];\n        var cur_sum_sq = cur_aggr[1];\n        var cur_cnt = cur_aggr[2];\n        var avg_val = cur_sum / cur_cnt;\n        var variance = cur_sum_sq / cur_cnt - avg_val * avg_val;\n        return variance;\n    }\n}\n\n\nclass MedianAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        val = parse_number(val);\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, [val]);\n        } else {\n            cur_aggr.push(val);\n        }\n    }\n\n    get_final(key) {\n        var cur_aggr = this.stats.get(key);\n        cur_aggr.sort(function(a, b) { return a - b; });\n        var m = Math.floor(cur_aggr.length / 2);\n        if (cur_aggr.length % 2) {\n            return cur_aggr[m];\n        } else {\n            return (cur_aggr[m - 1] + cur_aggr[m]) / 2.0;\n        }\n    }\n}\n\n\nclass CountAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, 1);\n        } else {\n            this.stats.set(key, cur_aggr + 1);\n        }\n    }\n\n    get_final(key) {\n        return this.stats.get(key);\n    }\n}\n\n\nclass ArrayAggAggregator {\n    constructor(post_proc=null) {\n        this.post_proc = post_proc;\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        let cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, [val]);\n        } else {\n            cur_aggr.push(val);\n        }\n    }\n\n    get_final(key) {\n        let cur_aggr = this.stats.get(key);\n        if (this.post_proc === null)\n            return cur_aggr;\n        return this.post_proc(cur_aggr);\n    }\n}\n\n\nclass ConstGroupVerifier {\n    constructor(output_index) {\n        this.output_index = output_index;\n        this.const_values = new Map();\n    }\n\n    increment(key, value) {\n        var old_value = this.const_values.get(key);\n        if (old_value === undefined) {\n            this.const_values.set(key, value);\n        } else if (old_value != value) {\n            throw new RbqlRuntimeError(`Invalid aggregate expression: non-constant values in output column ${this.output_index + 1}. E.g. \"${old_value}\" and \"${value}\"`);\n        }\n    }\n\n    get_final(key) {\n        return this.const_values.get(key);\n    }\n}\n\n\nfunction init_aggregator(generator_name, val, post_proc=null) {\n    query_context.aggregation_stage = 1;\n    var res = new RBQLAggregationToken(query_context.functional_aggregators.length, val);\n    if (post_proc === null) {\n        query_context.functional_aggregators.push(new generator_name());\n    } else {\n        query_context.functional_aggregators.push(new generator_name(post_proc));\n    }\n    return res;\n}\n\n\nfunction MIN(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(MinAggregator, val) : val;\n}\nconst min = MIN;\nconst Min = MIN;\n\n\nfunction MAX(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(MaxAggregator, val) : val;\n}\nconst max = MAX;\nconst Max = MAX;\n\nfunction COUNT(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(CountAggregator, 1) : 1;\n}\nconst count = COUNT;\nconst Count = COUNT;\n\nfunction SUM(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(SumAggregator, val) : val;\n}\nconst sum = SUM;\nconst Sum = SUM;\n\nfunction AVG(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(AvgAggregator, val) : val;\n}\nconst avg = AVG;\nconst Avg = AVG;\n\nfunction VARIANCE(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(VarianceAggregator, val) : val;\n}\nconst variance = VARIANCE;\nconst Variance = VARIANCE;\n\nfunction MEDIAN(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(MedianAggregator, val) : val;\n}\nconst median = MEDIAN;\nconst Median = MEDIAN;\n\nfunction ARRAY_AGG(val, post_proc=null) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(ArrayAggAggregator, val, post_proc) : val;\n}\nconst array_agg = ARRAY_AGG;\nconst FOLD = ARRAY_AGG; // \"FOLD\" is deprecated, just for backward compatibility\n\n\nfunction add_to_set(dst_set, value) {\n    var len_before = dst_set.size;\n    dst_set.add(value);\n    return len_before != dst_set.size;\n}\n\n\nclass TopWriter {\n    constructor(subwriter, top_count) {\n        this.subwriter = subwriter;\n        this.NW = 0;\n        this.top_count = top_count;\n    }\n\n    async write(record) {\n        if (this.top_count !== null && this.NW >= this.top_count)\n            return false;\n        await this.subwriter.write(record);\n        this.NW += 1;\n        return true;\n    }\n\n    async finish() {\n        await this.subwriter.finish();\n    }\n}\n\n\nclass UniqWriter {\n    constructor(subwriter) {\n        this.subwriter = subwriter;\n        this.seen = new Set();\n    }\n\n    async write(record) {\n        if (!add_to_set(this.seen, JSON.stringify(record)))\n            return true;\n        if (!await this.subwriter.write(record))\n            return false;\n        return true;\n    }\n\n    async finish() {\n        await this.subwriter.finish();\n    }\n}\n\n\nclass UniqCountWriter {\n    constructor(subwriter) {\n        this.subwriter = subwriter;\n        this.records = new Map();\n    }\n\n    async write(record) {\n        var key = JSON.stringify(record);\n        var old_val = this.records.get(key);\n        if (old_val) {\n            old_val[0] += 1;\n        } else {\n            this.records.set(key, [1, record]);\n        }\n        return true;\n    }\n\n    async finish() {\n        for (var [key, value] of this.records) {\n            let [count, record] = value;\n            record.unshift(count);\n            if (!await this.subwriter.write(record))\n                break;\n        }\n        await this.subwriter.finish();\n    }\n}\n\n\nclass SortedWriter {\n    constructor(subwriter, reverse_sort) {\n        this.subwriter = subwriter;\n        this.reverse_sort = reverse_sort;\n        this.unsorted_entries = [];\n    }\n\n    async write(stable_entry) {\n        this.unsorted_entries.push(stable_entry);\n        return true;\n    }\n\n    async finish() {\n        var unsorted_entries = this.unsorted_entries;\n        unsorted_entries.sort(stable_compare);\n        if (this.reverse_sort)\n            unsorted_entries.reverse();\n        for (var i = 0; i < unsorted_entries.length; i++) {\n            var entry = unsorted_entries[i];\n            if (!await this.subwriter.write(entry[entry.length - 1]))\n                break;\n        }\n        await this.subwriter.finish();\n    }\n}\n\n\nclass AggregateWriter {\n    constructor(subwriter) {\n        this.subwriter = subwriter;\n        this.aggregators = [];\n        this.aggregation_keys = new Set();\n    }\n\n    async finish() {\n        var all_keys = Array.from(this.aggregation_keys);\n        all_keys.sort();\n        for (var i = 0; i < all_keys.length; i++) {\n            var key = all_keys[i];\n            var out_fields = [];\n            for (var ag of this.aggregators) {\n                out_fields.push(ag.get_final(key));\n            }\n            if (!await this.subwriter.write(out_fields))\n                break;\n        }\n        await this.subwriter.finish();\n    }\n}\n\n\nclass InnerJoiner {\n    constructor(join_map) {\n        this.join_map = join_map;\n    }\n\n    get_rhs(lhs_key) {\n        return this.join_map.get_join_records(lhs_key);\n    }\n}\n\n\nclass LeftJoiner {\n    constructor(join_map) {\n        this.join_map = join_map;\n        this.null_record = [[null, join_map.max_record_len, Array(join_map.max_record_len).fill(null)]];\n    }\n\n    get_rhs(lhs_key) {\n        let result = this.join_map.get_join_records(lhs_key);\n        if (result.length == 0) {\n            return this.null_record;\n        }\n        return result;\n    }\n}\n\n\nclass StrictLeftJoiner {\n    constructor(join_map) {\n        this.join_map = join_map;\n    }\n\n    get_rhs(lhs_key) {\n        let result = this.join_map.get_join_records(lhs_key);\n        if (result.length != 1) {\n            throw new RbqlRuntimeError('In \"STRICT LEFT JOIN\" each key in A must have exactly one match in B. Bad A key: \"' + lhs_key + '\"');\n        }\n        return result;\n    }\n}\n\n\nfunction select_except(src, except_fields) {\n    let result = [];\n    for (let i = 0; i < src.length; i++) {\n        if (except_fields.indexOf(i) == -1)\n            result.push(src[i]);\n    }\n    return result;\n}\n\n\nasync function select_simple(sort_key, NR, out_fields) {\n    if (query_context.sort_key_expression !== null) {\n        var sort_entry = sort_key.concat([NR, out_fields]);\n        if (!await query_context.writer.write(sort_entry))\n            return false;\n    } else {\n        if (!await query_context.writer.write(out_fields))\n            return false;\n    }\n    return true;\n}\n\n\nfunction select_aggregated(key, transparent_values) {\n    if (key !== null) {\n        key = JSON.stringify(key);\n    }\n    if (query_context.aggregation_stage === 1) {\n        if (!(query_context.writer instanceof TopWriter)) {\n            throw new RbqlParsingError('\"ORDER BY\", \"UPDATE\" and \"DISTINCT\" keywords are not allowed in aggregate queries');\n        }\n        query_context.writer = new AggregateWriter(query_context.writer);\n        let num_aggregators_found = 0;\n        for (var i = 0; i < transparent_values.length; i++) {\n            var trans_value = transparent_values[i];\n            if (trans_value instanceof RBQLAggregationToken) {\n                query_context.writer.aggregators.push(query_context.functional_aggregators[trans_value.marker_id]);\n                query_context.writer.aggregators[query_context.writer.aggregators.length - 1].increment(key, trans_value.value);\n                num_aggregators_found += 1;\n            } else {\n                query_context.writer.aggregators.push(new ConstGroupVerifier(query_context.writer.aggregators.length));\n                query_context.writer.aggregators[query_context.writer.aggregators.length - 1].increment(key, trans_value);\n            }\n        }\n        if (num_aggregators_found != query_context.functional_aggregators.length) {\n            throw new RbqlParsingError(wrong_aggregation_usage_error);\n        }\n        query_context.aggregation_stage = 2;\n    } else {\n        for (var i = 0; i < transparent_values.length; i++) {\n            var trans_value = transparent_values[i];\n            query_context.writer.aggregators[i].increment(key, trans_value);\n        }\n    }\n    query_context.writer.aggregation_keys.add(key);\n}\n\n\nasync function select_unnested(sort_key, NR, folded_fields) {\n    let out_fields = folded_fields.slice();\n    let unnest_pos = folded_fields.findIndex(val => val instanceof UnnestMarker);\n    for (var i = 0; i < query_context.unnest_list.length; i++) {\n        out_fields[unnest_pos] = query_context.unnest_list[i];\n        if (!await select_simple(sort_key, NR, out_fields.slice()))\n            return false;\n    }\n    return true;\n}\n\n\nconst PROCESS_SELECT_COMMON = `\n__RBQLMP__variables_init_code\nif (__RBQLMP__where_expression) {\n    let out_fields = __RBQLMP__select_expression;\n    if (query_context.aggregation_stage > 0) {\n        let key = __RBQLMP__aggregation_key_expression;\n        select_aggregated(key, out_fields);\n    } else {\n        let sort_key = [__RBQLMP__sort_key_expression];\n        if (query_context.unnest_list !== null) {\n            if (!await select_unnested(sort_key, NR, out_fields))\n                stop_flag = true;\n        } else {\n            if (!await select_simple(sort_key, NR, out_fields))\n                stop_flag = true;\n        }\n    }\n}\n`;\n\n\nconst PROCESS_SELECT_SIMPLE = `\nlet star_fields = record_a;\n__CODE__\n`;\n\n\nconst PROCESS_SELECT_JOIN = `\nlet join_matches = query_context.join_map.get_rhs(__RBQLMP__lhs_join_var_expression);\nfor (let join_match of join_matches) {\n    let [bNR, bNF, record_b] = join_match;\n    let star_fields = record_a.concat(record_b);\n    __CODE__\n    if (stop_flag)\n        break;\n}\n`;\n\n\nconst PROCESS_UPDATE_JOIN = `\nlet join_matches = query_context.join_map.get_rhs(__RBQLMP__lhs_join_var_expression);\nif (join_matches.length > 1)\n    throw new RbqlRuntimeError('More than one record in UPDATE query matched a key from the input table in the join table');\nlet record_b = null;\nlet bNR = null;\nlet bNF = null;\nif (join_matches.length == 1)\n    [bNR, bNF, record_b] = join_matches[0];\nlet up_fields = record_a;\n__RBQLMP__variables_init_code\nif (join_matches.length == 1 && (__RBQLMP__where_expression)) {\n    NU += 1;\n    __RBQLMP__update_expressions\n}\nif (!await query_context.writer.write(up_fields))\n    stop_flag = true;\n`;\n\n\nconst PROCESS_UPDATE_SIMPLE = `\nlet up_fields = record_a;\n__RBQLMP__variables_init_code\nif (__RBQLMP__where_expression) {\n    NU += 1;\n    __RBQLMP__update_expressions\n}\nif (!await query_context.writer.write(up_fields))\n    stop_flag = true;\n`;\n\n\nconst MAIN_LOOP_BODY = `\n__USER_INIT_CODE__\n\nlet NU = 0;\nlet NR = 0;\n\nlet stop_flag = false;\nwhile (!stop_flag) {\n    let record_a = await query_context.input_iterator.get_record();\n    if (record_a === null)\n        break;\n    NR += 1;\n    let NF = record_a.length;\n    query_context.unnest_list = null; // TODO optimize, don't need to set this every iteration\n    try {\n        __CODE__\n    } catch (e) {\n        if (e.constructor.name === 'InternalBadFieldError') {\n            throw new RbqlRuntimeError(\\`No \"a\\${e.bad_idx + 1}\" field at record \\${NR}\\`);\n        } else if (e.constructor.name === 'RbqlParsingError') {\n            throw(e);\n        } else {\n            throw new RbqlRuntimeError(\\`At record \\${NR}, Details: \\${e.message}\\`);\n        }\n    }\n}\n`;\n\n\nfunction embed_expression(parent_code, child_placeholder, child_expression) {\n    return replace_all(parent_code, child_placeholder, child_expression);\n}\n\n\nfunction embed_code(parent_code, child_placeholder, child_code) {\n    let parent_lines = parent_code.split('\\n');\n    let child_lines = child_code.split('\\n');\n    for (let i = 0; i < parent_lines.length; i++) {\n        let pos = parent_lines[i].indexOf(child_placeholder);\n        if (pos == -1)\n            continue;\n        assert(pos % 4 == 0);\n        let placeholder_indentation = parent_lines[i].substring(0, pos);\n        child_lines = child_lines.map(l => placeholder_indentation + l);\n        let result_lines = parent_lines.slice(0, i).concat(child_lines).concat(parent_lines.slice(i + 1));\n        return result_lines.join('\\n') + '\\n';\n    }\n    assert(false);\n}\n\n\nfunction generate_main_loop_code(query_context) {\n    let is_select_query = query_context.select_expression !== null;\n    let is_join_query = query_context.join_map !== null;\n    let where_expression = query_context.where_expression === null ? 'true' : query_context.where_expression;\n    let aggregation_key_expression = query_context.aggregation_key_expression === null ? 'null' : query_context.aggregation_key_expression;\n    let sort_key_expression = query_context.sort_key_expression === null ? 'null' : query_context.sort_key_expression;\n    let js_code = embed_code(MAIN_LOOP_BODY, '__USER_INIT_CODE__', query_context.user_init_code);\n    if (is_select_query) {\n        if (is_join_query) {\n            js_code = embed_code(embed_code(js_code, '__CODE__', PROCESS_SELECT_JOIN), '__CODE__', PROCESS_SELECT_COMMON);\n            js_code = embed_expression(js_code, '__RBQLMP__lhs_join_var_expression', query_context.lhs_join_var_expression);\n        } else {\n            js_code = embed_code(embed_code(js_code, '__CODE__', PROCESS_SELECT_SIMPLE), '__CODE__', PROCESS_SELECT_COMMON);\n        }\n        js_code = embed_code(js_code, '__RBQLMP__variables_init_code', query_context.variables_init_code);\n        js_code = embed_expression(js_code, '__RBQLMP__select_expression', query_context.select_expression);\n        js_code = embed_expression(js_code, '__RBQLMP__where_expression', where_expression);\n        js_code = embed_expression(js_code, '__RBQLMP__aggregation_key_expression', aggregation_key_expression);\n        js_code = embed_expression(js_code, '__RBQLMP__sort_key_expression', sort_key_expression);\n    } else {\n        if (is_join_query) {\n            js_code = embed_code(js_code, '__CODE__', PROCESS_UPDATE_JOIN);\n            js_code = embed_expression(js_code, '__RBQLMP__lhs_join_var_expression', query_context.lhs_join_var_expression);\n        } else {\n            js_code = embed_code(js_code, '__CODE__', PROCESS_UPDATE_SIMPLE);\n        }\n        js_code = embed_code(js_code, '__RBQLMP__variables_init_code', query_context.variables_init_code);\n        js_code = embed_code(js_code, '__RBQLMP__update_expressions', query_context.update_expressions);\n        js_code = embed_expression(js_code, '__RBQLMP__where_expression', where_expression);\n    }\n    return \"(async () => {\" + js_code + \"})()\";\n}\n\n\nasync function compile_and_run(query_context) {\n    let main_loop_body = generate_main_loop_code(query_context);\n    try {\n        let main_loop_promise = eval(main_loop_body);\n        await main_loop_promise;\n    } catch (e) {\n        if (e instanceof SyntaxError) {\n            // SyntaxError's from eval() function do not contain detailed explanation of what has caused the syntax error, so to guess what was wrong we can only use the original query\n            // v8 issue to fix eval: https://bugs.chromium.org/p/v8/issues/detail?id=2589\n            let lower_case_query = query_context.query_text.toLowerCase();\n            if (lower_case_query.indexOf(' having ') != -1)\n                throw new SyntaxError(e.message + \"\\nRBQL doesn't support \\\"HAVING\\\" keyword\");\n            if (lower_case_query.indexOf(' like ') != -1)\n                throw new SyntaxError(e.message + \"\\nRBQL doesn't support \\\"LIKE\\\" operator, use like() function instead e.g. ... WHERE like(a1, 'foo%bar') ... \"); // UT JSON\n            if (lower_case_query.indexOf(' from ') != -1)\n                throw new SyntaxError(e.message + \"\\nTip: If input table is defined by the environment, RBQL query should not have \\\"FROM\\\" keyword\"); // UT JSON\n            if (e && e.message && String(e.message).toLowerCase().indexOf('unexpected identifier') != -1) {\n                if (lower_case_query.indexOf(' and ') != -1)\n                    throw new SyntaxError(e.message + \"\\nDid you use 'and' keyword in your query?\\nJavaScript backend doesn't support 'and' keyword, use '&&' operator instead!\");\n                if (lower_case_query.indexOf(' or ') != -1)\n                    throw new SyntaxError(e.message + \"\\nDid you use 'or' keyword in your query?\\nJavaScript backend doesn't support 'or' keyword, use '||' operator instead!\");\n            }\n        }\n        if (e && e.message && e.message.indexOf('Received an instance of RBQLAggregationToken') != -1)\n            throw new RbqlParsingError(wrong_aggregation_usage_error);\n        throw e;\n    }\n}\n\n\nconst GROUP_BY = 'GROUP BY';\nconst UPDATE = 'UPDATE';\nconst SELECT = 'SELECT';\nconst JOIN = 'JOIN';\nconst INNER_JOIN = 'INNER JOIN';\nconst LEFT_JOIN = 'LEFT JOIN';\nconst LEFT_OUTER_JOIN = 'LEFT OUTER JOIN';\nconst STRICT_LEFT_JOIN = 'STRICT LEFT JOIN';\nconst ORDER_BY = 'ORDER BY';\nconst WHERE = 'WHERE';\nconst LIMIT = 'LIMIT';\nconst EXCEPT = 'EXCEPT';\nconst WITH = 'WITH';\n\n\nfunction get_ambiguous_error_msg(variable_name) {\n    return `Ambiguous variable name: \"${variable_name}\" is present both in input and in join tables`;\n}\n\n\nfunction get_all_matches(regexp, text) {\n    var result = [];\n    let match_obj = null;\n    while((match_obj = regexp.exec(text)) !== null) {\n        result.push(match_obj);\n    }\n    return result;\n}\n\n\nfunction str_strip(src) {\n    return src.replace(/^ +| +$/g, '');\n}\n\n\nfunction strip_comments(cline) {\n    cline = cline.trim();\n    if (cline.startsWith('//'))\n        return '';\n    return cline;\n}\n\n\nfunction combine_string_literals(backend_expression, string_literals) {\n    for (var i = 0; i < string_literals.length; i++) {\n        backend_expression = replace_all(backend_expression, `___RBQL_STRING_LITERAL${i}___`, string_literals[i]);\n    }\n    return backend_expression;\n}\n\n\nfunction parse_basic_variables(query_text, prefix, dst_variables_map) {\n    assert(prefix == 'a' || prefix == 'b');\n    let rgx = new RegExp(`(?:^|[^_a-zA-Z0-9])${prefix}([1-9][0-9]*)(?:$|(?=[^_a-zA-Z0-9]))`, 'g');\n    let matches = get_all_matches(rgx, query_text);\n    for (let i = 0; i < matches.length; i++) {\n        let field_num = parseInt(matches[i][1]);\n        dst_variables_map[prefix + String(field_num)] = {initialize: true, index: field_num - 1};\n    }\n}\n\n\nfunction parse_array_variables(query_text, prefix, dst_variables_map) {\n    assert(prefix == 'a' || prefix == 'b');\n    let rgx = new RegExp(`(?:^|[^_a-zA-Z0-9])${prefix}\\\\[([1-9][0-9]*)\\\\]`, 'g');\n    let matches = get_all_matches(rgx, query_text);\n    for (let i = 0; i < matches.length; i++) {\n        let field_num = parseInt(matches[i][1]);\n        dst_variables_map[`${prefix}[${field_num}]`] = {initialize: true, index: field_num - 1};\n    }\n}\n\n\nfunction js_string_escape_column_name(column_name, quote_char) {\n    column_name = column_name.replace(/\\\\/g, '\\\\\\\\');\n    column_name = column_name.replace(/\\n/g, '\\\\n');\n    column_name = column_name.replace(/\\r/g, '\\\\r');\n    column_name = column_name.replace(/\\t/g, '\\\\t');\n    if (quote_char === \"'\")\n        return column_name.replace(/'/g, \"\\\\'\");\n    if (quote_char === '\"')\n        return column_name.replace(/\"/g, '\\\\\"');\n    assert(quote_char === \"`\");\n    return column_name.replace(/`/g, \"\\\\`\");\n}\n\n\nfunction query_probably_has_dictionary_variable(query_text, column_name) {\n    let rgx = new RegExp('[-a-zA-Z0-9_:;+=!.,()%^#@&* ]+', 'g');\n    let continuous_name_segments = get_all_matches(rgx, column_name);\n    for (let continuous_segment of continuous_name_segments) {\n        if (query_text.indexOf(continuous_segment) == -1)\n            return false;\n    }\n    return true;\n}\n\n\nfunction parse_dictionary_variables(query_text, prefix, column_names, dst_variables_map) {\n    // The purpose of this algorithm is to minimize number of variables in varibale_map to improve performance, ideally it should be only variables from the query\n\n    // FIXME to prevent typos in attribute names either use query-based variable parsing which can properly handle back-tick strings or wrap \"a\" and \"b\" variables with ES6 Proxies https://stackoverflow.com/a/25658975/2898283\n    assert(prefix === 'a' || prefix === 'b');\n    let dict_test_rgx = new RegExp(`(?:^|[^_a-zA-Z0-9])${prefix}\\\\[`);\n    if (query_text.search(dict_test_rgx) == -1)\n        return;\n    for (let i = 0; i < column_names.length; i++) {\n        let column_name = column_names[i];\n        if (query_probably_has_dictionary_variable(query_text, column_name)) {\n            let escaped_column_name = js_string_escape_column_name(column_name, '\"');\n            dst_variables_map[`${prefix}[\"${escaped_column_name}\"]`] = {initialize: true, index: i};\n            escaped_column_name = js_string_escape_column_name(column_name, \"'\");\n            dst_variables_map[`${prefix}['${escaped_column_name}']`] = {initialize: false, index: i};\n            escaped_column_name = js_string_escape_column_name(column_name, \"`\");\n            dst_variables_map[`${prefix}[\\`${escaped_column_name}\\`]`] = {initialize: false, index: i};\n        }\n    }\n}\n\n\nfunction parse_attribute_variables(query_text, prefix, column_names, column_names_source, dst_variables_map) {\n    // The purpose of this algorithm is to minimize number of variables in varibale_map to improve performance, ideally it should be only variables from the query\n\n    assert(prefix === 'a' || prefix === 'b');\n    let rgx = new RegExp(`(?:^|[^_a-zA-Z0-9])${prefix}\\\\.([_a-zA-Z][_a-zA-Z0-9]*)`, 'g');\n    let matches = get_all_matches(rgx, query_text);\n    let column_names_from_query = matches.map(v => v[1]);\n    for (let column_name of column_names_from_query) {\n        let zero_based_idx = column_names.indexOf(column_name);\n        if (zero_based_idx != -1) {\n            dst_variables_map[`${prefix}.${column_name}`] = {initialize: true, index: zero_based_idx};\n        } else {\n            throw new RbqlParsingError(`Unable to find column \"${column_name}\" in ${prefix == 'a' ? 'input' : 'join'} ${column_names_source}`);\n        }\n    }\n}\n\n\nfunction map_variables_directly(query_text, column_names, dst_variables_map) {\n    for (let i = 0; i < column_names.length; i++) {\n        let column_name = column_names[i];\n        if ( /^[_a-zA-Z][_a-zA-Z0-9]*$/.exec(column_name) === null)\n            throw new RbqlIOHandlingError(`Unable to use column name \"${column_name}\" as RBQL/JS variable`);\n        if (query_text.indexOf(column_name) != -1)\n            dst_variables_map[column_name] = {initialize: true, index: i};\n    }\n}\n\n\nfunction ensure_no_ambiguous_variables(query_text, input_column_names, join_column_names) {\n    let join_column_names_set = new Set(join_column_names);\n    for (let column_name of input_column_names) {\n        if (join_column_names_set.has(column_name) && query_text.indexOf(column_name) != -1) // False positive is tolerable here\n            throw new RbqlParsingError(get_ambiguous_error_msg(column_name));\n    }\n}\n\n\nfunction parse_join_expression(src) {\n    src = str_strip(src);\n    const invalid_join_syntax_error = 'Invalid join syntax. Valid syntax: <JOIN> /path/to/B/table on a... == b... [and a... == b... [and ... ]]';\n    let rgx = /^ *([^ ]+) +on +/i;\n    let match = rgx.exec(src);\n    if (match === null)\n        throw new RbqlParsingError(invalid_join_syntax_error);\n    let table_id = match[1];\n    src = src.substr(match[0].length);\n\n    let variable_pairs = [];\n    var pair_rgx = /^([^ =]+) *==? *([^ =]+)/;\n    var and_rgx = /^ +(and|&&) +/i;\n    while (true) {\n        match = pair_rgx.exec(src);\n        if (match === null)\n            throw new RbqlParsingError(invalid_join_syntax_error);\n        variable_pairs.push([match[1], match[2]]);\n        src = src.substr(match[0].length);\n        if (!src.length)\n            break;\n        match = and_rgx.exec(src);\n        if (match === null)\n            throw new RbqlParsingError(invalid_join_syntax_error);\n        src = src.substr(match[0].length);\n    }\n    return [table_id, variable_pairs];\n}\n\n\nfunction resolve_join_variables(input_variables_map, join_variables_map, variable_pairs, string_literals) {\n    let lhs_variables = [];\n    let rhs_indices = [];\n    const valid_join_syntax_msg = 'Valid JOIN syntax: <JOIN> /path/to/B/table on a... == b... [and a... == b... [and ... ]]';\n    for (let variable_pair of variable_pairs) {\n        let [join_var_1, join_var_2] = variable_pair;\n        join_var_1 = combine_string_literals(join_var_1, string_literals);\n        join_var_2 = combine_string_literals(join_var_2, string_literals);\n        if (input_variables_map.hasOwnProperty(join_var_1) && join_variables_map.hasOwnProperty(join_var_1))\n            throw new RbqlParsingError(get_ambiguous_error_msg(join_var_1));\n        if (input_variables_map.hasOwnProperty(join_var_2) && join_variables_map.hasOwnProperty(join_var_2))\n            throw new RbqlParsingError(get_ambiguous_error_msg(join_var_2));\n        if (input_variables_map.hasOwnProperty(join_var_2))\n            [join_var_1, join_var_2] = [join_var_2, join_var_1];\n\n        let [lhs_key_index, rhs_key_index] = [null, null];\n        if (['NR', 'a.NR', 'aNR'].indexOf(join_var_1) != -1) {\n            lhs_key_index = -1;\n        } else if (input_variables_map.hasOwnProperty(join_var_1)) {\n            lhs_key_index = input_variables_map[join_var_1].index;\n        } else {\n            throw new RbqlParsingError(`Unable to parse JOIN expression: Input table does not have field \"${join_var_1}\"\\n${valid_join_syntax_msg}`);\n        }\n\n        if (['b.NR', 'bNR'].indexOf(join_var_2) != -1) {\n            rhs_key_index = -1;\n        } else if (join_variables_map.hasOwnProperty(join_var_2)) {\n            rhs_key_index = join_variables_map[join_var_2].index;\n        } else {\n            throw new RbqlParsingError(`Unable to parse JOIN expression: Join table does not have field \"${join_var_2}\"\\n${valid_join_syntax_msg}`);\n        }\n\n        let lhs_join_var_expression = lhs_key_index == -1 ? 'NR' : `safe_join_get(record_a, ${lhs_key_index})`;\n        rhs_indices.push(rhs_key_index);\n        lhs_variables.push(lhs_join_var_expression);\n    }\n    return [lhs_variables, rhs_indices];\n}\n\n\nfunction generate_common_init_code(query_text, variable_prefix) {\n    assert(variable_prefix == 'a' || variable_prefix == 'b');\n    let result = [];\n    result.push(`${variable_prefix} = new Object();`);\n    let base_var = variable_prefix == 'a' ? 'NR' : 'bNR';\n    let attr_var = `${variable_prefix}.NR`;\n    if (query_text.indexOf(attr_var) != -1)\n        result.push(`${attr_var} = ${base_var};`);\n    if (variable_prefix == 'a' && query_text.indexOf('aNR') != -1)\n        result.push('aNR = NR;');\n    return result;\n}\n\n\nfunction generate_init_statements(query_text, variables_map, join_variables_map, indent) {\n    let code_lines = generate_common_init_code(query_text, 'a');\n    let simple_var_name_rgx = /^[_0-9a-zA-Z]+$/;\n    for (const [variable_name, var_info] of Object.entries(variables_map)) {\n        if (var_info.initialize) {\n            let variable_declaration_keyword = simple_var_name_rgx.exec(variable_name) ? 'var ' : '';\n            code_lines.push(`${variable_declaration_keyword}${variable_name} = safe_get(record_a, ${var_info.index});`);\n        }\n    }\n    if (join_variables_map) {\n        code_lines = code_lines.concat(generate_common_init_code(query_text, 'b'));\n        for (const [variable_name, var_info] of Object.entries(join_variables_map)) {\n            if (var_info.initialize) {\n                let variable_declaration_keyword = simple_var_name_rgx.exec(variable_name) ? 'var ' : '';\n                code_lines.push(`${variable_declaration_keyword}${variable_name} = record_b === null ? null : safe_get(record_b, ${var_info.index});`);\n            }\n        }\n    }\n    for (let i = 1; i < code_lines.length; i++) {\n        code_lines[i] = indent + code_lines[i];\n    }\n    return code_lines.join('\\n');\n}\n\n\nfunction replace_star_count(aggregate_expression) {\n    var rgx = /(^|,) *COUNT\\( *\\* *\\) *(?:$|(?=,))/ig;\n    var result = aggregate_expression.replace(rgx, '$1 COUNT(1)');\n    return str_strip(result);\n}\n\n\nfunction replace_star_vars(rbql_expression) {\n    let star_rgx = /(?:^|,) *(\\*|a\\.\\*|b\\.\\*) *(?=$|,)/g;\n    let matches = get_all_matches(star_rgx, rbql_expression);\n    let last_pos = 0;\n    let result = '';\n    for (let match of matches) {\n        let star_expression = match[1];\n        let replacement_expression = ']).concat(' + {'*': 'star_fields', 'a.*': 'record_a', 'b.*': 'record_b'}[star_expression] + ').concat([';\n        if (last_pos < match.index)\n            result += rbql_expression.substring(last_pos, match.index);\n        result += replacement_expression;\n        last_pos = match.index + match[0].length + 1; // Adding one to skip the lookahead comma\n    }\n    result += rbql_expression.substring(last_pos);\n    return result;\n}\n\n\nfunction replace_star_vars_for_header_parsing(rbql_expression) {\n    let star_rgx = /(?:(?<=^)|(?<=,)) *(\\*|a\\.\\*|b\\.\\*) *(?=$|,)/g;\n    let matches = get_all_matches(star_rgx, rbql_expression);\n    let last_pos = 0;\n    let result = '';\n    for (let match of matches) {\n        let star_expression = match[1];\n        let replacement_expression = {'*': '__RBQL_INTERNAL_STAR', 'a.*': 'a.__RBQL_INTERNAL_STAR', 'b.*': 'b.__RBQL_INTERNAL_STAR'}[star_expression];\n        if (last_pos < match.index)\n            result += rbql_expression.substring(last_pos, match.index);\n        result += replacement_expression;\n        last_pos = match.index + match[0].length;\n    }\n    result += rbql_expression.substring(last_pos);\n    return result;\n}\n\n\nfunction translate_update_expression(update_expression, input_variables_map, string_literals, indent) {\n    let first_assignment = str_strip(update_expression.split('=')[0]);\n    let first_assignment_error = `Unable to parse \"UPDATE\" expression: the expression must start with assignment, but \"${first_assignment}\" does not look like an assignable field name`;\n\n    let assignment_looking_rgx = /(?:^|,) *(a[.#a-zA-Z0-9\\[\\]_]*) *=(?=[^=])/g;\n    let update_expressions = [];\n    let pos = 0;\n    while (true) {\n        let match = assignment_looking_rgx.exec(update_expression);\n        if (update_expressions.length == 0 && (match === null || match.index != 0)) {\n            throw new RbqlParsingError(first_assignment_error);\n        }\n        if (match === null) {\n            update_expressions[update_expressions.length - 1] += str_strip(update_expression.substr(pos)) + ');';\n            break;\n        }\n        if (update_expressions.length)\n            update_expressions[update_expressions.length - 1] += str_strip(update_expression.substring(pos, match.index)) + ');';\n        let dst_var_name = combine_string_literals(str_strip(match[1]), string_literals);\n        if (!input_variables_map.hasOwnProperty(dst_var_name))\n            throw new RbqlParsingError(`Unable to parse \"UPDATE\" expression: Unknown field name: \"${dst_var_name}\"`);\n        let var_index = input_variables_map[dst_var_name].index;\n        let current_indent = update_expressions.length ? indent : '';\n        update_expressions.push(`${current_indent}safe_set(up_fields, ${var_index}, `);\n        pos = match.index + match[0].length;\n    }\n    return combine_string_literals(update_expressions.join('\\n'), string_literals);\n}\n\n\nfunction translate_select_expression(select_expression) {\n    let expression_without_stars = replace_star_count(select_expression);\n    let translated = str_strip(replace_star_vars(expression_without_stars));\n    let translated_for_header = str_strip(replace_star_vars_for_header_parsing(expression_without_stars));\n    if (!translated.length)\n        throw new RbqlParsingError('\"SELECT\" expression is empty');\n    return [`[].concat([${translated}])`, translated_for_header];\n}\n\n\nfunction separate_string_literals(rbql_expression) {\n    // The regex consists of 3 almost identicall parts, the only difference is quote type\n    var rgx = /('(\\\\(\\\\\\\\)*'|[^'])*')|(\"(\\\\(\\\\\\\\)*\"|[^\"])*\")|(`(\\\\(\\\\\\\\)*`|[^`])*`)/g;\n    var match_obj = null;\n    var format_parts = [];\n    var string_literals = [];\n    var idx_before = 0;\n    while((match_obj = rgx.exec(rbql_expression)) !== null) {\n        var literal_id = string_literals.length;\n        var string_literal = match_obj[0];\n        string_literals.push(string_literal);\n        var start_index = match_obj.index;\n        format_parts.push(rbql_expression.substring(idx_before, start_index));\n        format_parts.push(`___RBQL_STRING_LITERAL${literal_id}___`);\n        idx_before = rgx.lastIndex;\n    }\n    format_parts.push(rbql_expression.substring(idx_before));\n    var format_expression = format_parts.join('');\n    format_expression = format_expression.replace(/\\t/g, ' ');\n    return [format_expression, string_literals];\n}\n\n\nfunction locate_statements(rbql_expression) {\n    let statement_groups = [];\n    statement_groups.push([STRICT_LEFT_JOIN, LEFT_OUTER_JOIN, LEFT_JOIN, INNER_JOIN, JOIN]);\n    statement_groups.push([SELECT]);\n    statement_groups.push([ORDER_BY]);\n    statement_groups.push([WHERE]);\n    statement_groups.push([UPDATE]);\n    statement_groups.push([GROUP_BY]);\n    statement_groups.push([LIMIT]);\n    statement_groups.push([EXCEPT]);\n    var result = [];\n    for (var ig = 0; ig < statement_groups.length; ig++) {\n        for (var is = 0; is < statement_groups[ig].length; is++) {\n            var statement = statement_groups[ig][is];\n            var rgxp = new RegExp('(?:^| )' + replace_all(statement, ' ', ' *') + '(?= )', 'ig');\n            var matches = get_all_matches(rgxp, rbql_expression);\n            if (!matches.length)\n                continue;\n            if (matches.length > 1)\n                throw new RbqlParsingError(`More than one \"${statement}\" statements found`);\n            assert(matches.length == 1);\n            var match = matches[0];\n            var match_str = match[0];\n            result.push([match.index, match.index + match_str.length, statement]);\n            break; // Break to avoid matching a sub-statement from the same group e.g. \"INNER JOIN\" -> \"JOIN\"\n        }\n    }\n    result.sort(function(a, b) { return a[0] - b[0]; });\n    return result;\n}\n\n\nfunction separate_actions(rbql_expression) {\n    rbql_expression = str_strip(rbql_expression);\n    var result = {};\n    let with_match = /^(.*)  *[Ww][Ii][Tt][Hh] *\\(([a-z]{4,20})\\) *$/.exec(rbql_expression);\n    if (with_match !== null) {\n        rbql_expression = with_match[1];\n        result[WITH] = with_match[2];\n    }\n    var ordered_statements = locate_statements(rbql_expression);\n    for (var i = 0; i < ordered_statements.length; i++) {\n        var statement_start = ordered_statements[i][0];\n        var span_start = ordered_statements[i][1];\n        var statement = ordered_statements[i][2];\n        var span_end = i + 1 < ordered_statements.length ? ordered_statements[i + 1][0] : rbql_expression.length;\n        assert(statement_start < span_start);\n        assert(span_start <= span_end);\n        var span = rbql_expression.substring(span_start, span_end);\n        var statement_params = {};\n        if ([STRICT_LEFT_JOIN, LEFT_OUTER_JOIN, LEFT_JOIN, INNER_JOIN, JOIN].indexOf(statement) != -1) {\n            statement_params['join_subtype'] = statement;\n            statement = JOIN;\n        }\n\n        if (statement == UPDATE) {\n            if (statement_start != 0)\n                throw new RbqlParsingError('UPDATE keyword must be at the beginning of the query');\n            span = span.replace(/^ *SET/i, '');\n        }\n\n        if (statement == ORDER_BY) {\n            span = span.replace(/ ASC *$/i, '');\n            var new_span = span.replace(/ DESC *$/i, '');\n            if (new_span != span) {\n                span = new_span;\n                statement_params['reverse'] = true;\n            } else {\n                statement_params['reverse'] = false;\n            }\n        }\n\n        if (statement == SELECT) {\n            if (statement_start != 0)\n                throw new RbqlParsingError('SELECT keyword must be at the beginning of the query');\n            let match = /^ *TOP *([0-9]+) /i.exec(span);\n            if (match !== null) {\n                statement_params['top'] = parseInt(match[1]);\n                span = span.substr(match.index + match[0].length);\n            }\n            match = /^ *DISTINCT *(COUNT)? /i.exec(span);\n            if (match !== null) {\n                statement_params['distinct'] = true;\n                if (match[1]) {\n                    statement_params['distinct_count'] = true;\n                }\n                span = span.substr(match.index + match[0].length);\n            }\n        }\n        statement_params['text'] = str_strip(span);\n        result[statement] = statement_params;\n    }\n    if (!result.hasOwnProperty(SELECT) && !result.hasOwnProperty(UPDATE)) {\n        throw new RbqlParsingError('Query must contain either SELECT or UPDATE statement');\n    }\n    assert(result.hasOwnProperty(SELECT) != result.hasOwnProperty(UPDATE));\n    return result;\n}\n\n\nfunction find_top(rb_actions) {\n    if (rb_actions.hasOwnProperty(LIMIT)) {\n        var rgx = /^[0-9]+$/;\n        if (rgx.exec(rb_actions[LIMIT]['text']) === null) {\n            throw new RbqlParsingError('LIMIT keyword must be followed by an integer');\n        }\n        var result = parseInt(rb_actions[LIMIT]['text']);\n        return result;\n    }\n    var select_action = rb_actions[SELECT];\n    if (select_action && select_action.hasOwnProperty('top')) {\n        return select_action['top'];\n    }\n    return null;\n}\n\n\nfunction translate_except_expression(except_expression, input_variables_map, string_literals, input_header) {\n    let skip_vars = except_expression.split(',');\n    skip_vars = skip_vars.map(str_strip);\n    let skip_indices = [];\n    for (let var_name of skip_vars) {\n        var_name = combine_string_literals(var_name, string_literals);\n        if (!input_variables_map.hasOwnProperty(var_name))\n            throw new RbqlParsingError(`Unknown field in EXCEPT expression: \"${var_name}\"`);\n        skip_indices.push(input_variables_map[var_name].index);\n    }\n    skip_indices = skip_indices.sort((a, b) => a - b);\n    let output_header = input_header === null ? null : select_except(input_header, skip_indices);\n    let indices_str = skip_indices.join(',');\n    return [output_header, `select_except(record_a, [${indices_str}])`];\n}\n\n\nclass HashJoinMap {\n    constructor(record_iterator, key_indices) {\n        this.max_record_len = 0;\n        this.hash_map = new Map();\n        this.record_iterator = record_iterator;\n        this.nr = 0;\n        if (key_indices.length == 1) {\n            this.key_index = key_indices[0];\n            this.key_indices = null;\n            this.polymorphic_get_key = this.get_single_key;\n        } else {\n            this.key_index = null;\n            this.key_indices = key_indices;\n            this.polymorphic_get_key = this.get_multi_key;\n        }\n    }\n\n    get_single_key(nr, fields) {\n        if (this.key_index >= fields.length)\n            throw new RbqlRuntimeError(`No field with index ${this.key_index + 1} at record ${this.nr} in \"B\" table`);\n        return this.key_index === -1 ? this.nr : fields[this.key_index];\n    };\n\n    get_multi_key(nr, fields) {\n        let result = [];\n        for (let ki of this.key_indices) {\n            if (ki >= fields.length)\n                throw new RbqlRuntimeError(`No field with index ${ki + 1} at record ${this.nr} in \"B\" table`);\n            result.push(ki === -1 ? this.nr : fields[ki]);\n        }\n        return JSON.stringify(result);\n    };\n\n    async build() {\n        while (true) {\n            let fields = await this.record_iterator.get_record();\n            if (fields === null)\n                break;\n            this.nr += 1;\n            let nf = fields.length;\n            this.max_record_len = Math.max(this.max_record_len, nf);\n            let key = this.polymorphic_get_key(this.nr, fields);\n            let key_records = this.hash_map.get(key);\n            if (key_records === undefined) {\n                this.hash_map.set(key, [[this.nr, nf, fields]]);\n            } else {\n                key_records.push([this.nr, nf, fields]);\n            }\n        }\n    };\n\n    get_join_records(key) {\n        let result = this.hash_map.get(key);\n        if (result === undefined)\n            return [];\n        return result;\n    };\n\n    get_warnings() {\n        return this.record_iterator.get_warnings();\n    };\n}\n\n\nfunction cleanup_query(query_text) {\n    return query_text.split('\\n').map(strip_comments).filter(line => line.length).join(' ').replace(/;+$/g, '');\n}\n\n\nfunction remove_redundant_table_name(query_text) {\n    query_text = str_strip(query_text.replace(/ +from +a(?: +|$)/gi, ' '));\n    query_text = str_strip(query_text.replace(/^ *update +a +set /gi, 'update '));\n    return query_text;\n}\n\n\nfunction select_output_header(input_header, join_header, query_column_infos) {\n    if (input_header === null && join_header === null)\n        return null;\n    if (input_header === null)\n        input_header = [];\n    if (join_header === null)\n        join_header = [];\n    let output_header = [];\n    for (let qci of query_column_infos) {\n        // TODO refactor this and python version: extract this code into a function instead to always return something\n        if (qci === null) {\n            output_header.push('col' + (output_header.length + 1));\n        } else if (qci.is_star) {\n            if (qci.table_name === null) {\n                output_header = output_header.concat(input_header).concat(join_header);\n            } else if (qci.table_name === 'a') {\n                output_header = output_header.concat(input_header);\n            } else if (qci.table_name === 'b') {\n                output_header = output_header.concat(join_header);\n            }\n        } else if (qci.column_name !== null) {\n            output_header.push(qci.column_name);\n        } else if (qci.column_index !== null) {\n            if (qci.table_name == 'a' && qci.column_index < input_header.length) {\n                output_header.push(input_header[qci.column_index]);\n            } else if (qci.table_name == 'b' && qci.column_index < join_header.length) {\n                output_header.push(join_header[qci.column_index]);\n            } else {\n                output_header.push('col' + (output_header.length + 1));\n            }\n        } else { // Should never happen\n            output_header.push('col' + (output_header.length + 1));\n        }\n    }\n    return output_header;\n}\n\n\nfunction make_inconsistent_num_fields_warning(table_name, inconsistent_records_info) {\n    let keys = Object.keys(inconsistent_records_info);\n    let entries = [];\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let record_id = inconsistent_records_info[key];\n        entries.push([record_id, key]);\n    }\n    entries.sort(function(a, b) { return a[0] - b[0]; });\n    assert(entries.length > 1);\n    let [record_1, num_fields_1] = entries[0];\n    let [record_2, num_fields_2] = entries[1];\n    let warn_msg = `Number of fields in \"${table_name}\" table is not consistent: `;\n    warn_msg += `e.g. record ${record_1} -> ${num_fields_1} fields, record ${record_2} -> ${num_fields_2} fields`;\n    return warn_msg;\n}\n\n\nclass RBQLInputIterator {\n    constructor(){}\n    stop() {\n        throw new Error(\"Unable to call the interface method\");\n    }\n    async get_variables_map(query_text) {\n        throw new Error(\"Unable to call the interface method\");\n    }\n    async get_record() {\n        throw new Error(\"Unable to call the interface method\");\n    }\n    handle_query_modifier() {\n        return; // Reimplement if you need to handle a boolean query modifier that can be used like this: `SELECT * WITH (modifiername)`\n    }\n    get_warnings() {\n        return []; // Reimplement if your class can produce warnings\n    }\n    async get_header() {\n        return null; // Reimplement if your class can provide input header\n    }\n}\n\n\nclass RBQLOutputWriter {\n    constructor(){}\n\n    async write(fields) {\n        throw new Error(\"Unable to call the interface method\");\n    }\n\n    async finish() {\n        // Reimplement if your class needs to do something on finish e.g. cleanup\n    };\n\n    get_warnings() {\n        return []; // Reimplement if your class can produce warnings\n    };\n\n    set_header() {\n        return; // Reimplement if your class can handle output headers in a meaningful way\n    }\n}\n\n\nclass RBQLTableRegistry {\n    constructor(){}\n\n    get_iterator_by_table_id(table_id) {\n        throw new Error(\"Unable to call the interface method\");\n    }\n\n    get_warnings() {\n        return []; // Reimplement if your class can produce warnings\n    };\n}\n\n\nclass TableIterator extends RBQLInputIterator {\n    constructor(table, column_names=null, normalize_column_names=true, variable_prefix='a') {\n        super();\n        this.table = table;\n        this.column_names = column_names;\n        this.normalize_column_names = normalize_column_names;\n        this.variable_prefix = variable_prefix;\n        this.nr = 0;\n        this.fields_info = new Object();\n        this.stopped = false;\n    }\n\n\n    stop() {\n        this.stopped = true;\n    };\n\n\n    async get_variables_map(query_text) {\n        let variable_map = new Object();\n        parse_basic_variables(query_text, this.variable_prefix, variable_map);\n        parse_array_variables(query_text, this.variable_prefix, variable_map);\n        if (this.column_names !== null) {\n            if (this.table.length && this.column_names.length != this.table[0].length)\n                throw new RbqlIOHandlingError('List of column names and table records have different lengths');\n            if (this.normalize_column_names) {\n                parse_dictionary_variables(query_text, this.variable_prefix, this.column_names, variable_map);\n                parse_attribute_variables(query_text, this.variable_prefix, this.column_names, 'column names list', variable_map);\n            } else {\n                map_variables_directly(query_text, this.column_names, variable_map);\n            }\n        }\n        return variable_map;\n    };\n\n\n    async get_record() {\n        if (this.stopped)\n            return null;\n        if (this.nr >= this.table.length)\n            return null;\n        let record = this.table[this.nr];\n        this.nr += 1;\n        let num_fields = record.length;\n        if (!this.fields_info.hasOwnProperty(num_fields))\n            this.fields_info[num_fields] = this.nr;\n        return record;\n    };\n\n    get_warnings() {\n        if (Object.keys(this.fields_info).length > 1)\n            return [make_inconsistent_num_fields_warning('input', this.fields_info)];\n        return [];\n    };\n\n    async get_header() {\n        return this.column_names;\n    }\n}\n\n\nclass TableWriter extends RBQLOutputWriter {\n    constructor(external_table) {\n        super();\n        this.table = external_table;\n        this.header = null;\n    }\n\n    async write(fields) {\n        this.table.push(fields);\n        return true;\n    };\n\n    set_header(header) {\n        this.header = header;\n    }\n}\n\n\nclass SingleTableRegistry extends RBQLTableRegistry {\n    constructor(table, column_names=null, normalize_column_names=true, table_id='b') {\n        super();\n        this.table = table;\n        this.table_id = table_id;\n        this.column_names = column_names;\n        this.normalize_column_names = normalize_column_names;\n    }\n\n    get_iterator_by_table_id(table_id) {\n        if (table_id.toLowerCase() !== this.table_id)\n            throw new RbqlIOHandlingError(`Unable to find join table: \"${table_id}\"`);\n        return new TableIterator(this.table, this.column_names, this.normalize_column_names, 'b');\n    };\n}\n\n\nasync function shallow_parse_input_query(query_text, input_iterator, join_tables_registry, query_context) {\n    query_text = cleanup_query(query_text);\n    var [format_expression, string_literals] = separate_string_literals(query_text);\n    format_expression = remove_redundant_table_name(format_expression);\n\n    var rb_actions = separate_actions(format_expression);\n    if (rb_actions.hasOwnProperty(WITH)) {\n        input_iterator.handle_query_modifier(rb_actions[WITH]);\n    }\n    var input_variables_map = await input_iterator.get_variables_map(query_text);\n\n    if (rb_actions.hasOwnProperty(ORDER_BY) && rb_actions.hasOwnProperty(UPDATE))\n        throw new RbqlParsingError('\"ORDER BY\" is not allowed in \"UPDATE\" queries');\n\n    if (rb_actions.hasOwnProperty(GROUP_BY)) {\n        if (rb_actions.hasOwnProperty(ORDER_BY) || rb_actions.hasOwnProperty(UPDATE))\n            throw new RbqlParsingError('\"ORDER BY\", \"UPDATE\" and \"DISTINCT\" keywords are not allowed in aggregate queries');\n        query_context.aggregation_key_expression = '[' + combine_string_literals(rb_actions[GROUP_BY]['text'], string_literals) + ']';\n    }\n\n    let join_variables_map = null;\n    let join_header = null;\n    if (rb_actions.hasOwnProperty(JOIN)) {\n        var [rhs_table_id, variable_pairs] = parse_join_expression(rb_actions[JOIN]['text']);\n        if (join_tables_registry === null)\n            throw new RbqlParsingError('JOIN operations are not supported by the application');\n        let join_record_iterator = join_tables_registry.get_iterator_by_table_id(rhs_table_id);\n        if (!join_record_iterator)\n            throw new RbqlParsingError(`Unable to find join table: \"${rhs_table_id}\"`);\n        if (rb_actions.hasOwnProperty(WITH)) {\n            join_record_iterator.handle_query_modifier(rb_actions[WITH]);\n        }\n        join_variables_map = await join_record_iterator.get_variables_map(query_text);\n        join_header = await join_record_iterator.get_header();\n        let [lhs_variables, rhs_indices] = resolve_join_variables(input_variables_map, join_variables_map, variable_pairs, string_literals);\n        let sql_join_type = {'JOIN': InnerJoiner, 'INNER JOIN': InnerJoiner, 'LEFT JOIN': LeftJoiner, 'LEFT OUTER JOIN': LeftJoiner, 'STRICT LEFT JOIN': StrictLeftJoiner}[rb_actions[JOIN]['join_subtype']];\n        query_context.lhs_join_var_expression = lhs_variables.length == 1 ? lhs_variables[0] : 'JSON.stringify([' + lhs_variables.join(',') + '])';\n        query_context.join_map_impl = new HashJoinMap(join_record_iterator, rhs_indices);\n        await query_context.join_map_impl.build();\n        query_context.join_map = new sql_join_type(query_context.join_map_impl);\n    }\n\n    query_context.variables_init_code = combine_string_literals(generate_init_statements(format_expression, input_variables_map, join_variables_map, ' '.repeat(4)), string_literals);\n\n    if (rb_actions.hasOwnProperty(WHERE)) {\n        var where_expression = rb_actions[WHERE]['text'];\n        if (/[^><!=]=[^=]/.exec(where_expression))\n            throw new RbqlParsingError('Assignments \"=\" are not allowed in \"WHERE\" expressions. For equality test use \"==\" or \"===\"');\n        query_context.where_expression = combine_string_literals(where_expression, string_literals);\n    }\n\n    let input_header = await input_iterator.get_header();\n    if (rb_actions.hasOwnProperty(UPDATE)) {\n        var update_expression = translate_update_expression(rb_actions[UPDATE]['text'], input_variables_map, string_literals, ' '.repeat(8));\n        query_context.update_expressions = combine_string_literals(update_expression, string_literals);\n        query_context.writer.set_header(input_header);\n    }\n\n    if (rb_actions.hasOwnProperty(SELECT)) {\n        query_context.top_count = find_top(rb_actions);\n        if (rb_actions.hasOwnProperty(EXCEPT)) {\n            let [output_header, select_expression] = translate_except_expression(rb_actions[EXCEPT]['text'], input_variables_map, string_literals, input_header);\n            query_context.select_expression = select_expression;\n            query_context.writer.set_header(output_header);\n        } else {\n            let [select_expression, select_expression_for_ast] = translate_select_expression(rb_actions[SELECT]['text']);\n            query_context.select_expression = combine_string_literals(select_expression, string_literals);\n            let column_infos = adhoc_parse_select_expression_to_column_infos(select_expression_for_ast, string_literals);\n            let output_header = select_output_header(input_header, join_header, column_infos);\n            query_context.writer.set_header(output_header);\n        }\n\n        query_context.writer = new TopWriter(query_context.writer, query_context.top_count);\n        if (rb_actions[SELECT].hasOwnProperty('distinct_count')) {\n            query_context.writer = new UniqCountWriter(query_context.writer);\n        } else if (rb_actions[SELECT].hasOwnProperty('distinct')) {\n            query_context.writer = new UniqWriter(query_context.writer);\n        }\n    }\n\n    if (rb_actions.hasOwnProperty(ORDER_BY)) {\n        query_context.sort_key_expression = combine_string_literals(rb_actions[ORDER_BY]['text'], string_literals);\n        let reverse_sort = rb_actions[ORDER_BY]['reverse'];\n        query_context.writer = new SortedWriter(query_context.writer, reverse_sort);\n    }\n}\n\n\nasync function query(query_text, input_iterator, output_writer, output_warnings, join_tables_registry=null, user_init_code='') {\n    query_context = new RBQLContext(query_text, input_iterator, output_writer, user_init_code);\n    await shallow_parse_input_query(query_text, input_iterator, join_tables_registry, query_context);\n    await compile_and_run(query_context);\n    await query_context.writer.finish();\n    output_warnings.push(...input_iterator.get_warnings());\n    if (query_context.join_map_impl)\n        output_warnings.push(...query_context.join_map_impl.get_warnings());\n    output_warnings.push(...output_writer.get_warnings());\n}\n\n\nasync function query_table(query_text, input_table, output_table, output_warnings, join_table=null, input_column_names=null, join_column_names=null, output_column_names=null, normalize_column_names=true, user_init_code='') {\n    if (!normalize_column_names && input_column_names !== null && join_column_names !== null)\n        ensure_no_ambiguous_variables(query_text, input_column_names, join_column_names);\n    let input_iterator = new TableIterator(input_table, input_column_names, normalize_column_names);\n    let output_writer = new TableWriter(output_table);\n    let join_tables_registry = join_table === null ? null : new SingleTableRegistry(join_table, join_column_names, normalize_column_names);\n    await query(query_text, input_iterator, output_writer, output_warnings, join_tables_registry, user_init_code);\n    if (output_column_names !== null) {\n        assert(output_column_names.length == 0, '`output_column_names` param must be an empty list or null');\n        if (output_writer.header !== null) {\n            for (let column_name of output_writer.header) {\n                output_column_names.push(column_name);\n            }\n        }\n    }\n}\n\n\nfunction exception_to_error_info(e) {\n    let exceptions_type_map = {\n        'RbqlRuntimeError': 'query execution',\n        'RbqlParsingError': 'query parsing',\n        'SyntaxError': 'JS syntax error',\n        'RbqlIOHandlingError': 'IO handling'\n    };\n    let error_type = 'unexpected';\n    if (e.constructor && e.constructor.name && exceptions_type_map.hasOwnProperty(e.constructor.name)) {\n        error_type = exceptions_type_map[e.constructor.name];\n    }\n    let error_msg = e.hasOwnProperty('message') ? e.message : String(e);\n    return [error_type, error_msg];\n}\n\n\nexports.query = query;\nexports.query_table = query_table;\nexports.RBQLInputIterator = RBQLInputIterator;\nexports.RBQLOutputWriter = RBQLOutputWriter;\nexports.RBQLTableRegistry = RBQLTableRegistry;\n\nexports.version = RBQL_VERSION;\nexports.TableIterator = TableIterator;\nexports.TableWriter = TableWriter;\nexports.SingleTableRegistry = SingleTableRegistry;\nexports.exception_to_error_info = exception_to_error_info;\n\n\n// The functions below are exported just for unit tests, they are not part of the rbql API\n// TODO exports through the special unit_test proxy e.g. exports.unit_test.parse_basic_variables = parse_basic_variables;\nexports.parse_basic_variables = parse_basic_variables;\nexports.parse_array_variables = parse_array_variables;\nexports.parse_dictionary_variables = parse_dictionary_variables;\nexports.parse_attribute_variables = parse_attribute_variables;\nexports.get_all_matches = get_all_matches;\nexports.strip_comments = strip_comments;\nexports.separate_actions = separate_actions;\nexports.separate_string_literals = separate_string_literals;\nexports.combine_string_literals = combine_string_literals;\nexports.parse_join_expression = parse_join_expression;\nexports.resolve_join_variables = resolve_join_variables;\nexports.translate_update_expression = translate_update_expression;\nexports.translate_select_expression = translate_select_expression;\nexports.translate_except_expression = translate_except_expression;\nexports.like_to_regex = like_to_regex;\nexports.adhoc_parse_select_expression_to_column_infos = adhoc_parse_select_expression_to_column_infos;\nexports.replace_star_count = replace_star_count;\nexports.replace_star_vars_for_header_parsing = replace_star_vars_for_header_parsing;\nexports.select_output_header = select_output_header;\n\n}(typeof exports === 'undefined' ? this.rbql = {} : exports));\n","const fs = require('fs');\nconst os = require('os');\nconst path = require('path');\nconst util = require('util');\n\nconst rbql = require('./rbql.js');\nconst csv_utils = require('./csv_utils.js');\n\n\nconst utf_decoding_error = 'Unable to decode input table as UTF-8. Use binary (latin-1) encoding instead';\n\n\nclass RbqlIOHandlingError extends Error {}\nclass AssertionError extends Error {}\n\n\n// TODO performance improvement: replace smart_split() with polymorphic_split()\n\n\nfunction assert(condition, message=null) {\n    if (!condition) {\n        if (!message) {\n            message = 'Assertion error';\n        }\n        throw new AssertionError(message);\n    }\n}\n\n\nfunction interpret_named_csv_format(format_name) {\n    format_name = format_name.toLowerCase();\n    if (format_name == 'monocolumn')\n        return ['', 'monocolumn'];\n    if (format_name == 'csv')\n        return [',', 'quoted'];\n    if (format_name == 'tsv')\n        return ['\\t', 'simple'];\n    throw new RbqlIOHandlingError(`Unknown format name: \"${format_name}\"`);\n}\n\n\n\nfunction is_ascii(str) {\n    return /^[\\x00-\\x7F]*$/.test(str);\n}\n\n\nfunction read_user_init_code(rbql_init_source_path) {\n    return fs.readFileSync(rbql_init_source_path, 'utf-8');\n}\n\n\nfunction remove_utf8_bom(line, assumed_source_encoding) {\n    if (assumed_source_encoding == 'binary' && line.length >= 3 && line.charCodeAt(0) === 0xEF && line.charCodeAt(1) === 0xBB && line.charCodeAt(2) === 0xBF) {\n        return line.substring(3);\n    }\n    if (assumed_source_encoding == 'utf-8' && line.length >= 1 && line.charCodeAt(0) === 0xFEFF) {\n        return line.substring(1);\n    }\n    return line;\n}\n\n\nfunction make_inconsistent_num_fields_warning(table_name, inconsistent_records_info) {\n    let keys = Object.keys(inconsistent_records_info);\n    let entries = [];\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let record_id = inconsistent_records_info[key];\n        entries.push([record_id, key]);\n    }\n    entries.sort(function(a, b) { return a[0] - b[0]; });\n    assert(entries.length > 1);\n    let [record_1, num_fields_1] = entries[0];\n    let [record_2, num_fields_2] = entries[1];\n    let warn_msg = `Number of fields in \"${table_name}\" table is not consistent: `;\n    warn_msg += `e.g. record ${record_1} -> ${num_fields_1} fields, record ${record_2} -> ${num_fields_2} fields`;\n    return warn_msg;\n}\n\n\nfunction expanduser(filepath) {\n    if (filepath.charAt(0) === '~') {\n        return path.join(os.homedir(), filepath.slice(1));\n    }\n    return filepath;\n}\n\n\nfunction try_read_index(index_path) {\n    var content = null;\n    try {\n        content = fs.readFileSync(index_path, 'utf-8');\n    } catch (e) {\n        return [];\n    }\n    var lines = content.split('\\n');\n    var records = [];\n    for (var i = 0; i < lines.length; i++) {\n        if (!lines[i])\n            continue;\n        var record = lines[i].split('\\t');\n        records.push(record);\n    }\n    return records;\n}\n\n\nfunction get_index_record(index_path, key) {\n    var records = try_read_index(index_path);\n    for (var i = 0; i < records.length; i++) {\n        if (records[i].length && records[i][0] == key) {\n            return records[i];\n        }\n    }\n    return null;\n}\n\n\nfunction find_table_path(main_table_dir, table_id) {\n    // If table_id is a relative path it could be relative either to the current directory or to the main table dir.\n    var candidate_path = expanduser(table_id);\n    if (fs.existsSync(candidate_path)) {\n        return candidate_path;\n    }\n    if (main_table_dir && !path.isAbsolute(candidate_path)) {\n        candidate_path = path.join(main_table_dir, candidate_path);\n        if (fs.existsSync(candidate_path)) {\n            return candidate_path;\n        }\n    }\n    let table_names_settings_path = path.join(os.homedir(), '.rbql_table_names');\n    var name_record = get_index_record(table_names_settings_path, table_id);\n    if (name_record && name_record.length > 1 && fs.existsSync(name_record[1])) {\n        return name_record[1];\n    }\n    return null;\n}\n\n\nclass RecordQueue {\n    // TODO compare performance with a linked list\n    constructor() {\n        this.push_stack = [];\n        this.pull_stack = [];\n    }\n\n    enqueue(record) {\n        this.push_stack.push(record);\n    }\n\n    dequeue() {\n        if (!this.pull_stack.length) {\n            if (!this.push_stack.length)\n                return null;\n            this.pull_stack = this.push_stack;\n            this.pull_stack.reverse();\n            this.push_stack = [];\n        }\n        return this.pull_stack.pop();\n    }\n}\n\n\nclass CSVRecordIterator extends rbql.RBQLInputIterator {\n    // CSVRecordIterator implements a typical async producer-consumer model with an internal buffer:\n    // get_record() - consumer\n    // stream.on('data') - producer\n    constructor(stream, csv_path, encoding, delim, policy, has_header=false, comment_prefix=null, table_name='input', variable_prefix='a') {\n        super();\n        this.stream = stream;\n        this.csv_path = csv_path;\n        assert((this.stream === null) != (this.csv_path === null));\n        this.encoding = encoding;\n        this.delim = delim;\n        this.policy = policy;\n\n        this.has_header = has_header;\n        this.first_record = null;\n        this.first_record_should_be_emitted = !has_header;\n        this.header_preread_complete = false;\n\n        this.table_name = table_name;\n        this.variable_prefix = variable_prefix;\n        this.comment_prefix = (comment_prefix !== null && comment_prefix.length) ? comment_prefix : null;\n\n        this.decoder = null;\n        if (encoding == 'utf-8' && this.csv_path === null) {\n            // Unfortunately util.TextDecoder has serious flaws:\n            // 1. It doesn't work in Node without ICU: https://nodejs.org/api/util.html#util_new_textdecoder_encoding_options\n            // 2. It is broken in Electron: https://github.com/electron/electron/issues/18733\n\n            // Technically we can implement our own custom streaming text decoder, using the 3 following technologies:\n            // 1. decode-encode validation method from https://stackoverflow.com/a/32279283/2898283\n            // 2. Scanning buffer chunks for non-continuation utf-8 bytes from the end of the buffer:\n            //    src_buffer -> (buffer_before, buffer_after) where buffer_after is very small(a couple of bytes) and buffer_before is large and ends with a non-continuation bytes\n            // 3. Internal buffer to store small tail part from the previous buffer\n            this.decoder = new util.TextDecoder(encoding, {fatal: true, stream: true});\n        }\n\n        this.input_exhausted = false;\n        this.started = false;\n\n        this.utf8_bom_removed = false; // BOM doesn't get automatically removed by the decoder when utf-8 file is treated as latin-1\n        this.first_defective_line = null;\n\n        this.fields_info = new Object();\n        this.NR = 0; // Record number\n        this.NL = 0; // Line number (NL != NR when the CSV file has comments or multiline fields)\n\n        this.rfc_line_buffer = [];\n\n        this.partially_decoded_line = '';\n        this.partially_decoded_line_ends_with_cr = false;\n\n        // Holds an external \"resolve\" function which is called when everything is fine.\n        this.resolve_current_record = null;\n        // Holds an external \"reject\" function which is called when error has occured.\n        this.reject_current_record = null;\n        // Holds last exception if we don't have any reject callbacks from clients yet.\n        this.current_exception = null;\n\n        this.produced_records_queue = new RecordQueue();\n\n        this.process_line_polymorphic = policy == 'quoted_rfc' ? this.process_partial_rfc_record_line : this.process_record_line;\n    }\n\n\n    handle_query_modifier(modifier) {\n        // For `... WITH (header) ...` syntax\n        if (['header', 'headers'].indexOf(modifier) != -1) {\n            this.has_header = true;\n            this.first_record_should_be_emitted = false;\n        }\n        if (['noheader', 'noheaders'].indexOf(modifier) != -1) {\n            this.has_header = false;\n            this.first_record_should_be_emitted = true;\n        }\n    }\n\n\n    reset_external_callbacks() {\n        // Drop external callbacks simultaneously since promises can only resolve once, see: https://stackoverflow.com/a/18218542/2898283\n        this.reject_current_record = null;\n        this.resolve_current_record = null;\n    }\n\n    try_propagate_exception() {\n        if (this.current_exception && this.reject_current_record) {\n            let reject = this.reject_current_record;\n            let exception = this.current_exception;\n            this.reset_external_callbacks();\n            this.current_exception = null;\n            reject(exception);\n        }\n    }\n\n\n    store_or_propagate_exception(exception) {\n        if (this.current_exception === null)\n            // Ignore subsequent exceptions if we already have an unreported error. This way we prioritize earlier errors over the more recent ones.\n            this.current_exception = exception;\n        this.try_propagate_exception();\n    }\n\n\n    async preread_first_record() {\n        if (this.header_preread_complete)\n            return;\n        this.first_record = await this.get_record();\n        this.header_preread_complete = true; // We must set header_preread_complete to true after calling get_record(), because get_record() uses it internally.\n        if (this.first_record === null) {\n            return;\n        }\n        if (this.stream)\n            this.stream.pause();\n        this.first_record = this.first_record.slice();\n    };\n\n\n    async get_variables_map(query_text) {\n        let variable_map = new Object();\n        rbql.parse_basic_variables(query_text, this.variable_prefix, variable_map);\n        rbql.parse_array_variables(query_text, this.variable_prefix, variable_map);\n\n        await this.preread_first_record();\n        if (this.has_header && this.first_record) {\n            rbql.parse_attribute_variables(query_text, this.variable_prefix, this.first_record, 'CSV header line', variable_map);\n            rbql.parse_dictionary_variables(query_text, this.variable_prefix, this.first_record, variable_map);\n        }\n        return variable_map;\n    };\n\n    async get_header() {\n        await this.preread_first_record();\n        return this.has_header ? this.first_record : null;\n    }\n\n\n    try_resolve_next_record() {\n        this.try_propagate_exception();\n        if (this.resolve_current_record === null)\n            return;\n\n        let record = null;\n        if (this.first_record_should_be_emitted && this.header_preread_complete) {\n            this.first_record_should_be_emitted = false;\n            record = this.first_record;\n        } else {\n            record = this.produced_records_queue.dequeue();\n        }\n\n        if (record === null && !this.input_exhausted)\n            return;\n        let resolve = this.resolve_current_record;\n        this.reset_external_callbacks();\n        resolve(record);\n    };\n\n\n    async get_record() {\n        if (!this.started)\n            await this.start();\n        if (this.stream && this.stream.isPaused())\n            this.stream.resume();\n\n        let parent_iterator = this;\n        let current_record_promise = new Promise(function(resolve, reject) {\n            parent_iterator.resolve_current_record = resolve;\n            parent_iterator.reject_current_record = reject;\n        });\n        this.try_resolve_next_record();\n        return current_record_promise;\n    };\n\n\n    async get_all_records(num_records=null) {\n        let records = [];\n        while (true) {\n            let record = await this.get_record();\n            if (record === null)\n                break;\n            records.push(record);\n            if (num_records && records.length >= num_records) {\n                this.stop();\n                break;\n            }\n        }\n        return records;\n    };\n\n\n    process_record_line(line) {\n        if (this.comment_prefix !== null && line.startsWith(this.comment_prefix))\n            return; // Just skip the line\n        this.NR += 1;\n        var [record, warning] = csv_utils.smart_split(line, this.delim, this.policy, false);\n        if (warning) {\n            if (this.first_defective_line === null) {\n                this.first_defective_line = this.NL;\n                if (this.policy == 'quoted_rfc')\n                    this.store_or_propagate_exception(new RbqlIOHandlingError(`Inconsistent double quote escaping in ${this.table_name} table at record ${this.NR}, line ${this.NL}`));\n            }\n        }\n        let num_fields = record.length;\n        if (!this.fields_info.hasOwnProperty(num_fields))\n            this.fields_info[num_fields] = this.NR;\n        this.produced_records_queue.enqueue(record);\n        this.try_resolve_next_record();\n    };\n\n\n    process_partial_rfc_record_line(line) {\n        let record_line = csv_utils.accumulate_rfc_line_into_record(this.rfc_line_buffer, line, this.comment_prefix);\n        if (record_line !== null)\n            this.process_record_line(record_line);\n    };\n\n\n    process_line(line) {\n        this.NL += 1;\n        if (this.NL === 1) {\n            var clean_line = remove_utf8_bom(line, this.encoding);\n            if (clean_line != line) {\n                line = clean_line;\n                this.utf8_bom_removed = true;\n            }\n        }\n        this.process_line_polymorphic(line);\n    };\n\n\n    process_data_stream_chunk(data_chunk) {\n        let decoded_string = null;\n        if (this.decoder) {\n            try {\n                decoded_string = this.decoder.decode(data_chunk);\n            } catch (e) {\n                if (e instanceof TypeError) {\n                    this.store_or_propagate_exception(new RbqlIOHandlingError(utf_decoding_error));\n                } else {\n                    this.store_or_propagate_exception(e);\n                }\n                return;\n            }\n        } else {\n            decoded_string = data_chunk.toString(this.encoding);\n        }\n        let line_starts_with_lf = decoded_string.length && decoded_string[0] == '\\n';\n        let first_line_index = line_starts_with_lf && this.partially_decoded_line_ends_with_cr ? 1 : 0;\n        this.partially_decoded_line_ends_with_cr = decoded_string.length && decoded_string[decoded_string.length - 1] == '\\r';\n        let lines = csv_utils.split_lines(decoded_string);\n        lines[0] = this.partially_decoded_line + lines[0];\n        assert(first_line_index == 0 || lines[0].length == 0);\n        this.partially_decoded_line = lines.pop();\n        for (let i = first_line_index; i < lines.length; i++) {\n            this.process_line(lines[i]);\n        }\n    };\n\n\n    process_data_bulk(data_chunk) {\n        let decoded_string = data_chunk.toString(this.encoding);\n        if (this.encoding == 'utf-8') {\n            // Using hacky comparison method from here: https://stackoverflow.com/a/32279283/2898283\n            // TODO get rid of this once TextDecoder is really fixed or when alternative method of reliable decoding appears\n            let control_buffer = Buffer.from(decoded_string, 'utf-8');\n            if (Buffer.compare(data_chunk, control_buffer) != 0) {\n                this.store_or_propagate_exception(new RbqlIOHandlingError(utf_decoding_error));\n                return;\n            }\n        }\n        let lines = csv_utils.split_lines(decoded_string);\n        if (lines.length && lines[lines.length - 1].length == 0)\n            lines.pop();\n        for (let i = 0; i < lines.length; i++) {\n            this.process_line(lines[i]);\n        }\n        if (this.rfc_line_buffer.length > 0) {\n            this.process_record_line(this.rfc_line_buffer.join('\\n'));\n        }\n        this.input_exhausted = true;\n        this.try_resolve_next_record(); // Should be a NOOP here?\n    }\n\n\n    process_data_stream_end() {\n        this.input_exhausted = true;\n        if (this.partially_decoded_line.length) {\n            let last_line = this.partially_decoded_line;\n            this.partially_decoded_line = '';\n            this.process_line(last_line);\n        }\n        if (this.rfc_line_buffer.length > 0) {\n            this.process_record_line(this.rfc_line_buffer.join('\\n'));\n        }\n        this.try_resolve_next_record();\n    };\n\n\n    stop() {\n        if (this.stream)\n            this.stream.destroy(); // TODO consider using pause() instead\n    };\n\n\n    async start() {\n        if (this.started)\n            return;\n        this.started = true;\n        if (this.stream) {\n            this.stream.on('data', (data_chunk) => { this.process_data_stream_chunk(data_chunk); });\n            this.stream.on('end', () => { this.process_data_stream_end(); });\n        } else {\n            let parent_iterator = this;\n            return new Promise(function(resolve, reject) {\n                fs.readFile(parent_iterator.csv_path, (err, data_chunk) => {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        parent_iterator.process_data_bulk(data_chunk);\n                        resolve();\n                    }\n                });\n            });\n        }\n    };\n\n\n    get_warnings() {\n        let result = [];\n        if (this.first_defective_line !== null)\n            result.push(`Inconsistent double quote escaping in ${this.table_name} table. E.g. at line ${this.first_defective_line}`);\n        if (this.utf8_bom_removed)\n            result.push(`UTF-8 Byte Order Mark (BOM) was found and skipped in ${this.table_name} table`);\n        if (Object.keys(this.fields_info).length > 1)\n            result.push(make_inconsistent_num_fields_warning(this.table_name, this.fields_info));\n        return result;\n    };\n}\n\n\nclass CSVWriter extends rbql.RBQLOutputWriter {\n    constructor(stream, close_stream_on_finish, encoding, delim, policy, line_separator='\\n') {\n        super();\n        this.stream = stream;\n        this.encoding = encoding;\n        if (encoding)\n            this.stream.setDefaultEncoding(encoding);\n        this.stream.on('error', (error_obj) => { this.store_first_error(error_obj); })\n        this.delim = delim;\n        this.policy = policy;\n        this.line_separator = line_separator;\n        this.sub_array_delim = delim == '|' ? ';' : '|';\n\n        this.close_stream_on_finish = close_stream_on_finish;\n\n        this.null_in_output = false;\n        this.delim_in_simple_output = false;\n        this.header_len = null;\n        this.first_error = null;\n\n        if (policy == 'simple') {\n            this.polymorphic_join = this.simple_join;\n        } else if (policy == 'quoted') {\n            this.polymorphic_join = this.quoted_join;\n        } else if (policy == 'quoted_rfc') {\n            this.polymorphic_join = this.quoted_join_rfc;\n        } else if (policy == 'monocolumn') {\n            this.polymorphic_join = this.mono_join;\n        } else if (policy == 'whitespace') {\n            this.polymorphic_join = this.simple_join;\n        } else {\n            throw new RbqlIOHandlingError('Unknown output csv policy');\n        }\n    }\n\n\n    store_first_error(error_obj) {\n        // Store only first error because it is typically more important than the subsequent ones.\n        if (this.first_error === null)\n            this.first_error = error_obj;\n    }\n\n    set_header(header) {\n        if (header !== null) {\n            this.header_len = header.length;\n            this.write(header);\n        }\n    }\n\n\n    quoted_join(fields) {\n        let delim = this.delim;\n        var quoted_fields = fields.map(function(v) { return csv_utils.quote_field(String(v), delim); });\n        return quoted_fields.join(this.delim);\n    };\n\n\n    quoted_join_rfc(fields) {\n        let delim = this.delim;\n        var quoted_fields = fields.map(function(v) { return csv_utils.rfc_quote_field(String(v), delim); });\n        return quoted_fields.join(this.delim);\n    };\n\n\n    mono_join(fields) {\n        if (fields.length > 1) {\n            throw new RbqlIOHandlingError('Unable to use \"Monocolumn\" output format: some records have more than one field');\n        }\n        return fields[0];\n    };\n\n\n    simple_join(fields) {\n        var res = fields.join(this.delim);\n        if (fields.join('').indexOf(this.delim) != -1) {\n            this.delim_in_simple_output = true;\n        }\n        return res;\n    };\n\n\n    normalize_fields(out_fields) {\n        for (var i = 0; i < out_fields.length; i++) {\n            if (out_fields[i] == null) {\n                this.null_in_output = true;\n                out_fields[i] = '';\n            } else if (Array.isArray(out_fields[i])) {\n                this.normalize_fields(out_fields[i]);\n                out_fields[i] = out_fields[i].join(this.sub_array_delim);\n            }\n        }\n    };\n\n\n    async write(fields) {\n        if (this.header_len !== null && fields.length != this.header_len)\n            throw new RbqlIOHandlingError(`Inconsistent number of columns in output header and the current record: ${this.header_len} != ${fields.length}`);\n        this.normalize_fields(fields);\n        this.stream.write(this.polymorphic_join(fields));\n        this.stream.write(this.line_separator);\n        let writer_error = this.first_error;\n        return new Promise(function(resolve, reject) {\n            if (writer_error !== null) {\n                reject(writer_error);\n            } else {\n                resolve(true);\n            }\n        });\n    };\n\n\n    _write_all(table) {\n        for (let i = 0; i < table.length; i++) {\n            this.write(table[i]);\n        }\n    };\n\n\n    async finish() {\n        let close_stream_on_finish = this.close_stream_on_finish;\n        let output_stream = this.stream;\n        let output_encoding = this.encoding;\n        let writer_error = this.first_error;\n        let finish_promise = new Promise(function(resolve, reject) {\n            if (writer_error !== null) {\n                reject(writer_error);\n            }\n            if (close_stream_on_finish) {\n                output_stream.end('', output_encoding, () => { resolve(); });\n            } else {\n                setTimeout(() => { resolve(); }, 0);\n            }\n        });\n        return finish_promise;\n    };\n\n\n    get_warnings() {\n        let result = [];\n        if (this.null_in_output)\n            result.push('null values in output were replaced by empty strings');\n        if (this.delim_in_simple_output)\n            result.push('Some output fields contain separator');\n        return result;\n    };\n\n}\n\n\nclass FileSystemCSVRegistry extends rbql.RBQLTableRegistry {\n    constructor(input_file_dir, delim, policy, encoding, has_header=false, comment_prefix=null, options=null) {\n        super();\n        this.input_file_dir = input_file_dir;\n        this.delim = delim;\n        this.policy = policy;\n        this.encoding = encoding;\n        this.has_header = has_header;\n        this.comment_prefix = comment_prefix;\n        this.stream = null;\n        this.record_iterator = null;\n\n        this.options = options;\n        this.bulk_input_path = null;\n        this.table_path = null;\n    }\n\n    get_iterator_by_table_id(table_id) {\n        this.table_path = find_table_path(this.input_file_dir, table_id);\n        if (this.table_path === null) {\n            throw new RbqlIOHandlingError(`Unable to find join table \"${table_id}\"`);\n        }\n        if (this.options && this.options['bulk_read']) {\n            this.bulk_input_path = this.table_path;\n        } else {\n            this.stream = fs.createReadStream(this.table_path);\n        }\n        this.record_iterator = new CSVRecordIterator(this.stream, this.bulk_input_path, this.encoding, this.delim, this.policy, this.has_header, this.comment_prefix, table_id, 'b');\n        return this.record_iterator;\n    };\n\n    get_warnings(output_warnings) {\n        if (this.record_iterator && this.has_header) {\n            output_warnings.push(`The first record in JOIN file ${path.basename(this.table_path)} was also treated as header (and skipped)`);\n        }\n    }\n}\n\n\nasync function query_csv(query_text, input_path, input_delim, input_policy, output_path, output_delim, output_policy, csv_encoding, output_warnings, with_headers=false, comment_prefix=null, user_init_code='', options=null) {\n    let input_stream = null;\n    let bulk_input_path = null;\n    if (options && options['bulk_read'] && input_path) {\n        bulk_input_path = input_path;\n    } else {\n        input_stream = input_path === null ? process.stdin : fs.createReadStream(input_path);\n    }\n    let [output_stream, close_output_on_finish] = output_path === null ? [process.stdout, false] : [fs.createWriteStream(output_path), true];\n    if (input_delim == '\"' && input_policy == 'quoted')\n        throw new RbqlIOHandlingError('Double quote delimiter is incompatible with \"quoted\" policy');\n    if (csv_encoding == 'latin-1')\n        csv_encoding = 'binary';\n    if (!is_ascii(query_text) && csv_encoding == 'binary')\n        throw new RbqlIOHandlingError('To use non-ascii characters in query enable UTF-8 encoding instead of latin-1/binary');\n    if ((!is_ascii(input_delim) || !is_ascii(output_delim)) && csv_encoding == 'binary')\n        throw new RbqlIOHandlingError('To use non-ascii characters in query enable UTF-8 encoding instead of latin-1/binary');\n\n    let default_init_source_path = path.join(os.homedir(), '.rbql_init_source.js');\n    if (user_init_code == '' && fs.existsSync(default_init_source_path)) {\n        user_init_code = read_user_init_code(default_init_source_path);\n    }\n    let input_file_dir = input_path ? path.dirname(input_path) : null;\n    let join_tables_registry = new FileSystemCSVRegistry(input_file_dir, input_delim, input_policy, csv_encoding, with_headers, comment_prefix, options);\n    let input_iterator = new CSVRecordIterator(input_stream, bulk_input_path, csv_encoding, input_delim, input_policy, with_headers, comment_prefix);\n    let output_writer = new CSVWriter(output_stream, close_output_on_finish, csv_encoding, output_delim, output_policy);\n\n    await rbql.query(query_text, input_iterator, output_writer, output_warnings, join_tables_registry, user_init_code);\n    join_tables_registry.get_warnings(output_warnings);\n}\n\n\nmodule.exports.is_ascii = is_ascii;\nmodule.exports.CSVRecordIterator = CSVRecordIterator;\nmodule.exports.CSVWriter = CSVWriter;\nmodule.exports.FileSystemCSVRegistry = FileSystemCSVRegistry;\nmodule.exports.interpret_named_csv_format = interpret_named_csv_format;\nmodule.exports.read_user_init_code = read_user_init_code;\nmodule.exports.query_csv = query_csv;\nmodule.exports.RecordQueue = RecordQueue;\nmodule.exports.exception_to_error_info = rbql.exception_to_error_info;\n","module.exports = require(\"vscode\");","'use strict';\n\nvar possibleNames = [\n\t'BigInt64Array',\n\t'BigUint64Array',\n\t'Float32Array',\n\t'Float64Array',\n\t'Int16Array',\n\t'Int32Array',\n\t'Int8Array',\n\t'Uint16Array',\n\t'Uint32Array',\n\t'Uint8Array',\n\t'Uint8ClampedArray'\n];\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\n\nmodule.exports = function availableTypedArrays() {\n\tvar out = [];\n\tfor (var i = 0; i < possibleNames.length; i++) {\n\t\tif (typeof g[possibleNames[i]] === 'function') {\n\t\t\tout[out.length] = possibleNames[i];\n\t\t}\n\t}\n\treturn out;\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","const assert = require('assert');\nconst os = require('os');\n\nconst vscode = require('vscode');\n\nconst rainbow_utils = require('../../rainbow_utils.js');\n\nconst is_web_ext = (os.homedir === undefined); // Runs as web extension in browser.\n\n\n// TODO make RBQL command wait for the result to reduce the timeout.\nconst poor_rbql_async_design_workaround_timeout = 6000;\n\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n\nfunction log_message(msg) {\n    console.log('###RAINBOW_CSV_UNIT_TEST_MESSAGE### ' + msg);\n}\n\n\nasync function test_rbql_node(workspace_folder_uri) {\n    let uri = vscode.Uri.joinPath(workspace_folder_uri, 'test', 'csv_files', 'university_ranking.csv');\n    let active_doc = await vscode.workspace.openTextDocument(uri);\n    let editor = await vscode.window.showTextDocument(active_doc);\n    await sleep(1000);\n\n    // Test Python query.\n    let test_task = {rbql_backend: \"python\", with_headers: true, rbql_query: \"select top 20 a1, math.ceil(float(a.total_score) * 100), a['university_name'], None, 'foo bar' order by a2\"};\n    await vscode.commands.executeCommand('rainbow-csv.RBQL', test_task);\n    await sleep(poor_rbql_async_design_workaround_timeout);\n    // Indirectly check reported warnings.\n    let state_report = await vscode.commands.executeCommand('rainbow-csv.InternalTest', {check_last_rbql_warnings: true});\n    assert.equal('[\"None values in output were replaced by empty strings\"]', JSON.stringify(state_report.warnings));\n    active_doc = vscode.window.activeTextEditor.document;\n    let length_after_query = active_doc.getText().length;\n    log_message(`Length after python query: ${length_after_query}`);\n    assert.equal(868, length_after_query); // wc -c gives smaller value. Probably VSCode uses '\\r\\n' as line ends.\n\n    // Test JS query.\n    test_task = {rbql_backend: \"js\", rbql_query: \"select a2 * 10, a3, a3.length where NR > 1 order by a3.length limit 10\"};\n    await vscode.commands.executeCommand('rainbow-csv.RBQL', test_task);\n    await sleep(poor_rbql_async_design_workaround_timeout);\n    active_doc = vscode.window.activeTextEditor.document;\n    length_after_query = active_doc.getText().length;\n    log_message(`Length after js query: ${length_after_query}`);\n    assert.equal(268, length_after_query);\n\n    // Test RBQL query error reporting.\n    test_task = {rbql_backend: \"python\", rbql_query: \"select nonexistent_function(a1)\"};\n    await vscode.commands.executeCommand('rainbow-csv.RBQL', test_task);\n    await sleep(poor_rbql_async_design_workaround_timeout);\n    state_report = await vscode.commands.executeCommand('rainbow-csv.InternalTest', {check_last_rbql_report: true});\n    assert.equal('query execution', state_report.error_type);\n    assert.equal(\"At record 1, Details: name 'nonexistent_function' is not defined\", state_report.error_msg);\n\n    // Test with multiline records.\n    uri = vscode.Uri.joinPath(workspace_folder_uri, 'test', 'csv_files', 'synthetic_rfc_newline_data.csv');\n    active_doc = await vscode.workspace.openTextDocument(uri);\n    editor = await vscode.window.showTextDocument(active_doc);\n    await sleep(1000);\n\n    test_task = {rbql_backend: \"js\", rbql_query: \"select '<<<<<', a3, a2, a1, '>>>>> NR: ' + NR\", enable_rfc_newlines: true};\n    await vscode.commands.executeCommand('rainbow-csv.RBQL', test_task);\n    await sleep(poor_rbql_async_design_workaround_timeout);\n    active_doc = vscode.window.activeTextEditor.document;\n    length_after_query = active_doc.getText().length;\n    log_message(`Length after js multiline-record query: ${length_after_query}`);\n    assert.equal(645, length_after_query);\n\n    // Test RBQL JOIN query.\n    uri = vscode.Uri.joinPath(workspace_folder_uri, 'test', 'csv_files', 'university_ranking.csv');\n    active_doc = await vscode.workspace.openTextDocument(uri);\n    editor = await vscode.window.showTextDocument(active_doc);\n    await sleep(1000);\n    test_task = {rbql_backend: \"python\", with_headers: true, rbql_query: \"select a.university_name, b.Country, b.Population, b['GDP per capita'] JOIN countries.csv on a.country == b.Country order by int(b.Population) desc\"};\n    await vscode.commands.executeCommand('rainbow-csv.RBQL', test_task);\n    await sleep(poor_rbql_async_design_workaround_timeout);\n    state_report = await vscode.commands.executeCommand('rainbow-csv.InternalTest', {check_last_rbql_warnings: true});\n    assert.equal('[\"The first record in JOIN file countries.csv was also treated as header (and skipped)\"]', JSON.stringify(state_report.warnings));\n    active_doc = vscode.window.activeTextEditor.document;\n    length_after_query = active_doc.getText().length;\n    log_message(`Length after join query: ${length_after_query}`);\n    // Not sure why it is 11592 and not 11610, when saving the file `wc -c` gives 11610.\n    assert.equal(11592, length_after_query);\n    // We have 202 not 201 because the trailing '\\n' maps to a trailing empty line in VSCode.\n    assert.equal(202, active_doc.lineCount);\n\n    // Test UPDATE, no warnings and copy back.\n    uri = vscode.Uri.joinPath(workspace_folder_uri, 'test', 'csv_files', 'countries.csv');\n    active_doc = await vscode.workspace.openTextDocument(uri);\n    let filename_before = active_doc.fileName;\n    let length_before_query = active_doc.getText().length;\n    editor = await vscode.window.showTextDocument(active_doc);\n    assert(active_doc.getText().indexOf('oceania') == -1);\n    assert(active_doc.getText().indexOf('OCEANIA') > 0);\n    await sleep(1000);\n\n    test_task = {rbql_backend: \"python\", with_headers: true, rbql_query: \"UPDATE set a.Region = a.Region.lower()\"};\n    await vscode.commands.executeCommand('rainbow-csv.RBQL', test_task);\n    await sleep(poor_rbql_async_design_workaround_timeout);\n    state_report = await vscode.commands.executeCommand('rainbow-csv.InternalTest', {check_last_rbql_warnings: true});\n    assert.equal('[]', JSON.stringify(state_report.warnings));\n    active_doc = vscode.window.activeTextEditor.document;\n    let filename_after = active_doc.fileName;\n    length_after_query = active_doc.getText().length;\n    log_message(`Length after update query: ${length_after_query}`);\n    // Changing column to lowercase should not affect the doc length if we account for the '\\r\\n' line endings.\n    assert.equal(length_before_query, length_after_query - active_doc.lineCount + 1);\n    assert(active_doc.getText().indexOf('OCEANIA') == -1);\n    assert(active_doc.getText().indexOf('oceania') > 0);\n\n    await sleep(1000);\n    await vscode.commands.executeCommand('rainbow-csv.CopyBack');\n    await sleep(1000);\n    active_doc = await vscode.workspace.openTextDocument(uri);\n    let filename_after_copy_back = active_doc.fileName;\n    // Make sure that the name stays the same as the original doc but the content has changed.\n    assert.equal(filename_before, filename_after_copy_back);\n    assert(active_doc.getText().indexOf('OCEANIA') == -1);\n    assert(active_doc.getText().indexOf('oceania') > 0);\n}\n\n\nasync function test_rbql_web(workspace_folder_uri) {\n    let uri = vscode.Uri.joinPath(workspace_folder_uri, 'test', 'csv_files', 'university_ranking.csv');\n    let active_doc = await vscode.workspace.openTextDocument(uri);\n    let editor = await vscode.window.showTextDocument(active_doc);\n    await sleep(1000);\n\n    let test_task = {rbql_backend: \"js\", with_headers: true, rbql_query: \"select top 20 a1, Math.ceil(parseFloat(a.total_score) * 100), a['university_name'], null, 'foo bar' order by a2\"};\n    await vscode.commands.executeCommand('rainbow-csv.RBQL', test_task);\n    await sleep(poor_rbql_async_design_workaround_timeout);\n    // Indirectly check reported warnings.\n    let state_report = await vscode.commands.executeCommand('rainbow-csv.InternalTest', {check_last_rbql_warnings: true});\n    assert.equal('[\"null values in output were replaced by empty strings\"]', JSON.stringify(state_report.warnings));\n    active_doc = vscode.window.activeTextEditor.document;\n    let length_after_query = active_doc.getText().length;\n    log_message(`Length after first js query: ${length_after_query}`);\n    assert.equal(846, length_after_query);\n\n    test_task = {rbql_backend: \"js\", rbql_query: \"select a2 * 10, a3, a3.length where NR > 1 order by a3.length limit 10\"};\n    await vscode.commands.executeCommand('rainbow-csv.RBQL', test_task);\n    await sleep(poor_rbql_async_design_workaround_timeout);\n    active_doc = vscode.window.activeTextEditor.document;\n    length_after_query = active_doc.getText().length;\n    log_message(`Length after second js query: ${length_after_query}`);\n    // 267 instead of 268 because no trailing '\\n' at the end of file.\n    assert.equal(267, length_after_query);\n\n    // Test RBQL query error reporting.\n    test_task = {rbql_backend: \"js\", rbql_query: \"select nonexistent_function(a1)\"};\n    await vscode.commands.executeCommand('rainbow-csv.RBQL', test_task);\n    await sleep(poor_rbql_async_design_workaround_timeout);\n    state_report = await vscode.commands.executeCommand('rainbow-csv.InternalTest', {check_last_rbql_report: true});\n    assert.equal('query execution', state_report.error_type);\n    assert.equal(\"At record 1, Details: nonexistent_function is not defined\", state_report.error_msg);\n\n    // Test with multiline records.\n    log_message('Starting multiline records test');\n    uri = vscode.Uri.joinPath(workspace_folder_uri, 'test', 'csv_files', 'synthetic_rfc_newline_data.csv');\n    active_doc = await vscode.workspace.openTextDocument(uri);\n    editor = await vscode.window.showTextDocument(active_doc);\n    await sleep(1000);\n\n    test_task = {rbql_backend: \"js\", rbql_query: \"select '<<<<<', a3, a2, a1, '>>>>> NR: ' + NR\", enable_rfc_newlines: true};\n    await vscode.commands.executeCommand('rainbow-csv.RBQL', test_task);\n    await sleep(poor_rbql_async_design_workaround_timeout);\n    active_doc = vscode.window.activeTextEditor.document;\n    length_after_query = active_doc.getText().length;\n    log_message(`Length after js multiline-record query: ${length_after_query}`);\n    // 644 instead of 645 because no trailing '\\n' at the end of file.\n    assert.equal(644, length_after_query);\n}\n\n\nasync function test_align_shrink_lint(workspace_folder_uri) {\n    let uri = vscode.Uri.joinPath(workspace_folder_uri, 'test', 'csv_files', 'university_ranking.csv');\n    let active_doc = await vscode.workspace.openTextDocument(uri);\n    let editor = await vscode.window.showTextDocument(active_doc);\n    let length_original = active_doc.getText().length;\n    log_message(`Original length: ${length_original}`)\n    assert.equal(12538, length_original);\n    await sleep(2000);\n\n    await vscode.commands.executeCommand('rainbow-csv.Align');\n    let length_aligned = active_doc.getText().length;\n    log_message(`Aligned length: ${length_aligned}`)\n    assert.equal(25896, length_aligned);\n    assert(length_aligned > length_original);\n    let lint_report = await vscode.commands.executeCommand('rainbow-csv.CSVLint');\n    assert.equal(lint_report, 'OK');\n    await sleep(2000);\n\n    await vscode.commands.executeCommand('rainbow-csv.Shrink');\n    let length_shrinked = active_doc.getText().length;\n    log_message(`Shrinked length: ${length_shrinked}`)\n    // This is to ensure that after original -> align -> shrink sequence we get back to original doc.\n    assert.equal(length_original, length_shrinked);\n    await sleep(500);\n\n    let text_with_comma = 'foobar,';\n    await vscode.commands.executeCommand('default:type', { text: text_with_comma });\n    lint_report = await vscode.commands.executeCommand('rainbow-csv.CSVLint');\n    assert(lint_report.indexOf('Number of fields is not consistent') != -1);\n    await sleep(500);\n\n    for (let i = 0; i < text_with_comma.length; i++) {\n        await vscode.commands.executeCommand(\"deleteLeft\");\n    }\n    await sleep(500);\n}\n\n\nasync function test_column_edit(workspace_folder_uri) {\n    let uri = vscode.Uri.joinPath(workspace_folder_uri, 'test', 'csv_files', 'movies.txt');\n    let active_doc = await vscode.workspace.openTextDocument(uri);\n    let editor = await vscode.window.showTextDocument(active_doc);\n    let length_original = active_doc.getText().length;\n    assert.equal(9986, length_original);\n    for (let i = 0; i < 10; i++) {\n        await vscode.commands.executeCommand(\"cursorRight\");\n    }\n    await sleep(1000);\n    await vscode.commands.executeCommand(\"rainbow-csv.ColumnEditAfter\");\n    await sleep(1000);\n    let text_with_comma = 'foobar,';\n    await vscode.commands.executeCommand('default:type', { text: text_with_comma });\n    let length_after_column_edit = active_doc.getText().length;\n    assert.equal(length_original + active_doc.lineCount * text_with_comma.length, length_after_column_edit);\n    await sleep(1000);\n    for (let i = 0; i < text_with_comma.length; i++) {\n        await vscode.commands.executeCommand(\"deleteLeft\");\n    }\n    await sleep(1000);\n    let length_after_delete = active_doc.getText().length;\n    // Ensure that after multicursor deletion of the added `text_with_comma` text we get back to the original doc.\n    assert.equal(length_original, length_after_delete);\n}\n\n\nasync function test_no_autodetection(workspace_folder_uri) {\n    let uri = vscode.Uri.joinPath(workspace_folder_uri, 'test', 'csv_files', 'lorem_ipsum.txt');\n    let active_doc = await vscode.workspace.openTextDocument(uri);\n    log_message(`languageId for lorem_ipsum.txt: ${active_doc.languageId}`)\n    assert.equal(active_doc.languageId, 'plaintext');\n    let editor = await vscode.window.showTextDocument(active_doc);\n    await sleep(1000);\n\n    uri = vscode.Uri.joinPath(workspace_folder_uri, 'test', 'suite', 'index.js');\n    active_doc = await vscode.workspace.openTextDocument(uri);\n    log_message(`languageId for index.js: ${active_doc.languageId}`)\n    assert.equal(active_doc.languageId, 'javascript');\n    editor = await vscode.window.showTextDocument(active_doc);\n    await sleep(1000);\n\n    uri = vscode.Uri.joinPath(workspace_folder_uri, 'test', 'csv_files', 'lorem_ipsum');\n    active_doc = await vscode.workspace.openTextDocument(uri);\n    log_message(`languageId for lorem_ipsum: ${active_doc.languageId}`)\n    assert.equal(active_doc.languageId, 'plaintext');\n    editor = await vscode.window.showTextDocument(active_doc);\n    await sleep(1000);\n}\n\n\nasync function test_autodetection(workspace_folder_uri) {\n    let uri = vscode.Uri.joinPath(workspace_folder_uri, 'test', 'csv_files', 'university_ranking_semicolon.txt');\n    let active_doc = await vscode.workspace.openTextDocument(uri);\n    let editor = await vscode.window.showTextDocument(active_doc);\n    log_message(`languageId for university_ranking_semicolon.txt: ${active_doc.languageId}`)\n    assert.equal(active_doc.languageId, 'csv (semicolon)');\n    await sleep(1000);\n}\n\n\nasync function test_manual_enable_disable(workspace_folder_uri) {\n    let uri = vscode.Uri.joinPath(workspace_folder_uri, 'test', 'csv_files', 'small_movies.pipe');\n    let active_doc = await vscode.workspace.openTextDocument(uri);\n    log_message(`languageId for small_movies.pipe: ${active_doc.languageId}`)\n    assert.equal(active_doc.languageId, 'plaintext');\n    let editor = await vscode.window.showTextDocument(active_doc);\n    await sleep(1000);\n    for (let i = 0; i < 6; i++) {\n        await vscode.commands.executeCommand(\"cursorRight\");\n    }\n    await vscode.commands.executeCommand(\"cursorRightSelect\");\n    await sleep(1000);\n    await vscode.commands.executeCommand('rainbow-csv.RainbowSeparator');\n    await sleep(2000);\n    log_message(`languageId for small_movies.pipe after RainbowSeparator: ${active_doc.languageId}`)\n    assert.equal(active_doc.languageId, 'csv (pipe)');\n    await vscode.commands.executeCommand('rainbow-csv.RainbowSeparatorOff');\n    await sleep(2000);\n    log_message(`languageId for small_movies.pipe after RainbowSeparatorOff: ${active_doc.languageId}`)\n    assert.equal(active_doc.languageId, 'plaintext');\n    await sleep(1000);\n}\n\n\nfunction test_align_stats() {\n    // Previous fields are numbers but the current one is not - mark the column as non-numeric.\n    let field = 'foobar';\n    let is_first_line = 0;\n    let field_components = [5, 2, 3];\n    rainbow_utils.update_subcomponent_stats(field, is_first_line, field_components);\n    assert.deepEqual(field_components, [6, -1, -1]);\n\n    // The field is non-numeric but it is at the first line so could be a header - do not mark the column as non-numeric just yet.\n    field = 'foobar';\n    is_first_line = 1;\n    field_components = [0, 0, 0];\n    rainbow_utils.update_subcomponent_stats(field, is_first_line, field_components);\n    assert.deepEqual(field_components, [6, 0, 0]);\n\n    // The field is a number but the column is already marked as non-numeric so we just update the max string width.\n    field = '100000';\n    is_first_line = 0;\n    field_components = [2, -1, -1];\n    rainbow_utils.update_subcomponent_stats(field, is_first_line, field_components);\n    assert.deepEqual(field_components, [6, -1, -1]);\n\n    // Empty field should not mark a potentially numeric column as non-numeric.\n    field = '';\n    is_first_line = 0;\n    field_components = [5, 2, 3];\n    rainbow_utils.update_subcomponent_stats(field, is_first_line, field_components);\n    assert.deepEqual(field_components, [5, 2, 3]);\n\n    // The field doesn't change stats because all of 3 components are smaller than the current maximums.\n    field = '100.3';\n    is_first_line = 0;\n    field_components = [7, 4, 3];\n    rainbow_utils.update_subcomponent_stats(field, is_first_line, field_components);\n    assert.deepEqual(field_components, [7, 4, 3]);\n\n    // Integer update example.\n    field = '100000';\n    is_first_line = 0;\n    field_components = [5, 2, 3];\n    rainbow_utils.update_subcomponent_stats(field, is_first_line, field_components);\n    assert.deepEqual(field_components, [6, 6, 3]);\n\n    // Float update example.\n    field = '1000.23';\n    is_first_line = 0;\n    field_components = [3, 3, 0];\n    rainbow_utils.update_subcomponent_stats(field, is_first_line, field_components);\n    assert.deepEqual(field_components, [7, 4, 3]);\n}\n\n\nfunction test_field_align() {\n    // Align field in non-numeric non-last column.\n    let field = 'foobar';\n    let is_first_line = 0;\n    let max_components_lens = [10, -1, -1];\n    max_components_lens = rainbow_utils.adjust_column_stats([max_components_lens])[0];\n    let is_last_column = 0;\n    let aligned_field = rainbow_utils.align_field(field, is_first_line, max_components_lens, is_last_column);\n    assert.deepEqual('foobar     ', aligned_field);\n\n    // Align field in non-numeric last column.\n    field = 'foobar';\n    is_first_line = 0;\n    max_components_lens = [10, -1, -1];\n    max_components_lens = rainbow_utils.adjust_column_stats([max_components_lens])[0];\n    is_last_column = 1;\n    aligned_field = rainbow_utils.align_field(field, is_first_line, max_components_lens, is_last_column);\n    assert.deepEqual('foobar', aligned_field);\n\n    // Align non-numeric first line (potentially header) field in numeric column.\n    field = 'foobar';\n    is_first_line = 1;\n    max_components_lens = [10, 4, 6];\n    max_components_lens = rainbow_utils.adjust_column_stats([max_components_lens])[0];\n    is_last_column = 0;\n    aligned_field = rainbow_utils.align_field(field, is_first_line, max_components_lens, is_last_column);\n    assert.deepEqual('foobar     ', aligned_field);\n\n    // Align numeric first line (potentially header) field in numeric column.\n    field = '10.1';\n    is_first_line = 1;\n    max_components_lens = [10, 4, 6];\n    max_components_lens = rainbow_utils.adjust_column_stats([max_components_lens])[0];\n    is_last_column = 0;\n    aligned_field = rainbow_utils.align_field(field, is_first_line, max_components_lens, is_last_column);\n    assert.deepEqual('  10.1     ', aligned_field);\n\n    // Align numeric field in non-numeric column (first line).\n    field = '10.1';\n    is_first_line = 1;\n    max_components_lens = [10, -1, -1];\n    max_components_lens = rainbow_utils.adjust_column_stats([max_components_lens])[0];\n    is_last_column = 0;\n    aligned_field = rainbow_utils.align_field(field, is_first_line, max_components_lens, is_last_column);\n    assert.deepEqual('10.1       ', aligned_field);\n\n    // Align numeric field in non-numeric column (not first line).\n    field = '10.1';\n    is_first_line = 0;\n    max_components_lens = [10, -1, -1];\n    max_components_lens = rainbow_utils.adjust_column_stats([max_components_lens])[0];\n    is_last_column = 0;\n    aligned_field = rainbow_utils.align_field(field, is_first_line, max_components_lens, is_last_column);\n    assert.deepEqual('10.1       ', aligned_field);\n\n    // Align numeric float in numeric non-last column.\n    field = '10.1';\n    is_first_line = 0;\n    max_components_lens = [10, 4, 6];\n    max_components_lens = rainbow_utils.adjust_column_stats([max_components_lens])[0];\n    is_last_column = 0;\n    aligned_field = rainbow_utils.align_field(field, is_first_line, max_components_lens, is_last_column);\n    assert.deepEqual('  10.1     ', aligned_field);\n\n    // Align numeric float in numeric last column.\n    field = '10.1';\n    is_first_line = 0;\n    max_components_lens = [10, 4, 6];\n    max_components_lens = rainbow_utils.adjust_column_stats([max_components_lens])[0];\n    is_last_column = 1;\n    aligned_field = rainbow_utils.align_field(field, is_first_line, max_components_lens, is_last_column);\n    assert.deepEqual('  10.1', aligned_field);\n\n    // Align numeric integer in numeric non-last column.\n    field = '1000';\n    is_first_line = 0;\n    max_components_lens = [10, 4, 6];\n    max_components_lens = rainbow_utils.adjust_column_stats([max_components_lens])[0];\n    is_last_column = 0;\n    aligned_field = rainbow_utils.align_field(field, is_first_line, max_components_lens, is_last_column);\n    assert.deepEqual('1000       ', aligned_field);\n\n    // Align numeric integer in numeric last column.\n    field = '1000';\n    is_first_line = 0;\n    max_components_lens = [10, 4, 6];\n    max_components_lens = rainbow_utils.adjust_column_stats([max_components_lens])[0];\n    is_last_column = 1;\n    aligned_field = rainbow_utils.align_field(field, is_first_line, max_components_lens, is_last_column);\n    assert.deepEqual('1000', aligned_field);\n\n    // Align numeric integer in numeric (integer) column.\n    field = '1000';\n    is_first_line = 0;\n    max_components_lens = [4, 4, 0];\n    max_components_lens = rainbow_utils.adjust_column_stats([max_components_lens])[0];\n    is_last_column = 0;\n    aligned_field = rainbow_utils.align_field(field, is_first_line, max_components_lens, is_last_column);\n    assert.deepEqual('1000 ', aligned_field);\n\n    // Align numeric integer in numeric (integer) column dominated by header width.\n    field = '1000';\n    is_first_line = 0;\n    max_components_lens = [6, 4, 0];\n    max_components_lens = rainbow_utils.adjust_column_stats([max_components_lens])[0];\n    is_last_column = 0;\n    aligned_field = rainbow_utils.align_field(field, is_first_line, max_components_lens, is_last_column);\n    assert.deepEqual('  1000 ', aligned_field);\n\n    // Align numeric float in numeric column dominated by header width.\n    field = '10.1';\n    is_first_line = 0;\n    max_components_lens = [12, 4, 6];\n    max_components_lens = rainbow_utils.adjust_column_stats([max_components_lens])[0];\n    is_last_column = 0;\n    aligned_field = rainbow_utils.align_field(field, is_first_line, max_components_lens, is_last_column);\n    assert.deepEqual('    10.1     ', aligned_field);\n}\n\n\nfunction test_adjust_column_stats() {\n    // Not a numeric column, adjustment is NOOP.\n    let max_components_lens = [10, -1, -1];\n    let adjusted_components = rainbow_utils.adjust_column_stats([max_components_lens])[0];\n    assert.deepEqual([10, -1, -1], adjusted_components);\n\n    // This is possisble with a single-line file.\n    max_components_lens = [10, 0, 0];\n    adjusted_components = rainbow_utils.adjust_column_stats([max_components_lens])[0];\n    assert.deepEqual([10, -1, -1], adjusted_components);\n\n    // Header is smaller than the sum of the numeric components.\n    // value\n    // 0.12\n    // 1234\n    max_components_lens = [5, 4, 3];\n    adjusted_components = rainbow_utils.adjust_column_stats([max_components_lens])[0];\n    assert.deepEqual([7, 4, 3], adjusted_components);\n\n    // Header is bigger than the sum of the numeric components.\n    max_components_lens = [10, 4, 3];\n    adjusted_components = rainbow_utils.adjust_column_stats([max_components_lens])[0];\n    assert.deepEqual([10, 7, 3], adjusted_components);\n}\n\n\nfunction unit_test_align_logic() {\n    test_align_stats();\n    test_field_align();\n    test_adjust_column_stats();\n}\n\n\nasync function run() {\n    try {\n        log_message('Starting tests');\n\n        assert.equal(-1, [1, 2, 3].indexOf(0));\n\n        assert(vscode.workspace.workspaceFolders);\n        assert.equal(1, vscode.workspace.workspaceFolders.length);\n        let workspace_folder_uri = vscode.workspace.workspaceFolders[0].uri;\n\n        await test_no_autodetection(workspace_folder_uri);\n        if (!is_web_ext) {\n            // Ensure that opening non-csv files doesn't cause rainbow csv to import relatively heavy lazy-loaded code.\n            // There is no point to check this in web since all of the files are bundled into a single script anyway.\n            let state_report = await vscode.commands.executeCommand('rainbow-csv.InternalTest', {check_initialization_state: true});\n            assert(state_report.initialized);\n            assert(!state_report.lazy_loaded);\n        }\n\n\n        await test_autodetection(workspace_folder_uri);\n        await test_manual_enable_disable(workspace_folder_uri);\n        await unit_test_align_logic();\n\n        if (is_web_ext) {\n            await test_rbql_web(workspace_folder_uri);\n        } else {\n            await test_rbql_node(workspace_folder_uri);\n        }\n\n        if (!is_web_ext) {\n            // Sanity check that after using advanced functionality such as RBQL, the non-basic code is lazy loaded.\n            let state_report = await vscode.commands.executeCommand('rainbow-csv.InternalTest', {check_initialization_state: true});\n            assert(state_report.initialized);\n            assert(state_report.lazy_loaded);\n        }\n\n        await test_align_shrink_lint(workspace_folder_uri);\n        await test_column_edit(workspace_folder_uri);\n\n        log_message('Finishing tests');\n    } catch (e) {\n        log_message('Error: tests have failed. Exception:');\n        log_message(String(e));\n        log_message(String(e.stack));\n    }\n}\n\nexports.run = run;\n"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","isDeepEqual","isDeepStrictEqual","_require$codes","codes","ERR_AMBIGUOUS_ARGUMENT","ERR_INVALID_ARG_TYPE","ERR_INVALID_ARG_VALUE","ERR_INVALID_RETURN_VALUE","ERR_MISSING_ARGS","AssertionError","inspect","_require$types","isPromise","isRegExp","objectAssign","Object","assign","objectIs","is","lazyLoadComparison","comparison","Map","warned","assert","module","exports","ok","NO_EXCEPTION_SENTINEL","innerFail","message","Error","innerOk","fn","argLen","value","generatedMessage","err","actual","expected","operator","stackStartFn","_len","arguments","length","args","Array","_key","apply","concat","fail","internalMessage","argsLen","undefined","warn","process","emitWarning","console","bind","errArgs","equal","notEqual","deepEqual","notDeepEqual","deepStrictEqual","notDeepStrictEqual","strictEqual","notStrictEqual","Comparison","keys","_this","this","instance","Constructor","TypeError","_classCallCheck","forEach","key","test","compareExceptionKey","a","b","name","expectedException","msg","push","isPrototypeOf","call","getActual","e","checkIsPromise","then","catch","waitForActual","promiseFn","Promise","resolve","resultPromise","expectsError","error","details","fnType","expectsNoError","strict","_len6","_key6","throws","_len2","_key2","rejects","_len3","_key3","result","doesNotThrow","_len4","_key4","doesNotReject","_len5","_key5","ifError","newErr","origStack","stack","tmp2","split","shift","tmp1","i","pos","indexOf","slice","join","_defineProperty","defineProperty","enumerable","configurable","writable","_defineProperties","target","props","descriptor","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","_wrapNativeSuper","Class","_cache","Function","toString","has","get","set","Wrapper","_construct","_getPrototypeOf","create","_setPrototypeOf","isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","Parent","o","p","setPrototypeOf","__proto__","getPrototypeOf","endsWith","str","search","this_len","substring","blue","green","red","white","kReadableOperator","strictEqualObject","notStrictEqualObject","notIdentical","copyError","source","inspectValue","val","compact","customInspect","depth","maxArrayLength","Infinity","showHidden","breakLength","showProxy","sorted","getters","_Error","options","limit","stackTraceLimit","String","stderr","isTTY","getColorDepth","other","res","lastPos","end","skipped","actualInspected","actualLines","expectedLines","indicator","inputLength","columns","count","Math","floor","maxCount","log","repeat","pop","maxLines","max","_actualLines","printedLines","skippedMsg","cur","expectedLine","actualLine","divergingLines","createErrDiff","base","_res","knownOperators","code","captureStackTrace","protoProps","subClass","superClass","_inherits","custom","recurseTimes","ctx","ownKeys","getOwnPropertySymbols","filter","sym","getOwnPropertyDescriptor","_objectSpread","util","createErrorType","Base","NodeError","_Base","arg1","arg2","arg3","getMessage","oneOf","thing","isArray","len","map","determiner","start","substr","replace","type","reason","inspected","RangeError","input","_slicedToArray","arr","_arrayWithHoles","_arr","_n","_d","_e","_s","_i","next","done","_iterableToArrayLimit","_nonIterableRest","regexFlagsSupported","flags","arrayFromSet","array","arrayFromMap","objectGetOwnPropertySymbols","numberIsNaN","Number","isNaN","uncurryThis","f","hasOwnProperty","propertyIsEnumerable","objectToString","isAnyArrayBuffer","isArrayBufferView","isDate","isMap","isSet","isNativeError","isBoxedPrimitive","isNumberObject","isStringObject","isBooleanObject","isBigIntObject","isSymbolObject","isFloat32Array","isFloat64Array","isNonIndex","charCodeAt","pow","getOwnNonIndexProperties","compare","x","y","min","innerDeepEqual","val1","val2","memos","buf1","buf2","val1Tag","keys1","keys2","keyCheck","getTime","RegExp","byteLength","Uint8Array","buffer","byteOffset","areSimilarTypedArrays","offset","areSimilarFloatArrays","_keys","_keys2","size","valueOf","Boolean","BigInt","isEqualBoxedPrimitive","getEnumerables","k","iterationType","aKeys","bKeys","symbolKeysA","symbolKeysB","_symbolKeysB","position","val2MemoA","val2MemoB","areEq","objEquiv","delete","setHasEqualElement","memo","setValues","findLooseMatchingPrimitives","prim","setMightHaveLoosePrim","altValue","mapMightHaveLoosePrim","item","curB","mapHasEqualEntry","key1","item1","key2","aValues","Set","add","bValues","_val","setEquiv","aEntries","_aEntries$i","item2","bEntries","_i2","_bEntries$_i","mapEquiv","keysA","GetIntrinsic","callBind","$indexOf","allowMissing","intrinsic","$apply","$call","$reflectApply","$gOPD","$defineProperty","$max","originalFunction","func","desc","applyBind","hasSymbols","toStr","origDefineProperty","hasPropertyDescriptors","supportsDescriptors","object","predicate","defineProperties","predicates","firstSource","to","nextSource","keysArray","nextIndex","nextKey","polyfill","isCallable","forEachArray","receiver","forEachString","string","charAt","forEachObject","list","thisArg","ERROR_MESSAGE","funcType","that","bound","binder","boundLength","boundArgs","Empty","implementation","$SyntaxError","SyntaxError","$Function","$TypeError","getEvalledConstructor","expressionSyntax","throwTypeError","ThrowTypeError","calleeThrows","gOPDthrows","getProto","needsEval","TypedArray","INTRINSICS","AggregateError","ArrayBuffer","Atomics","DataView","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","eval","EvalError","Float32Array","Float64Array","FinalizationRegistry","Int8Array","Int16Array","Int32Array","isFinite","JSON","parseFloat","parseInt","SharedArrayBuffer","Uint8ClampedArray","Uint16Array","Uint32Array","URIError","WeakMap","WeakRef","WeakSet","doEval","gen","LEGACY_ALIASES","hasOwn","$concat","$spliceApply","splice","$replace","$strSlice","rePropName","reEscapeChar","stringToPath","first","last","match","number","quote","subString","getBaseIntrinsic","alias","intrinsicName","parts","intrinsicBaseName","intrinsicRealName","skipFurtherCaching","isOwn","part","hasArrayLengthDefineBug","origSymbol","hasSymbolSham","symObj","getOwnPropertyNames","syms","toStringTag","ctor","superCtor","super_","TempCtor","hasToStringTag","$toString","callBound","isStandardArguments","isLegacyArguments","callee","supportsStandardArguments","badArrayLike","isCallableMarker","fnToStr","reflectApply","_","constructorRegex","isES6ClassFn","fnStr","documentDotAll","document","all","tryFunctionObject","strClass","GeneratorFunction","isFnRegex","generatorFunc","getGeneratorFunc","define","getPolyfill","shim","NaN","availableTypedArrays","g","globalThis","typedArrays","$slice","toStrTags","gOPD","typedArray","proto","superProto","tag","anyTrue","getter","tryTypedArrays","keysShim","isArgs","isEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","window","isObject","isFunction","isArguments","isString","theKeys","skipProto","j","skipConstructor","equalsConstructorPrototypeIfNotBuggy","origKeys","originalKeys","keysWorksWithArguments","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","arg","copy","fill","readUInt8","isArgumentsObject","isGeneratorFunction","whichTypedArray","isTypedArray","BigIntSupported","SymbolSupported","ObjectToString","numberValue","stringValue","booleanValue","bigIntValue","symbolValue","checkBoxedPrimitive","prototypeValueOf","isMapToString","isSetToString","isWeakMapToString","isWeakSetToString","isArrayBufferToString","isArrayBuffer","working","isDataViewToString","isDataView","isView","isUint8Array","isUint8ClampedArray","isUint16Array","isUint32Array","isInt8Array","isInt16Array","isInt32Array","isBigInt64Array","isBigUint64Array","isWeakMap","isWeakSet","SharedArrayBufferCopy","isSharedArrayBufferToString","isSharedArrayBuffer","isAsyncFunction","isMapIterator","isSetIterator","isGeneratorObject","isWebAssemblyCompiledModule","method","getOwnPropertyDescriptors","descriptors","formatRegExp","format","objects","stringify","isNull","deprecate","noDeprecation","throwDeprecation","traceDeprecation","trace","debugs","debugEnvRegex","NODE_DEBUG","debugEnv","toUpperCase","opts","seen","stylize","stylizeNoColor","colors","isBoolean","_extend","isUndefined","stylizeWithColor","formatValue","styleType","style","styles","ret","primitive","simple","isNumber","formatPrimitive","visibleKeys","hash","idx","arrayToHash","isError","formatError","output","braces","toUTCString","l","formatProperty","formatArray","reduce","prev","reduceToSingleString","line","ar","re","d","pad","n","debuglog","pid","types","isNullOrUndefined","isSymbol","isPrimitive","isBuffer","months","timestamp","time","getHours","getMinutes","getSeconds","getDate","getMonth","prop","inherits","origin","kCustomPromisifiedSymbol","callbackifyOnRejected","cb","newReason","promisify","original","promiseResolve","promiseReject","promise","reject","callbackify","callbackified","maybeCb","rej","foundName","os","fs","path","rbql","rbql_csv","csv_utils","number_regex","update_subcomponent_stats","field","is_first_line","max_field_components_lens","match_result","exec","cur_integer_part_length","cur_fractional_part_length","align_field","is_last_column","trim","delta_length","dot_pos","integer_delta_length","fractional_delta_length","trailing_spaces","make_table_name_key","file_path","find_table_path","vscode_global_state","main_table_dir","table_id","filepath","candidate_path","homedir","existsSync","isAbsolute","table_path","get_header_line","comment_prefix","num_lines","lineCount","lnum","line_text","lineAt","text","startsWith","RbqlIOHandlingError","VSCodeRecordIterator","RBQLInputIterator","delim","policy","has_header","table_name","variable_prefix","super","NR","NL","fields_info","first_defective_line","first_record","get_first_record","stop","header_line","smart_split","async","query_text","variable_map","parse_basic_variables","parse_array_variables","parse_attribute_variables","parse_dictionary_variables","get_line_rfc","rfc_line_buffer","record_line","accumulate_rfc_line_into_record","get_line_simple","do_get_record","record","warning","num_fields","get_warnings","inconsistent_records_info","entries","record_id","sort","condition","record_1","num_fields_1","record_2","num_fields_2","warn_msg","make_inconsistent_num_fields_warning","VSCodeWriter","RBQLOutputWriter","header_len","null_in_output","delim_in_simple_output","output_lines","polymorphic_join","simple_join","quoted_join","quoted_join_rfc","mono_join","set_header","header","write","fields","v","quote_field","rfc_quote_field","normalize_fields","out_fields","sub_array_delim","VSCodeTableRegistry","get_iterator_by_table_id","_table_id","VSCodeFileSystemCSVRegistry","RBQLTableRegistry","input_file_dir","encoding","stream","record_iterator","bulk_input_path","createReadStream","CSVRecordIterator","output_warnings","basename","read_header","input_reader","createInterface","closed","promise_resolve","promise_reject","output_promise","close","rbql_query_web","input_document","input_delim","input_policy","output_delim","output_policy","with_headers","join_tables_registry","input_iterator","output_writer","query","rbql_query_node","input_path","output_path","csv_encoding","user_init_code","input_stream","stdin","output_stream","close_output_on_finish","stdout","createWriteStream","is_ascii","default_init_source_path","read_user_init_code","dirname","CSVWriter","populate_optimistic_rfc_csv_record_map","requested_end_record","dst_record_map","record_begin","match_list","has_unbalanced_double_quote","get_default_js_udf_content","get_default_python_udf_content","align_columns","active_doc","column_stats","result_lines","has_edit","fnum","adjusted","shrink_columns","calc_column_stats","adjust_column_stats","adjusted_stats","column_stat","field_rgx","field_rgx_external_whitespaces","extract_next_field","src","dlm","preserve_quotes_and_whitespaces","allow_external_whitespaces","cidx","src_cur","match_obj","match_end","uidx","split_quoted_str","extraction_report","unquote_field","split_whitespace_separated_str","preserve_whitespaces","rgxp","unquote_fields","split_lines","external_rfc_line_buffer","current_line","multiline_row","RbqlParsingError","RbqlRuntimeError","InternalBadFieldError","bad_idx","params","replace_all","replacement","RBQLContext","writer","unnest_list","top_count","like_regex_cache","sort_key_expression","aggregation_stage","aggregation_key_expression","functional_aggregators","join_map_impl","join_map","lhs_join_var_expression","where_expression","select_expression","update_expressions","variables_init_code","query_context","wrong_aggregation_usage_error","RBQL_VERSION","check_if_brackets_match","opening_bracket","closing_bracket","parse_root_bracket_level_text_spans","text_spans","last_pos","bracket_stack","cur_char","span","unquote_string","quoted_str","column_info_from_text_span","text_span","string_literals","rbql_star_marker","simple_var_match","attribute_match","subscript_int_match","subscript_str_match","column_index","column_name","is_star","replaced_string_literal_id","unquoted_column_name","adhoc_parse_select_expression_to_column_infos","ts","stable_compare","safe_get","safe_join_get","safe_set","regexp_escape","like_to_regex","pattern","converted","like","matcher","LIKE","RBQLAggregationToken","marker_id","UnnestMarker","UNNEST","vals","unnest","Unnest","UNFOLD","parse_number","MinAggregator","stats","increment","cur_aggr","get_final","MaxAggregator","SumAggregator","AvgAggregator","cur_sum","cur_cnt","VarianceAggregator","cur_sum_sq","avg_val","MedianAggregator","m","CountAggregator","ArrayAggAggregator","post_proc","ConstGroupVerifier","output_index","const_values","old_value","init_aggregator","generator_name","MIN","Min","MAX","Max","COUNT","Count","SUM","sum","Sum","AVG","avg","Avg","VARIANCE","variance","Variance","MEDIAN","median","Median","ARRAY_AGG","array_agg","FOLD","add_to_set","dst_set","len_before","TopWriter","subwriter","NW","finish","UniqWriter","UniqCountWriter","records","old_val","unshift","SortedWriter","reverse_sort","unsorted_entries","stable_entry","reverse","entry","AggregateWriter","aggregators","aggregation_keys","all_keys","from","ag","InnerJoiner","get_rhs","lhs_key","get_join_records","LeftJoiner","null_record","max_record_len","StrictLeftJoiner","select_except","except_fields","select_simple","sort_key","sort_entry","select_aggregated","transparent_values","num_aggregators_found","trans_value","select_unnested","folded_fields","unnest_pos","findIndex","PROCESS_SELECT_COMMON","PROCESS_SELECT_SIMPLE","PROCESS_SELECT_JOIN","PROCESS_UPDATE_JOIN","PROCESS_UPDATE_SIMPLE","MAIN_LOOP_BODY","embed_expression","parent_code","child_placeholder","child_expression","embed_code","child_code","parent_lines","child_lines","placeholder_indentation","generate_main_loop_code","is_select_query","is_join_query","js_code","compile_and_run","main_loop_body","main_loop_promise","lower_case_query","toLowerCase","GROUP_BY","UPDATE","SELECT","JOIN","INNER_JOIN","LEFT_JOIN","LEFT_OUTER_JOIN","STRICT_LEFT_JOIN","ORDER_BY","WHERE","LIMIT","EXCEPT","WITH","get_ambiguous_error_msg","variable_name","get_all_matches","regexp","str_strip","strip_comments","cline","combine_string_literals","backend_expression","prefix","dst_variables_map","matches","field_num","initialize","index","js_string_escape_column_name","quote_char","query_probably_has_dictionary_variable","continuous_name_segments","continuous_segment","column_names","dict_test_rgx","escaped_column_name","column_names_source","column_names_from_query","zero_based_idx","map_variables_directly","ensure_no_ambiguous_variables","input_column_names","join_column_names","join_column_names_set","parse_join_expression","invalid_join_syntax_error","variable_pairs","pair_rgx","and_rgx","resolve_join_variables","input_variables_map","join_variables_map","lhs_variables","rhs_indices","valid_join_syntax_msg","variable_pair","join_var_1","join_var_2","lhs_key_index","rhs_key_index","generate_common_init_code","base_var","attr_var","generate_init_statements","variables_map","indent","code_lines","simple_var_name_rgx","var_info","variable_declaration_keyword","replace_star_count","aggregate_expression","replace_star_vars","rbql_expression","replacement_expression","replace_star_vars_for_header_parsing","translate_update_expression","update_expression","first_assignment_error","assignment_looking_rgx","dst_var_name","var_index","current_indent","translate_select_expression","expression_without_stars","translated","translated_for_header","separate_string_literals","rgx","format_parts","idx_before","literal_id","string_literal","start_index","lastIndex","format_expression","locate_statements","statement_groups","ig","statement","match_str","separate_actions","with_match","ordered_statements","statement_start","span_start","span_end","statement_params","new_span","find_top","rb_actions","select_action","translate_except_expression","except_expression","input_header","skip_vars","skip_indices","var_name","HashJoinMap","key_indices","hash_map","nr","key_index","polymorphic_get_key","get_single_key","get_multi_key","ki","get_record","nf","key_records","cleanup_query","remove_redundant_table_name","select_output_header","join_header","query_column_infos","output_header","qci","handle_query_modifier","TableIterator","table","normalize_column_names","stopped","TableWriter","external_table","SingleTableRegistry","shallow_parse_input_query","get_variables_map","rhs_table_id","join_record_iterator","get_header","sql_join_type","build","select_expression_for_ast","query_table","input_table","output_table","join_table","output_column_names","exception_to_error_info","exceptions_type_map","error_type","utf_decoding_error","rbql_init_source_path","readFileSync","name_record","index_path","content","lines","try_read_index","get_index_record","RecordQueue","push_stack","pull_stack","enqueue","dequeue","csv_path","first_record_should_be_emitted","header_preread_complete","decoder","TextDecoder","fatal","input_exhausted","started","utf8_bom_removed","partially_decoded_line","partially_decoded_line_ends_with_cr","resolve_current_record","reject_current_record","current_exception","produced_records_queue","process_line_polymorphic","process_partial_rfc_record_line","process_record_line","modifier","reset_external_callbacks","try_propagate_exception","exception","store_or_propagate_exception","pause","preread_first_record","try_resolve_next_record","isPaused","resume","parent_iterator","current_record_promise","num_records","process_line","clean_line","assumed_source_encoding","remove_utf8_bom","process_data_stream_chunk","data_chunk","decoded_string","decode","first_line_index","process_data_bulk","control_buffer","Buffer","process_data_stream_end","last_line","destroy","readFile","close_stream_on_finish","line_separator","setDefaultEncoding","error_obj","store_first_error","first_error","writer_error","_write_all","output_encoding","FileSystemCSVRegistry","interpret_named_csv_format","format_name","query_csv","require","possibleNames","out","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","vscode","rainbow_utils","is_web_ext","poor_rbql_async_design_workaround_timeout","sleep","ms","log_message","workspace","workspaceFolders","workspace_folder_uri","uri","Uri","joinPath","openTextDocument","languageId","editor","showTextDocument","test_no_autodetection","state_report","commands","executeCommand","check_initialization_state","initialized","lazy_loaded","test_autodetection","test_manual_enable_disable","field_components","test_align_stats","max_components_lens","aligned_field","test_field_align","adjusted_components","test_adjust_column_stats","test_task","rbql_backend","rbql_query","check_last_rbql_warnings","warnings","activeTextEditor","length_after_query","getText","check_last_rbql_report","error_msg","enable_rfc_newlines","test_rbql_web","filename_before","fileName","length_before_query","filename_after_copy_back","test_rbql_node","length_original","length_aligned","lint_report","length_shrinked","text_with_comma","test_align_shrink_lint","length_after_column_edit","length_after_delete","test_column_edit"],"sourceRoot":""}